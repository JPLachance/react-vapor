(window.webpackJsonp=window.webpackJsonp||[]).push([[658],{1742:function(t,e,n){"use strict";n.r(e),e.default="import * as _ from 'underscore';\r\nimport {IReduxAction} from '../../utils/ReduxUtils';\r\nimport {ISelectPayload, SelectActions} from './SelectActions';\r\n\r\nexport interface ISelectState {\r\n    id: string;\r\n}\r\n\r\nexport const selectInitialState: ISelectState = {id: undefined};\r\nexport const selectCompositeInitialState: ISelectState[] = [];\r\n\r\nexport const selectReducer = (\r\n    state: ISelectState = selectInitialState,\r\n    action: IReduxAction<ISelectPayload>\r\n): ISelectState => {\r\n    if (state.id !== action.payload.id && action.type !== SelectActions.add) {\r\n        return state;\r\n    }\r\n\r\n    switch (action.type) {\r\n        case SelectActions.add:\r\n            return {id: action.payload.id};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const selectCompositeReducer = (\r\n    state: ISelectState[] = selectCompositeInitialState,\r\n    action: IReduxAction<ISelectPayload>\r\n): ISelectState[] => {\r\n    switch (action.type) {\r\n        case SelectActions.add:\r\n            return [...state, selectReducer(undefined, action)];\r\n        case SelectActions.remove:\r\n            return _.reject(state, (listBox: ISelectState) => action.payload.id === listBox.id);\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n"}}]);
//# sourceMappingURL=658.bundle.js.map