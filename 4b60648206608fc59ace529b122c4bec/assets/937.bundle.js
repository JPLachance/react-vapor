(window.webpackJsonp=window.webpackJsonp||[]).push([[937],{2035:function(t,n,r){"use strict";r.r(n),n.default="import * as _ from 'underscore';\r\nimport {IItemBoxProps} from '../../components/itemBox/ItemBox';\r\nimport {IReduxAction} from '../../utils/ReduxUtils';\r\nimport {IStringListPayload, StringListActions} from './StringListActions';\r\n\r\nexport type IStringListCompositeState = {[id: string]: IStringListState};\r\n\r\nexport interface IStringListState {\r\n    id: string;\r\n    list: string[];\r\n}\r\n\r\nexport const stringListInitialState: IStringListCompositeState = {};\r\n\r\nexport const convertStringListToItemsBox = (\r\n    list: string[],\r\n    itemsBoxParams: Partial<IItemBoxProps> = {}\r\n): IItemBoxProps[] => _.map(list, (value: string) => ({...itemsBoxParams, value}));\r\nexport const convertItemsBoxToStringList = (items: IItemBoxProps[]): string[] => _.pluck(items, 'value');\r\n\r\nexport const stringListCompositeReducer = (\r\n    state: IStringListCompositeState = stringListInitialState,\r\n    action: IReduxAction<IStringListPayload>\r\n): IStringListCompositeState => {\r\n    if (\r\n        !action.payload ||\r\n        (!state[action.payload.id] && action.type !== StringListActions.add) ||\r\n        (state[action.payload.id] && action.type === StringListActions.add)\r\n    ) {\r\n        return state;\r\n    }\r\n\r\n    switch (action.type) {\r\n        case StringListActions.add:\r\n        case StringListActions.updateValues:\r\n        case StringListActions.reorder:\r\n            return {\r\n                ...state,\r\n                [action.payload.id]: {\r\n                    id: action.payload.id,\r\n                    list: action.payload.list,\r\n                },\r\n            };\r\n        case StringListActions.remove:\r\n            return _.omit(state, [action.payload.id]);\r\n        case StringListActions.addValue:\r\n            return {\r\n                ...state,\r\n                [action.payload.id]: {\r\n                    ...state[action.payload.id],\r\n                    list: action.payload.reset\r\n                        ? [action.payload.value]\r\n                        : _.uniq([...state[action.payload.id].list, action.payload.value]),\r\n                },\r\n            };\r\n        case StringListActions.removeValue:\r\n            return {\r\n                ...state,\r\n                [action.payload.id]: {\r\n                    ...state[action.payload.id],\r\n                    list: [..._.without(state[action.payload.id].list, action.payload.value)],\r\n                },\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n"}}]);
//# sourceMappingURL=937.bundle.js.map