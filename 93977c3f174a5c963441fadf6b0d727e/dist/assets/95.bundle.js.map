{"version":3,"sources":["webpack:///./src/components/examples/TableHOCLoadingExamples.tsx?6088"],"names":[],"mappings":"2FAAA,OAAe","file":"assets/95.bundle.js","sourcesContent":["export default \"import * as React from 'react';\\nimport {Section, TableHOC, tableWithBlankSlate, tableWithFilter} from 'react-vapor';\\nimport * as _ from 'underscore';\\n\\nimport {ExampleComponent} from '../ComponentsInterface';\\nimport {generateDataWithFacker, generateTableRow} from './TableHOCExamples';\\n\\nexport const TableHocLoadingExamples: ExampleComponent = () => (\\n    <Section level={1} title=\\\"Table loading examples\\\">\\n        <Section level={2} title=\\\"Table loading with the default number of row\\\">\\n            <TableLoadingExamplesWithDataNull />\\n        </Section>\\n        <Section level={2} title=\\\"Table loading with the number of row equal to the number of data\\\">\\n            <TableLoadingExamplesWithData />\\n        </Section>\\n        <Section level={2} title=\\\"Big table loading\\\">\\n            <BigTableLoadingExample />\\n        </Section>\\n    </Section>\\n);\\nTableHocLoadingExamples.title = 'TableHOC loading';\\n\\nconst fiveDataRows = generateDataWithFacker(10);\\n\\n// start-print\\n\\nconst tableId = 'TableLoadingExamples';\\nconst TableLoadingExamplesWithDataNull: React.FunctionComponent = () => (\\n    <Section>\\n        <TableLoadingComposed id={tableId} className=\\\"table\\\" data={null} renderBody={generateTableRow} isLoading />\\n    </Section>\\n);\\n\\nconst TableLoadingExamplesWithData: React.FunctionComponent = () => (\\n    <Section>\\n        <TableLoadingComposed\\n            id={tableId}\\n            className=\\\"table\\\"\\n            data={fiveDataRows}\\n            renderBody={generateTableRow}\\n            isLoading\\n        />\\n    </Section>\\n);\\n\\nconst BigTableLoadingExample: React.FunctionComponent = () => (\\n    <Section>\\n        <TableLoadingComposed\\n            id={tableId}\\n            className=\\\"table big-table\\\"\\n            data={fiveDataRows}\\n            renderBody={generateTableRow}\\n            isLoading\\n        />\\n    </Section>\\n);\\n\\nconst TableLoadingComposed = _.compose(\\n    tableWithBlankSlate({title: 'No data caused the table to be empty'}),\\n    tableWithFilter({\\n        matchFilter: (filter: string, data: any) => data.username.toLowerCase().indexOf(filter.toLowerCase()) !== -1,\\n    }),\\n    tableWithBlankSlate({title: 'Filter caused the table to be empty'})\\n)(TableHOC);\\n\";"],"sourceRoot":""}