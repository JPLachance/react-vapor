(window.webpackJsonp=window.webpackJsonp||[]).push([[356],{1466:function(r,n,s){"use strict";s.r(n),n.default="import 'codemirror/mode/javascript/javascript';\r\n\r\nimport * as classNames from 'classnames';\r\nimport * as React from 'react';\r\n\r\nimport {Svg} from '../svg/Svg';\r\nimport {CodeEditor} from './CodeEditor';\r\nimport {CodeMirrorModes} from './EditorConstants';\r\n\r\nexport interface IJSONEditorProps {\r\n    value: string;\r\n    readOnly?: boolean;\r\n    onChange?: (json: string, inError: boolean) => void;\r\n    errorMessage?: string;\r\n}\r\n\r\nexport interface IJSONEditorState {\r\n    isInError: boolean;\r\n}\r\n\r\nexport const DEFAULT_JSON_ERROR_MESSAGE: string = 'The JSON configuration is syntactically invalid.';\r\n\r\nexport class JSONEditor extends React.Component<IJSONEditorProps, IJSONEditorState> {\r\n    static defaultProps: Partial<IJSONEditorProps> = {\r\n        errorMessage: DEFAULT_JSON_ERROR_MESSAGE,\r\n    };\r\n\r\n    constructor(props: IJSONEditorProps, state: IJSONEditorState) {\r\n        super(props, state);\r\n        this.state = {\r\n            isInError: false,\r\n        };\r\n    }\r\n\r\n    render() {\r\n        const classes: string = classNames('form-group', {\r\n            'input-validation-error': this.state.isInError,\r\n        });\r\n        return (\r\n            <div className={classes}>\r\n                <CodeEditor\r\n                    value={this.props.value}\r\n                    onChange={(json: string) => this.handleChange(json)}\r\n                    mode={CodeMirrorModes.JSON}\r\n                    readOnly={this.props.readOnly}\r\n                />\r\n                {this.getValidationDetails()}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private getValidationDetails(): JSX.Element {\r\n        return this.state.isInError ? (\r\n            <div className=\"input-validation-error-details\">\r\n                <Svg className=\"input-validation-error-icon\" svgName=\"message-alert\" svgClass=\"icon fill-white\" />\r\n                <span className=\"input-validation-error-message\">{this.props.errorMessage}</span>\r\n            </div>\r\n        ) : null;\r\n    }\r\n\r\n    private handleChange(json: string) {\r\n        let inError: boolean = false;\r\n        try {\r\n            JSON.parse(json);\r\n        } catch (error) {\r\n            inError = true;\r\n        }\r\n        this.setState({\r\n            isInError: inError,\r\n        });\r\n        this.callOnChange(json, inError);\r\n    }\r\n\r\n    private callOnChange(json: string, inError: boolean) {\r\n        this.props.onChange?.(json, inError);\r\n    }\r\n}\r\n"}}]);
//# sourceMappingURL=356.bundle.js.map