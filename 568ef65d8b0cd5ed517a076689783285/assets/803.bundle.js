(window.webpackJsonp=window.webpackJsonp||[]).push([[803],{1904:function(e,n,a){"use strict";a.r(n),n.default="import * as React from 'react';\nimport * as _ from 'underscore';\nimport {ExampleComponent} from '../../../../docs/src/components/ComponentsInterface';\nimport {Section} from '../../section/Section';\nimport {TableHOC} from '../TableHOC';\nimport {tableWithBlankSlate} from '../TableWithBlankSlate';\nimport {tableWithFilter} from '../TableWithFilter';\nimport {generateDataWithFacker, generateTableRow} from './TableHOCExamples';\n\nexport const TableHocLoadingExamples: ExampleComponent = () => (\n    <Section level={1} title=\"Table loading examples\">\n        <Section level={2} title=\"Table loading with the default number of row\">\n            <TableLoadingExamplesWithDataNull />\n        </Section>\n        <Section level={2} title=\"Table loading with the number of row equal to the number of data\">\n            <TableLoadingExamplesWithData />\n        </Section>\n        <Section level={2} title=\"Big table loading\">\n            <BigTableLoadingExample />\n        </Section>\n    </Section>\n);\nTableHocLoadingExamples.title = 'TableHOC loading';\n\nconst fiveDataRows = generateDataWithFacker(10);\n\n// start-print\n\nconst tableId = 'TableLoadingExamples';\nconst TableLoadingExamplesWithDataNull: React.FunctionComponent = () => (\n    <Section>\n        <TableLoadingComposed id={tableId} className=\"table\" data={null} renderBody={generateTableRow} isLoading />\n    </Section>\n);\n\nconst TableLoadingExamplesWithData: React.FunctionComponent = () => (\n    <Section>\n        <TableLoadingComposed\n            id={tableId}\n            className=\"table\"\n            data={fiveDataRows}\n            renderBody={generateTableRow}\n            isLoading\n        />\n    </Section>\n);\n\nconst BigTableLoadingExample: React.FunctionComponent = () => (\n    <Section>\n        <TableLoadingComposed\n            id={tableId}\n            className=\"table big-table\"\n            data={fiveDataRows}\n            renderBody={generateTableRow}\n            isLoading\n        />\n    </Section>\n);\n\nconst TableLoadingComposed = _.compose(\n    tableWithBlankSlate({title: 'No data caused the table to be empty'}),\n    tableWithFilter({\n        matchFilter: (filter: string, data: any) => data.username.toLowerCase().indexOf(filter.toLowerCase()) !== -1,\n    }),\n    tableWithBlankSlate({title: 'Filter caused the table to be empty'})\n)(TableHOC);\n"}}]);
//# sourceMappingURL=803.bundle.js.map