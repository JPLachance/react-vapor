(window.webpackJsonp=window.webpackJsonp||[]).push([[337],{1448:function(e,r,n){"use strict";n.r(r),r.default="import * as React from 'react';\r\nimport * as _ from 'underscore';\r\nimport {DropdownSearch, IDropdownOption, IDropdownSearchProps} from '../DropdownSearch';\r\nimport {MultiselectInput} from './MultiSelectInput';\r\n\r\nexport interface IMultiSelectDropdownSearchProps extends IDropdownSearchProps {\r\n    displayedOptions: IDropdownOption[];\r\n    selectedOptions: IDropdownOption[];\r\n}\r\n\r\nexport class MultiSelectDropdownSearch extends DropdownSearch {\r\n    static defaultProps: IMultiSelectDropdownSearchProps = {\r\n        ...DropdownSearch.defaultProps,\r\n        createOptionText: 'Create option for ',\r\n        isOpened: false,\r\n        options: [],\r\n        displayedOptions: [],\r\n        selectedOptions: [],\r\n        filterText: '',\r\n    };\r\n\r\n    protected getNoOptions(): JSX.Element[] {\r\n        if (\r\n            this.props.filterText.length > 0 &&\r\n            !_.findWhere(this.getSelectedOptions(), {value: this.props.filterText})\r\n        ) {\r\n            return [\r\n                <li\r\n                    key=\"noResultDropdownSearch\"\r\n                    onMouseDown={() => this.props.onCustomOptionClick(this.props.filterText)}\r\n                >\r\n                    <span className=\"no-search-results\">{`${this.props.createOptionText}\"${this.props.filterText}\"`}</span>\r\n                </li>,\r\n            ];\r\n        }\r\n        return super.getNoOptions();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={this.getClasses()} style={this.getStyles()}>\r\n                <MultiselectInput\r\n                    selectedOptions={this.getSelectedOptions()}\r\n                    onRemoveClick={this.props.onRemoveSelectedOption}\r\n                    onRemoveAll={this.props.onRemoveAllSelectedOptions}\r\n                    onFilterTextChange={this.props.onFilterTextChange}\r\n                    onBlur={() => this.props.onBlur(this.props.options)}\r\n                    onFocus={this.props.onFocus}\r\n                    onKeyDownFilterBox={(e: React.KeyboardEvent<HTMLInputElement>) => this.handleOnKeyDownFilterBox(e)}\r\n                    filterPlaceholder={this.props.filterPlaceholder}\r\n                    filterText={this.props.filterText}\r\n                    deselectAllTooltipText={this.props.deselectAllTooltipText}\r\n                />\r\n                <ul\r\n                    className=\"dropdown-menu\"\r\n                    ref={(input: HTMLUListElement) => {\r\n                        this.ulElement = input;\r\n                    }}\r\n                >\r\n                    {this.getDropdownOptions()}\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"}}]);
//# sourceMappingURL=337.bundle.js.map