{"version":3,"sources":["webpack:///./src/components/searchBar/SearchBarExamples.tsx?b91f","webpack:///./src/components/searchBar/SearchBar.tsx?abf3","webpack:///./src/components/searchBar/SearchBarConnected.tsx?50a0"],"names":["props","state","value","disabled","searching","render","id","placeholder","this","onChange","event","setState","target","onSearch","filterText","setTimeout","document","querySelector","focus","className","alert","SearchBarExample","dispatch","type","onClick","searchBar","getState","searchBars","componentWillMount","onMount","componentWillUnmount","onUnmount","minWidth","maxWidth","getContainerClasses","style","getInputClasses","onKeyUp","keyCode","enter","search","getSearchIcon","containerClassNames","inputClassNames","searchIcon","svgName","svgClass","defaultProps","SearchBarConnected","ownProps","disabledOnMount","mergeProps"],"mappings":"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","file":"assets/989.bundle.js","sourcesContent":["import * as React from 'react';\r\nimport {findWhere} from 'underscore';\r\nimport {ExamplesStore} from '../../../docs/Store';\r\nimport {ISearchBarProps, ISearchBarStateProps, SearchBar} from './SearchBar';\r\nimport {toggleSearchBarDisabled, toggleSearching} from './SearchBarActions';\r\nimport {SearchBarConnected} from './SearchBarConnected';\r\n\r\nclass SearchBarExample extends React.Component<{}, ISearchBarStateProps> {\r\n    constructor(props: ISearchBarProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            value: '',\r\n            disabled: false,\r\n            searching: false,\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <SearchBar\r\n                id=\"search-bar-1\"\r\n                placeholder=\"Search awesome things\"\r\n                value={this.state.value}\r\n                disabled={this.state.disabled}\r\n                searching={this.state.searching}\r\n                onChange={(event) => this.setState({value: event.target.value})}\r\n                onSearch={(filterText: string) => {\r\n                    this.setState({searching: true});\r\n                    setTimeout(() => {\r\n                        this.setState({searching: false});\r\n                        (document.querySelector('#search-bar-1') as HTMLElement).focus();\r\n                    }, 800);\r\n                }}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport class SearchBarExamples extends React.Component<any, any> {\r\n    render() {\r\n        return (\r\n            <div className=\"mt2\">\r\n                <div className=\"form-group\">\r\n                    <label className=\"form-control-label\">SearchBar disabled</label>\r\n                    <div className=\"text-dark-grey\">\r\n                        <SearchBar\r\n                            id=\"search-bar-2\"\r\n                            disabled\r\n                            placeholder=\"Currently disabled.\"\r\n                            onSearch={() => alert('Implement your own search logic with the onSearch prop.')}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label className=\"form-control-label\">SearchBar searching</label>\r\n                    <div className=\"text-dark-grey\">\r\n                        <SearchBar\r\n                            id=\"search-bar-3\"\r\n                            searching\r\n                            placeholder=\"Searching for something\"\r\n                            onSearch={() => alert('Implement your own search logic with the onSearch prop.')}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label className=\"form-control-label\">SearchBar not connected but fully working</label>\r\n                    <div className=\"text-dark-grey\">\r\n                        <SearchBarExample />\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label className=\"form-control-label\">SearchBarConnected</label>\r\n                    <div className=\"text-dark-grey\">\r\n                        <SearchBarConnected\r\n                            id=\"search-bar-4\"\r\n                            placeholder=\"Type something and press enter, or click the loupe\"\r\n                            onSearch={(filterText: string) => {\r\n                                ExamplesStore.dispatch(toggleSearching('search-bar-4', true));\r\n                                setTimeout(() => {\r\n                                    ExamplesStore.dispatch(toggleSearching('search-bar-4', false));\r\n                                    (document.querySelector('#search-bar-4') as HTMLElement).focus();\r\n                                }, 800);\r\n                            }}\r\n                        />\r\n                        <button\r\n                            type=\"button\"\r\n                            onClick={() => {\r\n                                const searchBar = findWhere(ExamplesStore.getState().searchBars, {\r\n                                    id: 'search-bar-4',\r\n                                });\r\n                                ExamplesStore.dispatch(toggleSearchBarDisabled('search-bar-4', !searchBar.disabled));\r\n                            }}\r\n                        >\r\n                            Toggle disabled state\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import * as classNames from 'classnames';\r\nimport * as React from 'react';\r\nimport {IClassName} from '../../utils/ClassNameUtils';\r\nimport {keyCode} from '../../utils/InputUtils';\r\nimport {Svg} from '../svg/Svg';\r\n\r\nexport interface ISearchBarConnectedProps {\r\n    /**\r\n     * If true, the search bar will be disabled in the UI and in the state on mount.\r\n     * False by default.\r\n     */\r\n    disabledOnMount?: boolean;\r\n}\r\n\r\nexport interface ISearchBarOwnProps extends ISearchBarConnectedProps {\r\n    id: string;\r\n    onSearch: (filterText: string) => void;\r\n    containerClassNames?: IClassName;\r\n    inputClassNames?: IClassName;\r\n    placeholder?: string;\r\n    minWidth?: string;\r\n    maxWidth?: string;\r\n}\r\n\r\nexport interface ISearchBarStateProps {\r\n    disabled?: boolean;\r\n    searching?: boolean;\r\n    value?: string;\r\n}\r\n\r\nexport interface ISearchBarDispatchProps {\r\n    onMount?: () => void;\r\n    onUnmount?: () => void;\r\n    onChange?: (event: React.ChangeEvent<HTMLInputElement>) => void;\r\n}\r\n\r\nexport interface ISearchBarProps extends ISearchBarOwnProps, ISearchBarStateProps, ISearchBarDispatchProps {}\r\n\r\nexport class SearchBar extends React.Component<ISearchBarProps> {\r\n    static defaultProps: Partial<ISearchBarProps> = {\r\n        placeholder: '',\r\n        disabled: false,\r\n        searching: false,\r\n        value: '',\r\n        minWidth: '500px',\r\n        maxWidth: '500px',\r\n    };\r\n\r\n    componentWillMount() {\r\n        if (this.props.onMount) {\r\n            this.props.onMount();\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (this.props.onUnmount) {\r\n            this.props.onUnmount();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {minWidth, maxWidth} = this.props;\r\n\r\n        return (\r\n            <div className={this.getContainerClasses()} style={{minWidth, maxWidth}}>\r\n                <input\r\n                    id={this.props.id}\r\n                    type=\"text\"\r\n                    className={this.getInputClasses()}\r\n                    placeholder={this.props.placeholder}\r\n                    disabled={this.props.disabled || this.props.searching}\r\n                    value={this.props.value}\r\n                    onKeyUp={(event) => event.keyCode === keyCode.enter && this.search()}\r\n                    onChange={(event) => this.props.onChange && this.props.onChange(event)}\r\n                />\r\n                <div className=\"search-bar-icon-container\">{this.getSearchIcon()}</div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private getContainerClasses(): string {\r\n        return classNames(\r\n            'search-bar',\r\n            {\r\n                'search-bar-disabled': this.props.disabled,\r\n                'search-bar-loading': this.props.searching,\r\n            },\r\n            this.props.containerClassNames\r\n        );\r\n    }\r\n\r\n    private getInputClasses(): string {\r\n        return classNames('search-bar-input', this.props.inputClassNames);\r\n    }\r\n\r\n    private getSearchIcon(): JSX.Element {\r\n        const searchIcon = !this.props.searching ? (\r\n            <Svg svgName=\"search\" svgClass={this.props.disabled ? 'fill-light-grey' : 'fill-medium-blue'} />\r\n        ) : (\r\n            <div className=\"search-bar-spinner\"></div>\r\n        );\r\n\r\n        return !this.props.searching && !this.props.disabled ? (\r\n            <span onClick={() => this.search()}>{searchIcon}</span>\r\n        ) : (\r\n            searchIcon\r\n        );\r\n    }\r\n\r\n    private search() {\r\n        if (!this.props.disabled && !this.props.searching) {\r\n            this.props.onSearch(this.props.value);\r\n        }\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {findWhere} from 'underscore';\r\nimport {IReactVaporState} from '../../ReactVapor';\r\nimport {IDispatch, ReduxUtils} from '../../utils/ReduxUtils';\r\nimport {\r\n    ISearchBarDispatchProps,\r\n    ISearchBarOwnProps,\r\n    ISearchBarProps,\r\n    ISearchBarStateProps,\r\n    SearchBar,\r\n} from './SearchBar';\r\nimport {addSearchBar, removeSearchBar, setSearchBarValue} from './SearchBarActions';\r\n\r\nconst mapStateToProps = (state: IReactVaporState, ownProps: ISearchBarOwnProps): ISearchBarStateProps => {\r\n    const searchBar = findWhere(state.searchBars, {id: ownProps.id});\r\n\r\n    return {\r\n        disabled: searchBar && searchBar.disabled,\r\n        value: searchBar && searchBar.value,\r\n        searching: searchBar && searchBar.searching,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: IDispatch, ownProps: ISearchBarOwnProps): ISearchBarDispatchProps => ({\r\n    onMount: () => dispatch(addSearchBar(ownProps.id, ownProps.disabledOnMount)),\r\n    onUnmount: () => dispatch(removeSearchBar(ownProps.id)),\r\n    onChange: (event: React.ChangeEvent<HTMLInputElement>) =>\r\n        dispatch(setSearchBarValue(ownProps.id, event.target.value)),\r\n});\r\n\r\nexport const SearchBarConnected: React.ComponentClass<ISearchBarProps> = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps,\r\n    ReduxUtils.mergeProps\r\n)(SearchBar);\r\n"],"sourceRoot":""}