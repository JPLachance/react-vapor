{"version":3,"sources":["webpack:///./src/components/subNavigation/examples/SubNavigationExamples.tsx?5ef8","webpack:///./src/components/section/Section.tsx?b7b7","webpack:///./src/components/subNavigation/SubNavigation.tsx?b049","webpack:///./src/components/subNavigation/SubNavigationSelector.ts?e173","webpack:///./src/components/subNavigation/SubNavigationConnected.tsx?2d58"],"names":["SubNavigationExamples","SubNavigationConnectedExamples","exampleItems","label","id","title","level","className","style","height","items","defaultSelected","width","svgName","svgClass","Section","children","description","mods","titleProps","H","ISubNavigationPropsToOmit","handleItemClick","e","preventDefault","props","onClickItem","componentWillMount","this","onRender","componentWillUnmount","onDestroy","render","selected","navProps","link","key","href","onClick","getSubNavigation","state","subNavigationId","subNavigations","SubNavigationSelector","getSelectedItem","subNav","SubNavigationConnected","ownProps","dispatch","itemId","mergeProps"],"mappings":"8FAAA,kGAOaA,EAA0C,WAAM,uBAACC,EAA8B,OAItFC,EAAe,CACjB,CAACC,MAAO,SAAUC,GAAI,UACtB,CAACD,MAAO,UAAWC,GAAI,WACvB,CAACD,MAAO,+BAAgCC,GAAI,aAC5C,CAACD,MAAO,iBAAkBC,GAAI,iBAC9B,CAACD,MAAO,eAAgBC,GAAI,iBAG1BH,EAA0D,WAAM,OAClE,gBAAC,IAAO,CAACI,MAAM,2BACX,gBAAC,IAAO,CAACC,MAAO,EAAGD,MAAM,kBACrB,uBAAKE,UAAU,OAAOC,MAAO,CAACC,OAAQ,UAClC,gBAAC,IAAsB,CAACL,GAAG,gBAAgBM,MAAOR,MAG1D,gBAAC,IAAO,CAACI,MAAO,EAAGD,MAAM,wCACrB,uBAAKE,UAAU,OAAOC,MAAO,CAACC,OAAQ,UAClC,gBAAC,IAAsB,CAACL,GAAG,iBAAiBM,MAAOR,EAAcS,gBAAgB,gBAGzF,gBAAC,IAAO,CAACL,MAAO,EAAGD,MAAM,yCACrB,uBAAKE,UAAU,OAAOC,MAAO,CAACI,MAAO,QAASH,OAAQ,UAClD,gBAAC,IAAsB,CACnBL,GAAG,gBACHM,MAAO,CACH,CACIP,MACI,wBAAMI,UAAU,sBACZ,wBAAMA,UAAU,YAAU,UAC1B,gBAAC,IAAG,CAACM,QAAQ,WAAWC,SAAS,qBAGzCV,GAAI,UAER,CACID,MACI,wBAAMI,UAAU,sBACZ,wBAAMA,UAAU,YAAU,WAC1B,gBAAC,IAAG,CAACM,QAAQ,WAAWC,SAAS,qBAGzCV,GAAI,WAER,CACID,MACI,wBAAMI,UAAU,sBACZ,wBAAMA,UAAU,gBAAc,gCAC9B,gBAAC,IAAG,CAACM,QAAQ,WAAWC,SAAS,qBAGzCV,GAAI,aAER,CACID,MACI,wBAAMI,UAAU,sBACZ,wBAAMA,UAAU,YAAU,kBAC1B,gBAAC,IAAG,CAACM,QAAQ,aAAaC,SAAS,mBAG3CV,GAAI,iBAER,CACID,MACI,wBAAMI,UAAU,sBACZ,wBAAMA,UAAU,YAAU,gBAC1B,gBAAC,IAAG,CAACM,QAAQ,aAAaC,SAAS,mBAG3CV,GAAI,wB,oSClEnBW,EAAkD,SAAC,G,IAC5DC,EAAA,EAAAA,SACAX,EAAA,EAAAA,MACAY,EAAA,EAAAA,YACAV,EAAA,EAAAA,UACAW,EAAA,EAAAA,KACA,IAAAZ,aAAA,IAAQ,EAAR,IAEMa,EAA2C,CAC7CZ,UAAW,uBACXS,SAAUX,GAERe,EAAI,KAAId,EAAQ,GACtB,OACI,4BAAUC,UAAW,EAAWA,EAAWW,EAAM,SAASZ,EAAK,qCAC1DD,GAAS,gBAACe,EAAC,KAAKD,IAChBF,GAAe,qBAAGV,UAAU,eAAeU,GAC3CD,K,imBCEPK,EAA4B,CAAH,4FAE/B,yE,OA+BY,EAAAC,gBAAkB,SAACC,EAAwCnB,G,QAC/DmB,EAAEC,iBACoB,QAAtB,OAAKC,OAAMC,mBAAW,gBAAGtB,I,EAEjC,OAnCmC,OAC/B,YAAAuB,mBAAA,W,QACuB,QAAnB,KAAAC,KAAKH,OAAMI,gBAAQ,kBAGvB,YAAAC,qBAAA,W,QACwB,QAApB,KAAAF,KAAKH,OAAMM,iBAAS,kBAGxB,YAAAC,OAAA,sBACUC,EAAWL,KAAKH,MAAMQ,UAAYL,KAAKH,MAAMd,gBAC7CuB,EAAW,eAAKN,KAAKH,MAAOJ,GAC5BX,EAAQ,cAAIkB,KAAKH,MAAMf,OAAO,SAAC,G,IAACN,EAAA,EAAAA,GAAI+B,EAAA,EAAAA,KAAMhC,EAAA,EAAAA,MAA+B,OAC3E,sBAAIiC,IAAKhC,EAAIG,UAAW,EAAW,sBAAuB,CAAC,eAAgBH,IAAO6B,KAC9E,qBACII,KAAMF,GAAQ,IACd5B,UAAU,2BACV+B,QAAS,SAACf,GAA2C,SAAKD,gBAAgBC,EAAGnB,KAE5ED,OAKb,OACI,2BAAS+B,EAAQ,CAAE3B,UAAW,EAAW,iBAAkB2B,EAAS3B,aAChE,sBAAIA,UAAU,wBAAwBG,KAStD,EAnCA,CAAmC,kB,iCClCnC,qDAMM6B,EAAmB,SAACC,EAAyBC,GAC/C,mBAAYD,EAAME,eAAgB,CAACtC,GAAIqC,KAI9BE,EAAwB,CACjCJ,iBAAgB,EAChBK,gBAJoB,YAAeL,GAAkB,SAACM,GAAM,eAAqB,OAArB,EAAW,QAAX,EAAKA,SAAM,eAAEZ,UAAQ,EAAI,Q,iCCTzF,uFAkCaa,EAC4B,aApBjB,SAACN,EAAyBO,GAA+D,OAC7Gd,SAAU,IAAsBW,gBAAgBJ,EAAOO,EAAS3C,QAGzC,SACvB4C,EACAD,GAC8B,OAC9BlB,SAAU,WACN,OAAAmB,EACI,YACID,EAAS3C,GACT2C,EAASpC,gBAAkB,CAACoC,EAASpC,iBAAmB,QAAQoC,EAASrC,MAAO,SAG5FqB,UAAW,WAAM,OAAAiB,EAAS,YAAoBD,EAAS3C,MACvDsB,YAAa,SAACuB,GAAW,OAAAD,EAAS,YAAoBD,EAAS3C,GAAI6C,QAOnE,IAAWC,WAH0B,CAIvC","file":"assets/1036.bundle.js","sourcesContent":["import * as React from 'react';\r\n\r\nimport {ExampleComponent} from '../../../../docs/src/components/ComponentsInterface';\r\nimport {Section} from '../../section/Section';\r\nimport {Svg} from '../../svg/Svg';\r\nimport {SubNavigationConnected} from '../SubNavigationConnected';\r\n\r\nexport const SubNavigationExamples: ExampleComponent = () => <SubNavigationConnectedExamples />;\r\n\r\n// start-print\r\n\r\nconst exampleItems = [\r\n    {label: 'Avatar', id: 'avatar'},\r\n    {label: 'Titanic', id: 'titanic'},\r\n    {label: 'Star Wars: The Force Awakens', id: 'star-wars'},\r\n    {label: 'Jurassic World', id: 'jurasic-world'},\r\n    {label: 'The Avengers', id: 'the-avengers'},\r\n];\r\n\r\nconst SubNavigationConnectedExamples: React.FunctionComponent = () => (\r\n    <Section title=\"Sub Navigation Examples\">\r\n        <Section level={2} title=\"Sub Navigation\">\r\n            <div className=\"flex\" style={{height: '200px'}}>\r\n                <SubNavigationConnected id=\"first-sub-nav\" items={exampleItems} />\r\n            </div>\r\n        </Section>\r\n        <Section level={2} title=\"Sub Navigation with default selected\">\r\n            <div className=\"flex\" style={{height: '120px'}}>\r\n                <SubNavigationConnected id=\"second-sub-nav\" items={exampleItems} defaultSelected=\"star-wars\" />\r\n            </div>\r\n        </Section>\r\n        <Section level={2} title=\"Sub-navigation with custom JSX labels\">\r\n            <div className=\"flex\" style={{width: '250px', height: '200px'}}>\r\n                <SubNavigationConnected\r\n                    id=\"third-sub-nav\"\r\n                    items={[\r\n                        {\r\n                            label: (\r\n                                <span className=\"flex space-between\">\r\n                                    <span className=\"truncate\">Avatar</span>\r\n                                    <Svg svgName=\"thumb-up\" svgClass=\"icon fill-green\" />\r\n                                </span>\r\n                            ),\r\n                            id: 'avatar',\r\n                        },\r\n                        {\r\n                            label: (\r\n                                <span className=\"flex space-between\">\r\n                                    <span className=\"truncate\">Titanic</span>\r\n                                    <Svg svgName=\"thumb-up\" svgClass=\"icon fill-green\" />\r\n                                </span>\r\n                            ),\r\n                            id: 'titanic',\r\n                        },\r\n                        {\r\n                            label: (\r\n                                <span className=\"flex space-between\">\r\n                                    <span className=\"truncate pr1\">Star Wars: The Force Awakens</span>\r\n                                    <Svg svgName=\"thumb-up\" svgClass=\"icon fill-green\" />\r\n                                </span>\r\n                            ),\r\n                            id: 'star-wars',\r\n                        },\r\n                        {\r\n                            label: (\r\n                                <span className=\"flex space-between\">\r\n                                    <span className=\"truncate\">Jurassic World</span>\r\n                                    <Svg svgName=\"thumb-down\" svgClass=\"icon fill-red\" />\r\n                                </span>\r\n                            ),\r\n                            id: 'jurasic-world',\r\n                        },\r\n                        {\r\n                            label: (\r\n                                <span className=\"flex space-between\">\r\n                                    <span className=\"truncate\">The Avengers</span>\r\n                                    <Svg svgName=\"thumb-down\" svgClass=\"icon fill-red\" />\r\n                                </span>\r\n                            ),\r\n                            id: 'the-avengers',\r\n                        },\r\n                    ]}\r\n                />\r\n            </div>\r\n        </Section>\r\n    </Section>\r\n);\r\n","import * as classNames from 'classnames';\nimport * as React from 'react';\n\ntype SectionMods = 'mod-header-padding' | 'mod-form-top-bottom-padding' | 'material-card';\n\nexport interface ISectionProps {\n    title?: string;\n    description?: React.ReactNode;\n    className?: string;\n    mods?: SectionMods | SectionMods[];\n    level?: 1 | 2 | 3;\n}\n\nexport const Section: React.FunctionComponent<ISectionProps> = ({\n    children,\n    title,\n    description,\n    className,\n    mods,\n    level = 1,\n}) => {\n    const titleProps: React.HTMLProps<HTMLElement> = {\n        className: 'text-medium-blue mb1',\n        children: title,\n    };\n    const H = `h${level + 1}`;\n    return (\n        <fieldset className={classNames(className, mods, `level-${level} form-group mod-padding-children`)}>\n            {title && <H {...titleProps} />}\n            {description && <p className=\"description\">{description}</p>}\n            {children}\n        </fieldset>\n    );\n};\n","import * as classNames from 'classnames';\r\nimport * as React from 'react';\r\nimport {keys} from 'ts-transformer-keys';\r\nimport {map, omit} from 'underscore';\r\n\r\nexport interface ISubNavigationOwnProps extends React.ClassAttributes<SubNavigation> {\r\n    id?: string;\r\n    items: ISubNavigationItem[];\r\n    defaultSelected?: string;\r\n}\r\n\r\nexport interface ISubNavigationStateProps {\r\n    selected?: string;\r\n}\r\n\r\nexport interface ISubNavigationDispatchProps {\r\n    onRender?: () => void;\r\n    onDestroy?: () => void;\r\n    onClickItem?: (id: string) => void;\r\n}\r\n\r\nexport interface ISubNavigationItem {\r\n    id: string;\r\n    label: React.ReactNode;\r\n    link?: string;\r\n}\r\n\r\nexport interface ISubNavigationProps\r\n    extends ISubNavigationOwnProps,\r\n        ISubNavigationStateProps,\r\n        ISubNavigationDispatchProps {}\r\n\r\nconst ISubNavigationPropsToOmit = keys<ISubNavigationProps>();\r\n\r\nexport class SubNavigation extends React.PureComponent<ISubNavigationProps & React.HTMLAttributes<HTMLElement>> {\r\n    componentWillMount() {\r\n        this.props.onRender?.();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.onDestroy?.();\r\n    }\r\n\r\n    render() {\r\n        const selected = this.props.selected || this.props.defaultSelected;\r\n        const navProps = omit(this.props, ISubNavigationPropsToOmit);\r\n        const items = map(this.props.items, ({id, link, label}: ISubNavigationItem) => (\r\n            <li key={id} className={classNames('sub-navigation-item', {'mod-selected': id === selected})}>\r\n                <a\r\n                    href={link || '#'}\r\n                    className=\"sub-navigation-item-link\"\r\n                    onClick={(e: React.MouseEvent<HTMLAnchorElement>) => this.handleItemClick(e, id)}\r\n                >\r\n                    {label}\r\n                </a>\r\n            </li>\r\n        ));\r\n\r\n        return (\r\n            <nav {...navProps} className={classNames('sub-navigation', navProps.className)}>\r\n                <ul className=\"sub-navigation-items\">{items}</ul>\r\n            </nav>\r\n        );\r\n    }\r\n\r\n    private handleItemClick = (e: React.MouseEvent<HTMLAnchorElement>, id: string) => {\r\n        e.preventDefault();\r\n        this.props.onClickItem?.(id);\r\n    };\r\n}\r\n","import {createSelector} from 'reselect';\r\nimport * as _ from 'underscore';\r\n\r\nimport {IReactVaporState} from '../../ReactVapor';\r\nimport {ISubNavigationState} from './SubNavigationReducers';\r\n\r\nconst getSubNavigation = (state: IReactVaporState, subNavigationId: string): ISubNavigationState =>\r\n    _.findWhere(state.subNavigations, {id: subNavigationId});\r\n\r\nconst getSelectedItem = createSelector(getSubNavigation, (subNav) => subNav?.selected ?? '');\r\n\r\nexport const SubNavigationSelector = {\r\n    getSubNavigation,\r\n    getSelectedItem,\r\n};\r\n","import {connect} from 'react-redux';\r\nimport * as _ from 'underscore';\r\n\r\nimport {IReactVaporState, IReduxActionsPayload} from '../../ReactVapor';\r\nimport {IReduxAction, ReduxUtils} from '../../utils/ReduxUtils';\r\nimport {\r\n    ISubNavigationDispatchProps,\r\n    ISubNavigationOwnProps,\r\n    ISubNavigationProps,\r\n    ISubNavigationStateProps,\r\n    SubNavigation,\r\n} from './SubNavigation';\r\nimport {addSubNavigation, removeSubNavigation, selectSubNavigation} from './SubNavigationActions';\r\nimport {SubNavigationSelector} from './SubNavigationSelector';\r\n\r\nconst mapStateToProps = (state: IReactVaporState, ownProps: ISubNavigationOwnProps): ISubNavigationStateProps => ({\r\n    selected: SubNavigationSelector.getSelectedItem(state, ownProps.id),\r\n});\r\n\r\nconst mapDispatchToProps = (\r\n    dispatch: (action: IReduxAction<IReduxActionsPayload>) => void,\r\n    ownProps: ISubNavigationOwnProps\r\n): ISubNavigationDispatchProps => ({\r\n    onRender: () =>\r\n        dispatch(\r\n            addSubNavigation(\r\n                ownProps.id,\r\n                ownProps.defaultSelected ? [ownProps.defaultSelected] : _.pluck(ownProps.items, 'id')\r\n            )\r\n        ),\r\n    onDestroy: () => dispatch(removeSubNavigation(ownProps.id)),\r\n    onClickItem: (itemId) => dispatch(selectSubNavigation(ownProps.id, itemId)),\r\n});\r\n\r\nexport const SubNavigationConnected: React.ComponentClass<ISubNavigationProps &\r\n    React.HTMLAttributes<HTMLElement>> = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps,\r\n    ReduxUtils.mergeProps\r\n)(SubNavigation);\r\n"],"sourceRoot":""}