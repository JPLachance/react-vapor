{"version":3,"sources":["webpack:///./src/components/actions/examples/ActionBarConnectedExamples.tsx"],"names":[],"mappings":"6FAAA,OAAe","file":"assets/125.bundle.js","sourcesContent":["export default \"import * as React from 'react';\\r\\n\\r\\nimport {ExamplesStore} from '../../../../docs/Store';\\r\\nimport {IActionOptions} from '../Action';\\r\\nimport {ActionBarConnected} from '../ActionBar';\\r\\nimport {addActionsToActionBar} from '../ActionBarActions';\\r\\nimport {ACTION_SEPARATOR} from '../ActionConstants';\\r\\n\\r\\nconst actionBarId = 'action-bar-connected';\\r\\n\\r\\nexport class ActionBarConnectedExamples extends React.Component<any, any> {\\r\\n    componentDidMount() {\\r\\n        const actions: IActionOptions[] = [\\r\\n            ACTION_SEPARATOR,\\r\\n            {\\r\\n                name: 'Link to Coveo',\\r\\n                link: 'http://coveo.com',\\r\\n                target: '_blank',\\r\\n                icon: 'edit',\\r\\n                primary: true,\\r\\n                enabled: true,\\r\\n            },\\r\\n            ACTION_SEPARATOR,\\r\\n            {\\r\\n                name: 'Confirm Me',\\r\\n                trigger: () => alert('You confirmed this action !'),\\r\\n                target: '_blank',\\r\\n                icon: 'disable',\\r\\n                primary: true,\\r\\n                enabled: true,\\r\\n                requiresConfirmation: {\\r\\n                    confirmLabel: 'Want to do this action ?',\\r\\n                    confirmType: 'danger',\\r\\n                    buttonLabels: {\\r\\n                        confirm: 'sure !',\\r\\n                        cancel: 'never !',\\r\\n                    },\\r\\n                },\\r\\n            },\\r\\n            ACTION_SEPARATOR,\\r\\n            {\\r\\n                name: 'Action 1',\\r\\n                trigger: () => alert('Action 1 was triggered'),\\r\\n                enabled: true,\\r\\n                icon: 'edit',\\r\\n                requiresConfirmation: {\\r\\n                    confirmType: 'danger',\\r\\n                    buttonLabels: {\\r\\n                        confirm: 'Yes',\\r\\n                        cancel: 'Cancel',\\r\\n                    },\\r\\n                },\\r\\n            },\\r\\n            ACTION_SEPARATOR,\\r\\n            ACTION_SEPARATOR,\\r\\n            {\\r\\n                name: 'Action 2',\\r\\n                trigger: () => alert('Action 2 was triggered'),\\r\\n                enabled: true,\\r\\n                requiresConfirmation: {\\r\\n                    confirmType: 'danger',\\r\\n                    buttonLabels: {\\r\\n                        confirm: 'Pretty sure!',\\r\\n                        cancel: 'Cancel',\\r\\n                    },\\r\\n                },\\r\\n            },\\r\\n            {\\r\\n                name: 'Action 4',\\r\\n                trigger: () => alert('Action 4 was triggered'),\\r\\n                enabled: true,\\r\\n            },\\r\\n            ACTION_SEPARATOR,\\r\\n            {\\r\\n                name: 'Link to Coveo (disabled)',\\r\\n                link: 'http://coveo.com',\\r\\n                target: '_blank',\\r\\n                icon: 'edit',\\r\\n                primary: true,\\r\\n                enabled: false,\\r\\n                hideDisabled: false,\\r\\n            },\\r\\n            {\\r\\n                name: 'Action 3',\\r\\n                trigger: () => alert('You cannot trigger me'),\\r\\n                icon: 'edit',\\r\\n                primary: true,\\r\\n                enabled: false,\\r\\n                hideDisabled: false,\\r\\n            },\\r\\n            ACTION_SEPARATOR,\\r\\n        ];\\r\\n        setTimeout(() => {\\r\\n            ExamplesStore.dispatch(addActionsToActionBar(actionBarId, actions));\\r\\n        }, 4000);\\r\\n    }\\r\\n\\r\\n    render() {\\r\\n        return (\\r\\n            <div className=\\\"mt2\\\">\\r\\n                <div className=\\\"form-group\\\">\\r\\n                    <label className=\\\"form-control-label\\\">\\r\\n                        Action bar with Redux state and inline prompt (actions appear after 4 seconds)\\r\\n                    </label>\\r\\n                    <ActionBarConnected id={actionBarId} />\\r\\n                </div>\\r\\n            </div>\\r\\n        );\\r\\n    }\\r\\n}\\r\\n\""],"sourceRoot":""}