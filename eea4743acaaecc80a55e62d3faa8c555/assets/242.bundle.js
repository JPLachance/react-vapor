(window.webpackJsonp=window.webpackJsonp||[]).push([[242],{1333:function(o,r,e){"use strict";e.r(r),r.default="import * as React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {findWhere} from 'underscore';\r\n\r\nimport {IReactVaporState} from '../../ReactVapor';\r\nimport {IDispatch, ReduxUtils} from '../../utils/ReduxUtils';\r\nimport {\r\n    Collapsible,\r\n    CollapsibleDispatchProps,\r\n    CollapsibleOwnProps,\r\n    CollapsibleProps,\r\n    CollapsibleStateProps,\r\n} from './Collapsible';\r\nimport {addCollapsible, removeCollapsible, setCollapsibleExpanded} from './CollapsibleActions';\r\n\r\nconst mapStateToProps = (state: IReactVaporState, ownProps: CollapsibleOwnProps): CollapsibleStateProps => {\r\n    const collapsibleState = findWhere(state.collapsibles, {id: ownProps.id});\r\n    if (collapsibleState) {\r\n        return {expanded: collapsibleState.expanded};\r\n    }\r\n\r\n    return {expanded: ownProps.expandedOnMount};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: IDispatch, ownProps: CollapsibleOwnProps): CollapsibleDispatchProps => ({\r\n    onMount: () => dispatch(addCollapsible(ownProps.id, !!ownProps.expandedOnMount)),\r\n    onUnmount: () => dispatch(removeCollapsible(ownProps.id)),\r\n    onToggleExpandedState: (currentExpandedState: boolean) =>\r\n        dispatch(setCollapsibleExpanded(ownProps.id, !currentExpandedState)),\r\n});\r\n\r\nexport const CollapsibleConnected: React.ComponentClass<CollapsibleProps> = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps,\r\n    ReduxUtils.mergeProps\r\n)(Collapsible);\r\n"}}]);
//# sourceMappingURL=242.bundle.js.map