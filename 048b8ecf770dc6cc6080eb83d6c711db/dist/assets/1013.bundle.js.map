{"version":3,"sources":["webpack:///./src/components/table-hoc/examples/TableHOCExamples.tsx?2428","webpack:///./src/components/navigation/pagination/NavigationPagination.tsx?54ce","webpack:///./src/components/navigation/NavigationConnected.tsx?152a","webpack:///./src/components/loading/LoadingConnected.tsx?2c73","webpack:///./src/components/navigation/Navigation.tsx?cb6a","webpack:///./src/components/navigation/pagination/NavigationPaginationSelect.tsx?d73c","webpack:///./src/components/navigation/pagination/NavigationPaginationConnected.tsx?e5e9","webpack:///./src/components/navigation/perPage/NavigationPerPageConnected.tsx?c59a","webpack:///./src/components/section/index.ts?360e","webpack:///./src/components/table-hoc/TableWithPagination.tsx?37fc"],"names":["TableHOCExamples","title","level","TableWithActionsAndDataFiltering","id","data","twoHundredRowsOfData","generateDataWithFacker","length","i","fakedData","contextualCard","city","address","email","username","dateOfBirth","dob","generate","rowActions","primary","icon","name","enabled","trigger","alert","callOnDoubleClick","unrepeatable","requiresConfirmation","confirmLabel","confirmType","buttonLabels","confirm","cancel","generateTableRow","allData","tableId","map","key","actions","toLowerCase","toLocaleDateString","tableDatePickerConfig","datesSelectionBoxes","matchDates","lowerLimit","upperLimit","years","getPreviousYears","currentYear","toString","initialDateRange","subtract","toDate","matchPredicate","predicate","rowData","matchCity","matchEmail","sort","isAsc","a","b","Date","dateCompare","compare","localeCompare","predicateSetup","prepend","className","values","displayValue","value","selected","undefined","dispatch","resetFilter","TableWithActionsAndDataFilteringComposed","description","buttons","onClick","perPageNumbers","renderBody","Alldata","tableHeader","showBorderTop","handlePageClick","pageNb","props","currentPage","onPageClick","componentDidUpdate","this","totalPages","componentDidMount","onRender","componentWillUnmount","onDestroy","render","showXPages","Math","abs","numberOfPagesToShow","previousLabel","nextLabel","start","end","lastPage","previousClasses","nextClasses","pageSelects","hidePages","max","floor","min","p","push","svgName","svgClass","NavigationConnected","state","ownProps","item","loadings","isLoading","isOn","withReduxState","mergeProps","LoadingConnected","paginationProps","pagination","loadingIds","paginationClass","perPageProps","label","perPageLabel","totalEntries","initialPosition","currentPerPage","perPage","onPerPageClick","perPageClass","navigationClasses","loading","defaultProps","linkClasses","selectable","disabled","NavigationPaginationConnected","paginationComposite","NavigationPerPageConnected","perPageNumber","defaultInitialPosition","ceil","perPageComposite","perPageNb","oldPerPageNb","mapDispatchToProps","onMount","add","onUnmount","remove","TableWithPaginationProps","sliceData","startingIndex","endingIndex","slice","tableWithPagination","supplier","Component","config","supplyConfig","prevProps","onUpdate","newProps","children","getPaginationPage","getPaginationId","getPerPage","isServer","getDataCount","TableWithPagination"],"mappings":"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","file":"assets/1013.bundle.js","sourcesContent":["import {helpers, seed} from 'faker/locale/en';\r\nimport * as moment from 'moment';\r\nimport * as React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport * as _ from 'underscore';\r\n\r\nimport {IDispatch} from '../../../utils';\r\nimport {DateUtils} from '../../../utils/DateUtils';\r\nimport {UUID} from '../../../utils/UUID';\r\nimport {SELECTION_BOXES_LONG} from '../../datePicker/examples/DatePickerExamplesCommon';\r\nimport {filterThrough} from '../../filterBox';\r\nimport {Section} from '../../section';\r\nimport {TableHeaderWithSort} from '../TableHeaderWithSort';\r\nimport {TableHOC} from '../TableHOC';\r\nimport {TableRowConnected} from '../TableRowConnected';\r\nimport {tableWithActions} from '../TableWithActions';\r\nimport {tableWithBlankSlate} from '../TableWithBlankSlate';\r\nimport {tableWithDatePicker} from '../TableWithDatePicker';\r\nimport {tableWithFilter} from '../TableWithFilter';\r\nimport {tableWithPagination} from '../TableWithPagination';\r\nimport {tableWithPredicate} from '../TableWithPredicate';\r\nimport {tableWithSort} from '../TableWithSort';\r\n\r\nexport interface IExampleRowData {\r\n    city: string;\r\n    email: string;\r\n    username: string;\r\n    dateOfBirth: Date;\r\n    id: string;\r\n}\r\n\r\nexport const TableHOCExamples = () => (\r\n    <Section title=\"Table HOC\">\r\n        <Section level={2} title=\"Table with Data\">\r\n            <TableWithActionsAndDataFiltering id=\"TableWithActionsAndDataFiltering\" data={twoHundredRowsOfData} />\r\n        </Section>\r\n        <Section level={2} title=\"Table without data\">\r\n            <TableWithActionsAndDataFiltering id=\"TableWithActionsAndDataFiltering2\" data={[]} />\r\n        </Section>\r\n    </Section>\r\n);\r\n\r\n// https://github.com/marak/Faker.js/\r\nexport const generateDataWithFacker = (length: number) =>\r\n    _.map(_.range(length), (i: number) => {\r\n        seed(i + 1);\r\n        const fakedData = helpers.contextualCard();\r\n        return {\r\n            city: fakedData.address.city,\r\n            email: fakedData.email,\r\n            username: fakedData.username,\r\n            dateOfBirth: fakedData.dob,\r\n            id: UUID.generate(),\r\n        };\r\n    });\r\nconst twoHundredRowsOfData = generateDataWithFacker(200);\r\n\r\n// start-print\r\n\r\nconst rowActions = [\r\n    {\r\n        primary: true,\r\n        icon: 'edit',\r\n        name: 'edit',\r\n        enabled: true,\r\n        trigger: () => alert('trigger on action'),\r\n        callOnDoubleClick: true,\r\n    },\r\n    {primary: false, icon: 'view', name: 'view', enabled: true},\r\n    {primary: false, icon: 'copy', name: 'copy', enabled: true},\r\n    {\r\n        primary: false,\r\n        icon: 'delete',\r\n        name: 'delete',\r\n        enabled: true,\r\n        unrepeatable: true,\r\n        requiresConfirmation: {\r\n            confirmLabel: 'wanna do it ?',\r\n            confirmType: 'danger',\r\n            buttonLabels: {\r\n                confirm: 'Confirm',\r\n                cancel: 'Cancel',\r\n            },\r\n        },\r\n    },\r\n];\r\n\r\nconst renderHeader = (tableId: string) => (\r\n    <thead>\r\n        <tr>\r\n            <TableHeaderWithSort id=\"city\" tableId={tableId}>\r\n                City\r\n            </TableHeaderWithSort>\r\n            <TableHeaderWithSort id=\"email\" tableId={tableId}>\r\n                Email\r\n            </TableHeaderWithSort>\r\n            <TableHeaderWithSort id=\"username\" tableId={tableId}>\r\n                Username\r\n            </TableHeaderWithSort>\r\n            <th>Date of birth</th>\r\n        </tr>\r\n    </thead>\r\n);\r\n\r\nexport const generateTableRow = (allData: IExampleRowData[], tableId: string) =>\r\n    allData.map((data: IExampleRowData) => (\r\n        <TableRowConnected id={data.id} tableId={tableId} key={data.id} actions={rowActions}>\r\n            <td key=\"city\">{data.city}</td>\r\n            <td key=\"email\">{data.email.toLowerCase()}</td>\r\n            <td key=\"username\">{data.username.toLowerCase()}</td>\r\n            <td key=\"date-of-birth\">{data.dateOfBirth.toLocaleDateString()}</td>\r\n        </TableRowConnected>\r\n    ));\r\n\r\nconst tableDatePickerConfig = () => ({\r\n    datesSelectionBoxes: SELECTION_BOXES_LONG,\r\n    matchDates: (data: IExampleRowData, lowerLimit: Date, upperLimit?: Date) =>\r\n        _.isUndefined(upperLimit) || (lowerLimit <= data.dateOfBirth && data.dateOfBirth <= upperLimit),\r\n    years: [...DateUtils.getPreviousYears(100), DateUtils.currentYear.toString()],\r\n    initialDateRange: [\r\n        moment()\r\n            .subtract(75, 'years')\r\n            .toDate(),\r\n        moment().toDate(),\r\n    ],\r\n});\r\n\r\nconst matchPredicate = (predicate: string, rowData: IExampleRowData) => {\r\n    const matchCity = predicate === rowData.city;\r\n    const matchEmail = predicate === rowData.email;\r\n    return !predicate || matchCity || matchEmail;\r\n};\r\n\r\nconst sort = (key: keyof IExampleRowData, isAsc: boolean, a: IExampleRowData, b: IExampleRowData) => {\r\n    if (key) {\r\n        if (a[key] instanceof Date) {\r\n            const dateCompare = (a[key] as any) - (b[key] as any);\r\n            return isAsc ? dateCompare : -1 * dateCompare;\r\n        }\r\n        const compare = (a[key] as string).toLowerCase().localeCompare((b[key] as string).toLowerCase());\r\n\r\n        return isAsc ? compare : -1 * compare;\r\n    }\r\n    return 0;\r\n};\r\n\r\nconst predicateSetup = {\r\n    id: 'firstPredicate',\r\n    prepend: <span className=\"mr1 text-medium-grey\">prepend:</span>,\r\n    values: [\r\n        {displayValue: 'All', value: '', selected: true},\r\n        {displayValue: twoHundredRowsOfData[2].city, value: twoHundredRowsOfData[2].city},\r\n        {displayValue: twoHundredRowsOfData[1].email, value: twoHundredRowsOfData[1].email},\r\n    ],\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: IDispatch) => ({\r\n    resetFilter: (id: string) => dispatch(filterThrough(id, '')),\r\n});\r\n\r\ntype TableWithActionsAndDataFilteringProps = ReturnType<typeof mapDispatchToProps>;\r\n\r\nconst TableWithActionsAndDataFilteringDisconnected: React.FunctionComponent<{\r\n    data: any[];\r\n    id: string;\r\n} & TableWithActionsAndDataFilteringProps> = ({id, data, resetFilter}) => {\r\n    const TableWithActionsAndDataFilteringComposed = _.compose(\r\n        tableWithBlankSlate({\r\n            title: 'No data',\r\n        }),\r\n        tableWithPredicate({\r\n            ...predicateSetup,\r\n            matchPredicate,\r\n        }),\r\n        tableWithFilter(), // using the default matchfilter\r\n        tableWithBlankSlate({\r\n            title: 'No results',\r\n            description: 'Try reviewing the specified filters above or clearing all filters.',\r\n            buttons: [\r\n                {\r\n                    name: 'Clear filter',\r\n                    enabled: true,\r\n                    onClick: () => resetFilter(id),\r\n                },\r\n            ],\r\n        }),\r\n        tableWithSort({sort}),\r\n        tableWithDatePicker(...(tableDatePickerConfig as any)),\r\n        tableWithPagination({perPageNumbers: [3, 5, 10]}),\r\n        tableWithActions()\r\n    )(TableHOC);\r\n\r\n    return (\r\n        <TableWithActionsAndDataFilteringComposed\r\n            id={id}\r\n            className=\"table\"\r\n            data={data}\r\n            renderBody={(Alldata: IExampleRowData[]) => generateTableRow(Alldata, id)}\r\n            tableHeader={renderHeader(id)}\r\n            showBorderTop\r\n        />\r\n    );\r\n};\r\n\r\nconst TableWithActionsAndDataFiltering = connect(\r\n    undefined,\r\n    mapDispatchToProps\r\n)(TableWithActionsAndDataFilteringDisconnected);\r\n","import * as React from 'react';\r\nimport * as _ from 'underscore';\r\nimport {Svg} from '../../svg/Svg';\r\nimport {NavigationPaginationSelect} from './NavigationPaginationSelect';\r\n\r\nexport interface INavigationPaginationOwnProps extends React.ClassAttributes<NavigationPagination> {\r\n    id?: string;\r\n    totalPages: number;\r\n    numberOfPagesToShow?: number;\r\n    previousLabel?: string;\r\n    nextLabel?: string;\r\n    loadingIds?: string[];\r\n    hidePages?: boolean;\r\n}\r\n\r\nexport interface INavigationPaginationStateProps {\r\n    currentPage?: number;\r\n}\r\n\r\nexport interface INavigationPaginationDispatchProps {\r\n    onRender?: () => void;\r\n    onDestroy?: () => void;\r\n    onPageClick?: (pageNb: number) => void;\r\n}\r\n\r\nexport interface INavigationPaginationProps\r\n    extends INavigationPaginationOwnProps,\r\n        INavigationPaginationStateProps,\r\n        INavigationPaginationDispatchProps {}\r\n\r\nexport const NUMBER_OF_PAGES_SHOWING: number = 7;\r\nexport const PREVIOUS_LABEL: string = 'Previous';\r\nexport const NEXT_LABEL: string = 'Next';\r\n\r\nexport class NavigationPagination extends React.Component<INavigationPaginationProps, any> {\r\n    private handlePageClick = (pageNb: number) => {\r\n        if (pageNb >= 0 && this.props.currentPage !== pageNb) {\r\n            this.props.onPageClick?.(pageNb);\r\n        }\r\n    };\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.currentPage > this.props.totalPages - 1) {\r\n            this.handlePageClick(this.props.totalPages - 1);\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.onRender?.();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.onDestroy?.();\r\n    }\r\n\r\n    render() {\r\n        const currentPage: number = this.props.currentPage || 0;\r\n        const showXPages: number = Math.abs((this.props.numberOfPagesToShow || NUMBER_OF_PAGES_SHOWING) - 1);\r\n        const previousLabel: string = this.props.previousLabel || PREVIOUS_LABEL;\r\n        const nextLabel: string = this.props.nextLabel || NEXT_LABEL;\r\n        let start: number = 0;\r\n        let end: number = showXPages;\r\n        const lastPage: number = this.props.totalPages - 1;\r\n        const previousClasses: string =\r\n            'flat-select-option mod-link ' + (currentPage === 0 ? 'disabled' : 'selectable');\r\n        const nextClasses: string =\r\n            'flat-select-option mod-link ' + (currentPage === lastPage ? 'disabled' : 'selectable');\r\n        const pageSelects: JSX.Element[] = [];\r\n\r\n        if (!this.props.hidePages) {\r\n            if (currentPage + showXPages / 2 > lastPage) {\r\n                end = lastPage;\r\n                start = Math.max(lastPage - showXPages, 0);\r\n            } else {\r\n                start = Math.max(Math.floor(currentPage - showXPages / 2), 0);\r\n                end = Math.min(start + showXPages, lastPage);\r\n            }\r\n\r\n            _.each(_.range(start, end + 1), (p: number): void => {\r\n                pageSelects.push(\r\n                    <NavigationPaginationSelect\r\n                        key={'page-' + p}\r\n                        onPageClick={this.handlePageClick}\r\n                        pageNb={p}\r\n                        selected={p === currentPage}\r\n                    />\r\n                );\r\n            });\r\n        }\r\n\r\n        return (\r\n            <div className=\"pagination\">\r\n                <div className=\"flat-select\">\r\n                    <a\r\n                        className={previousClasses}\r\n                        data-page={currentPage - 1}\r\n                        onClick={() => this.handlePageClick(currentPage - 1)}\r\n                    >\r\n                        <Svg\r\n                            svgName=\"arrow-left-rounded\"\r\n                            className=\"pagination-icon\"\r\n                            svgClass=\"icon icon-small mod-lg\"\r\n                        />\r\n                        {previousLabel}\r\n                    </a>\r\n                    {pageSelects}\r\n                    <a\r\n                        className={nextClasses}\r\n                        data-page={currentPage + 1}\r\n                        onClick={() => this.handlePageClick(currentPage + 1)}\r\n                    >\r\n                        {nextLabel}\r\n                        <Svg\r\n                            svgName=\"arrow-right-rounded\"\r\n                            className=\"pagination-icon\"\r\n                            svgClass=\"icon icon-small mod-lg\"\r\n                        />\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport * as _ from 'underscore';\r\nimport {IReactVaporState} from '../../ReactVapor';\r\nimport {ReduxUtils} from '../../utils/ReduxUtils';\r\nimport {ILoadingState} from '../loading/LoadingReducers';\r\nimport {INavigationOwnProps, INavigationProps, INavigationStateProps, Navigation} from './Navigation';\r\n\r\nconst mapStateToProps = (state: IReactVaporState, ownProps: INavigationOwnProps): INavigationStateProps => {\r\n    const item: ILoadingState = _.findWhere(state.loadings, {id: 'loading-' + ownProps.id});\r\n\r\n    return {\r\n        isLoading: (item && item.isOn) || false,\r\n        withReduxState: true,\r\n    };\r\n};\r\n\r\nexport const NavigationConnected: React.ComponentClass<INavigationProps> = connect(\r\n    mapStateToProps,\r\n    undefined,\r\n    ReduxUtils.mergeProps\r\n)(Navigation);\r\n","import * as React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {IReduxActionsPayload} from '../../ReactVapor';\r\nimport {IReduxAction, ReduxUtils} from '../../utils/ReduxUtils';\r\nimport {ILoadingDispatchProps, ILoadingOwnProps, ILoadingProps, Loading} from './Loading';\r\nimport {addLoading, removeLoading} from './LoadingActions';\r\n\r\nconst mapStateToProps = () => ({});\r\n\r\nconst mapDispatchToProps = (\r\n    dispatch: (action: IReduxAction<IReduxActionsPayload>) => void,\r\n    ownProps: ILoadingOwnProps\r\n): ILoadingDispatchProps => ({\r\n    onRender: () => dispatch(addLoading(ownProps.id)),\r\n    onDestroy: () => dispatch(removeLoading(ownProps.id)),\r\n});\r\n\r\nexport const LoadingConnected: React.ComponentClass<ILoadingProps> = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps,\r\n    ReduxUtils.mergeProps\r\n)(Loading);\r\n","import * as React from 'react';\r\nimport {IReduxStatePossibleProps} from '../../utils/ReduxUtils';\r\nimport {Loading} from '../loading/Loading';\r\nimport {LoadingConnected} from '../loading/LoadingConnected';\r\nimport {INavigationPaginationProps, NavigationPagination} from './pagination/NavigationPagination';\r\nimport {NavigationPaginationConnected} from './pagination/NavigationPaginationConnected';\r\nimport {INavigationPerPageProps, NavigationPerPage, PER_PAGE_NUMBERS} from './perPage/NavigationPerPage';\r\nimport {NavigationPerPageConnected} from './perPage/NavigationPerPageConnected';\r\n\r\nexport interface INavigationOwnProps extends React.ClassAttributes<Navigation> {\r\n    id?: string;\r\n    totalPages: number;\r\n    totalEntries: number;\r\n    loadingIds?: string[];\r\n}\r\n\r\nexport interface INavigationChildrenProps {\r\n    numberOfPagesToShow?: number;\r\n    previousLabel?: string;\r\n    nextLabel?: string;\r\n    onPageClick?: (pageNb: number) => void;\r\n    perPageLabel?: string;\r\n    perPageNumbers?: number[];\r\n    onPerPageClick?: (newPerPage: number, currentPerPage?: number, currentPage?: number) => void;\r\n    hidePages?: boolean;\r\n    currentPerPage?: number;\r\n    currentPage?: number;\r\n    initialPosition?: number;\r\n}\r\n\r\nexport interface INavigationStateProps extends IReduxStatePossibleProps {\r\n    isLoading?: boolean;\r\n}\r\n\r\nexport interface INavigationProps extends INavigationOwnProps, INavigationChildrenProps, INavigationStateProps {}\r\n\r\nexport class Navigation extends React.Component<INavigationProps, any> {\r\n    static defaultProps: Partial<INavigationProps> = {\r\n        perPageNumbers: PER_PAGE_NUMBERS,\r\n    };\r\n\r\n    render() {\r\n        const paginationProps: INavigationPaginationProps = {\r\n            totalPages: this.props.totalPages,\r\n            numberOfPagesToShow: this.props.numberOfPagesToShow,\r\n            previousLabel: this.props.previousLabel,\r\n            nextLabel: this.props.nextLabel,\r\n            hidePages: this.props.hidePages || !this.props.totalPages || this.props.totalPages === 1,\r\n        };\r\n\r\n        const pagination: JSX.Element = this.props.withReduxState ? (\r\n            <NavigationPaginationConnected\r\n                id={`pagination-${this.props.id}`}\r\n                loadingIds={this.props.loadingIds}\r\n                {...paginationProps}\r\n            />\r\n        ) : (\r\n            <NavigationPagination\r\n                currentPage={this.props.currentPage}\r\n                onPageClick={this.props.onPageClick}\r\n                {...paginationProps}\r\n            />\r\n        );\r\n        const paginationClass: string = this.props.totalPages > 1 ? '' : 'hidden';\r\n\r\n        const perPageProps: INavigationPerPageProps = {\r\n            label: this.props.perPageLabel,\r\n            perPageNumbers: this.props.perPageNumbers,\r\n            totalEntries: this.props.totalEntries,\r\n            initialPosition: this.props.initialPosition,\r\n        };\r\n        if (this.props.currentPerPage) {\r\n            perPageProps.currentPerPage = this.props.currentPerPage;\r\n        }\r\n        const perPage: JSX.Element = this.props.withReduxState ? (\r\n            <NavigationPerPageConnected id={this.props.id} loadingIds={this.props.loadingIds} {...perPageProps} />\r\n        ) : (\r\n            <NavigationPerPage onPerPageClick={this.props.onPerPageClick} {...perPageProps} />\r\n        );\r\n        const perPageClass =\r\n            this.props.perPageNumbers.length && this.props.totalEntries > this.props.perPageNumbers[0] ? '' : 'hidden';\r\n\r\n        const navigationClasses: string = `pagination-container${this.props.isLoading ? ' loading-view' : ''}`;\r\n        const loading: JSX.Element = this.props.withReduxState ? (\r\n            <LoadingConnected id={`loading-${this.props.id}`} />\r\n        ) : (\r\n            <Loading />\r\n        );\r\n\r\n        return (\r\n            <div className={navigationClasses}>\r\n                <div className={perPageClass}>{perPage}</div>\r\n                <div className=\"flex-auto\">{loading}</div>\r\n                <div className={paginationClass}>{pagination}</div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import * as classNames from 'classnames';\r\nimport * as React from 'react';\r\n\r\nexport interface INavigationPaginationSelectProps extends React.ClassAttributes<NavigationPaginationSelect> {\r\n    disabled?: boolean;\r\n    selected: boolean;\r\n    pageNb: number;\r\n    onPageClick: (pageNb: number) => void;\r\n}\r\n\r\nexport class NavigationPaginationSelect extends React.Component<INavigationPaginationSelectProps, any> {\r\n    render() {\r\n        const linkClasses: string = classNames('flat-select-option', {\r\n            selectable: !this.props.selected,\r\n            disabled: this.props.disabled,\r\n        });\r\n\r\n        return (\r\n            <a\r\n                className={linkClasses}\r\n                data-page={this.props.pageNb}\r\n                onClick={() => this.props.onPageClick(this.props.pageNb)}\r\n            >\r\n                {this.props.pageNb + 1}\r\n            </a>\r\n        );\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport * as _ from 'underscore';\r\nimport {IReactVaporState, IReduxActionsPayload} from '../../../ReactVapor';\r\nimport {IReduxAction, ReduxUtils} from '../../../utils/ReduxUtils';\r\nimport {\r\n    INavigationPaginationDispatchProps,\r\n    INavigationPaginationOwnProps,\r\n    INavigationPaginationProps,\r\n    INavigationPaginationStateProps,\r\n    NavigationPagination,\r\n} from './NavigationPagination';\r\nimport {addPagination, changePage, removePagination} from './NavigationPaginationActions';\r\nimport {IPaginationState} from './NavigationPaginationReducers';\r\n\r\nconst mapStateToProps = (\r\n    state: IReactVaporState,\r\n    ownProps: INavigationPaginationOwnProps\r\n): INavigationPaginationStateProps => {\r\n    const item: IPaginationState = _.findWhere(state.paginationComposite, {id: ownProps.id});\r\n\r\n    return {\r\n        currentPage: item ? item.pageNb : 0,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (\r\n    dispatch: (action: IReduxAction<IReduxActionsPayload>) => void,\r\n    ownProps: INavigationPaginationOwnProps\r\n): INavigationPaginationDispatchProps => ({\r\n    onRender: () => dispatch(addPagination(ownProps.id)),\r\n    onDestroy: () => dispatch(removePagination(ownProps.id)),\r\n    onPageClick: (pageNb: number) => dispatch(changePage(ownProps.id, pageNb)),\r\n});\r\n\r\nexport const NavigationPaginationConnected: React.ComponentClass<INavigationPaginationProps> = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps,\r\n    ReduxUtils.mergeProps\r\n)(NavigationPagination);\r\n","import * as React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport * as _ from 'underscore';\r\n\r\nimport {IReactVaporState} from '../../../ReactVapor';\r\nimport {IDispatch, ReduxUtils} from '../../../utils/ReduxUtils';\r\nimport {changePage} from '../pagination/NavigationPaginationActions';\r\nimport {IPaginationState} from '../pagination/NavigationPaginationReducers';\r\nimport {\r\n    INavigationPerPageDispatchProps,\r\n    INavigationPerPageOwnProps,\r\n    INavigationPerPageProps,\r\n    INavigationPerPageStateProps,\r\n    NavigationPerPage,\r\n    PER_PAGE_NUMBERS,\r\n} from './NavigationPerPage';\r\nimport {addPerPage, changePerPage, removePerPage} from './NavigationPerPageActions';\r\nimport {IPerPageState} from './NavigationPerPageReducers';\r\n\r\nconst mapStateToProps = (\r\n    state: IReactVaporState,\r\n    ownProps: INavigationPerPageOwnProps\r\n): INavigationPerPageStateProps => {\r\n    const perPageNumber: number[] = ownProps.perPageNumbers || PER_PAGE_NUMBERS;\r\n    const defaultInitialPosition: number = Math.ceil(perPageNumber.length / 2) - 1;\r\n    const item: IPerPageState = _.findWhere(state.perPageComposite, {id: ownProps.id});\r\n    const pagination: IPaginationState = _.findWhere(state.paginationComposite, {id: `pagination-${ownProps.id}`});\r\n    const initialPosition: number = !_.isUndefined(ownProps.initialPosition)\r\n        ? ownProps.initialPosition\r\n        : defaultInitialPosition;\r\n\r\n    return {\r\n        currentPerPage: item ? item.perPage : perPageNumber[initialPosition],\r\n        currentPage: pagination ? pagination.pageNb : 0,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (\r\n    dispatch: IDispatch,\r\n    ownProps: INavigationPerPageOwnProps\r\n): INavigationPerPageDispatchProps => ({\r\n    onRender: (perPageNb: number) => dispatch(addPerPage(ownProps.id, perPageNb)),\r\n    onDestroy: () => dispatch(removePerPage(ownProps.id)),\r\n    onPerPageClick: (perPageNb: number, oldPerPageNb: number, currentPage: number) => {\r\n        dispatch(changePerPage(ownProps.id, perPageNb));\r\n        dispatch(changePage(`pagination-${ownProps.id}`, Math.floor((currentPage * oldPerPageNb) / perPageNb)));\r\n    },\r\n});\r\n\r\nexport const NavigationPerPageConnected: React.ComponentClass<INavigationPerPageProps> = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps,\r\n    ReduxUtils.mergeProps\r\n)(NavigationPerPage);\r\n","export * from './Section';\n","import * as React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {keys} from 'ts-transformer-keys';\r\nimport * as _ from 'underscore';\r\n\r\nimport {WithServerSideProcessingProps} from '../../hoc/withServerSideProcessing/withServerSideProcessing';\r\nimport {IReactVaporState, IReduxActionsPayload} from '../../ReactVapor';\r\nimport {ConfigSupplier, HocUtils} from '../../utils/HocUtils';\r\nimport {IReduxAction} from '../../utils/ReduxUtils';\r\nimport {turnOffLoading} from '../loading/LoadingActions';\r\nimport {INavigationChildrenProps, INavigationOwnProps} from '../navigation/Navigation';\r\nimport {NavigationConnected} from '../navigation/NavigationConnected';\r\nimport {NavigationSelectors} from '../navigation/NavigationSelectors';\r\nimport {TableWithPaginationActions} from './actions/TableWithPaginationActions';\r\nimport {ITableHOCOwnProps} from './TableHOC';\r\nimport {TableSelectors} from './TableSelectors';\r\nimport {TableHOCUtils} from './utils/TableHOCUtils';\r\n\r\nexport interface ITableWithPaginationConfig\r\n    extends WithServerSideProcessingProps,\r\n        Partial<INavigationOwnProps>,\r\n        Partial<INavigationChildrenProps> {}\r\n\r\nexport interface ITableWithPaginationStateProps {\r\n    totalEntries: number;\r\n    totalPages: number;\r\n    pageNb: number;\r\n    perPage: number;\r\n}\r\n\r\nconst mapDispatchToProps = (\r\n    dispatch: (action: IReduxAction<IReduxActionsPayload>) => void,\r\n    ownProps: ITableWithPaginationProps\r\n) => ({\r\n    onMount: () => {\r\n        dispatch(turnOffLoading([`loading-${ownProps.id}`]));\r\n        dispatch(TableWithPaginationActions.add(ownProps.id));\r\n    },\r\n    onUnmount: () => dispatch(TableWithPaginationActions.remove(ownProps.id)),\r\n});\r\n\r\nexport interface ITableWithPaginationProps\r\n    extends ITableHOCOwnProps,\r\n        WithServerSideProcessingProps,\r\n        Partial<ITableWithPaginationStateProps>,\r\n        Partial<ReturnType<typeof mapDispatchToProps>> {}\r\n\r\nconst TableWithPaginationProps = keys<ITableWithPaginationStateProps>();\r\n\r\nconst sliceData = (data: any[], startingIndex: number, endingIndex: number) => data.slice(startingIndex, endingIndex);\r\n\r\nexport const tableWithPagination = (supplier: ConfigSupplier<ITableWithPaginationConfig> = {}) => (\r\n    Component: React.ComponentType<ITableWithPaginationProps>\r\n): React.ComponentClass<ITableWithPaginationProps & React.HTMLAttributes<HTMLTableElement>> => {\r\n    const config = HocUtils.supplyConfig(supplier);\r\n    const mapStateToProps = (\r\n        state: IReactVaporState,\r\n        ownProps: ITableWithPaginationProps\r\n    ): ITableWithPaginationStateProps | ITableHOCOwnProps => {\r\n        const pageNb = NavigationSelectors.getPaginationPage(state, {id: TableHOCUtils.getPaginationId(ownProps.id)});\r\n        const perPage = NavigationSelectors.getPerPage(state, {id: ownProps.id});\r\n        const isServer = ownProps.isServer || config.isServer;\r\n        const length = TableSelectors.getDataCount(state, {\r\n            id: ownProps.id,\r\n            data: ownProps.data,\r\n            isServer,\r\n        });\r\n\r\n        const startingIndex = pageNb * perPage;\r\n        const endingIndex = startingIndex + perPage;\r\n\r\n        return {\r\n            pageNb,\r\n            perPage,\r\n            totalEntries: length,\r\n            totalPages: Math.max(Math.ceil(length / perPage), 1),\r\n            data: isServer ? ownProps.data : ownProps.data && sliceData(ownProps.data, startingIndex, endingIndex),\r\n        };\r\n    };\r\n\r\n    class TableWithPagination extends React.Component<ITableHOCOwnProps & ITableWithPaginationProps> {\r\n        componentDidMount() {\r\n            this.props.onMount();\r\n        }\r\n\r\n        componentWillUnmount() {\r\n            this.props.onUnmount();\r\n        }\r\n\r\n        componentDidUpdate(prevProps: ITableWithPaginationProps) {\r\n            if (prevProps.pageNb !== this.props.pageNb || prevProps.perPage !== this.props.perPage) {\r\n                this.props.onUpdate?.();\r\n            }\r\n        }\r\n\r\n        render() {\r\n            const newProps = _.omit(this.props, [...TableWithPaginationProps]);\r\n            return (\r\n                <Component {...newProps}>\r\n                    <NavigationConnected\r\n                        id={this.props.id}\r\n                        loadingIds={[this.props.id]}\r\n                        {...config}\r\n                        {..._.pick(this.props, TableWithPaginationProps)}\r\n                    />\r\n                    {this.props.children}\r\n                </Component>\r\n            );\r\n        }\r\n    }\r\n\r\n    return connect(mapStateToProps, mapDispatchToProps)(TableWithPagination);\r\n};\r\n"],"sourceRoot":""}