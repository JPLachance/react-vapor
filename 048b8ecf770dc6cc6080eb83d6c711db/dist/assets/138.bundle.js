(window.webpackJsonp=window.webpackJsonp||[]).push([[138],{1252:function(t,e,n){"use strict";n.r(e),e.default="import {IReduxAction} from '../../../../utils/ReduxUtils';\r\nimport {\r\n    addItemFilter,\r\n    filterItems,\r\n    IItemFilterActionPayload,\r\n    IItemFilteringActionPayload,\r\n    ItemFilterActions,\r\n    removeItemFilter,\r\n} from '../ItemFilterActions';\r\n\r\nconst ITEM_FILTER_ID: string = 'the-item-filter';\r\n\r\ndescribe('Item filter', () => {\r\n    describe('ItemFilterActions', () => {\r\n        it('should create an action to add the item filter', () => {\r\n            const expectedAction: IReduxAction<IItemFilterActionPayload> = {\r\n                type: ItemFilterActions.add,\r\n                payload: {\r\n                    id: ITEM_FILTER_ID,\r\n                },\r\n            };\r\n\r\n            expect(addItemFilter(ITEM_FILTER_ID)).toEqual(expectedAction);\r\n        });\r\n\r\n        it('should create an action to change the item filter', () => {\r\n            const item: string = 'the item';\r\n            const expectedAction: IReduxAction<IItemFilteringActionPayload> = {\r\n                type: ItemFilterActions.filter,\r\n                payload: {\r\n                    id: ITEM_FILTER_ID,\r\n                    item,\r\n                },\r\n            };\r\n\r\n            expect(filterItems(ITEM_FILTER_ID, item)).toEqual(expectedAction);\r\n        });\r\n\r\n        it('should create an action to remove the item filter', () => {\r\n            const expectedAction: IReduxAction<IItemFilterActionPayload> = {\r\n                type: ItemFilterActions.remove,\r\n                payload: {\r\n                    id: ITEM_FILTER_ID,\r\n                },\r\n            };\r\n\r\n            expect(removeItemFilter(ITEM_FILTER_ID)).toEqual(expectedAction);\r\n        });\r\n    });\r\n});\r\n"}}]);
//# sourceMappingURL=138.bundle.js.map