{"version":3,"sources":["webpack:///./src/components/validation/ValidationSelectors.ts"],"names":[],"mappings":"6FAAA,OAAe","file":"assets/923.bundle.js","sourcesContent":["export default \"import {IReactVaporState} from '../../ReactVapor';\\nimport {ValidationState} from './ValidationState';\\n\\nconst getErrors = (id: string) => (state: IReactVaporState) =>\\n    state.validation?.[id]?.error?.filter((error) => !!error.value) || [];\\nconst getWarnings = (id: string) => (state: IReactVaporState) =>\\n    state.validation?.[id]?.warning?.filter((warning) => !!warning.value) || [];\\nconst getIsDirty = (id: string) => (state: IReactVaporState) => state.validation?.[id]?.isDirty || [];\\n\\nconst getAnyError = (ids: string[]) => (state: IReactVaporState) =>\\n    ids\\n        .reduce((all, id) => all.concat(getErrors(id)(state)), [] as ValidationState['error'])\\n        .filter((error) => !!error.value);\\nconst getAnyWarning = (ids: string[]) => (state: IReactVaporState) =>\\n    ids\\n        .reduce((all, id) => all.concat(getWarnings(id)(state)), [] as ValidationState['warning'])\\n        .filter((warning) => !!warning.value);\\nconst getAnyDirty = (ids: string[]) => (state: IReactVaporState) =>\\n    ids\\n        .reduce((all, id) => all.concat(getIsDirty(id)(state)), [] as ValidationState['isDirty'])\\n        .filter((dirty) => dirty.value);\\n\\nconst isInError = (ids: string[]) => (state: IReactVaporState) => getAnyError(ids)(state).length > 0;\\nconst isInWarning = (ids: string[]) => (state: IReactVaporState) => getAnyWarning(ids)(state).length > 0;\\nconst isDirty = (ids: string[]) => (state: IReactVaporState) => getAnyDirty(ids)(state).length > 0;\\n\\nexport const ValidationSelectors = {\\n    getErrors,\\n    getWarnings,\\n    getIsDirty,\\n    getAnyError,\\n    getAnyWarning,\\n    getAnyDirty,\\n    isInError,\\n    isInWarning,\\n    isDirty,\\n};\\n\""],"sourceRoot":""}