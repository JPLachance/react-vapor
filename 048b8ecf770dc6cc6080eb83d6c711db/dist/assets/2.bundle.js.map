{"version":3,"sources":["webpack:///./src/utils/UrlUtils.ts?c324","webpack:///./src/components/navigation/perPage/NavigationPerPage.tsx?fc2e","webpack:///./src/components/table-hoc/TableWithUrlState.tsx?6e37","webpack:///./src/components/pagination/TablePagination.tsx?6a1b","webpack:///./src/components/pagination/PaginationPagesNumber.tsx?cb77","webpack:///./src/components/pagination/PaginationSelect.tsx?c094","webpack:///./src/components/pagination/PaginationSelectors.tsx?091c","webpack:///./src/components/flatSelect/FlatSelectWithPrepend.tsx?9e16","webpack:///./src/components/pagination/PaginationPerPage.tsx?158d","webpack:///./src/components/flatSelect/FlatSelectConnected.tsx?87e7","webpack:///./src/components/flatSelect/FlatSelect.tsx?30fc","webpack:///./src/components/flatSelect/FlatSelectOption.tsx?11b2","webpack:///./src/components/navigation/perPage/NavigationPerPageSelect.tsx?96a7"],"names":["UrlUtils","getQuery","queryPosition","window","location","hash","lastIndexOf","substring","length","getSearchParams","toObject","getPathName","indexOf","href","toQueryString","obj","sort","query","parseBooleans","parseNumbers","PER_PAGE_NUMBERS","handleClick","newPerPage","this","props","onPerPageClick","currentPerPage","currentPage","componentWillMount","initialPosition","Math","ceil","perPageNumbers","onRender","componentWillUnmount","onDestroy","render","topNumber","totalEntries","perPageSelects","num","index","selectId","id","isSelected","newPerPageNb","perPageNb","key","selected","className","label","defaultProps","SortOrderValues","Params","pageNumber","pageSize","sortKey","sortOrder","lowerDateLimit","upperDateLimit","filter","tableWithUrlState","Component","onUpdate","updateUrl","onUpdateUrl","wrappedProps","componentDidMount","initializeFromUrl","displayName","state","ownProps","dispatch","tableId","getState","urlParams","possiblePredicates","getPredicateIds","Object","keys","includes","forEach","getPredicateId","hasOwnProperty","getDatePickerId","Date","sortTable","ascending","getPaginationId","WrappedComponentDisconnected","order","tableState","getCompositeState","from","to","sortAscending","descending","undefined","pageNb","perPage","predicates","memo","value","TablePagination","disabled","totalPages","defaultPerPageSelected","hidden","TablePaginationDefaultValue","PerPage","perPageLabel","handlePageClick","onPageClick","componentDidUpdate","showXPages","abs","numberOfPagesToShow","previousLabel","nextLabel","start","end","lastPage","previousClasses","selectable","nextClasses","pageSelects","max","floor","min","nbr","push","onClick","svgName","svgClass","PaginationPagesNumber","getPaginationPageNumber","addPagination","removePagination","changePage","PaginationPagesNumberDisconnected","PaginationSelect","linkProps","getPaginationState","paginationComposite","PaginationSelectors","paginationState","FlatSelectWithPrepend","prepend","prependClassName","FlatSelectConnected","flatSelectProps","PaginationPerPage","PaginationUtils","getPaginationPerPageId","options","nb","toString","option","content","defaultSelectedOptionId","selectedOptionId","getSelectedOptionId","onOptionClick","mergeProps","handleOnOptionClick","getOptions","flatSelectOption","classes","group","optionPicker","tooltip","append","selectClasses","spanClasses"],"mappings":"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","file":"assets/2.bundle.js","sourcesContent":["import * as QueryString from 'query-string';\n\n/* istanbul ignore next */\nfunction getQuery() {\n    const queryPosition = window.location.hash.lastIndexOf('?');\n    return queryPosition >= 0 ? window.location.hash.substring(queryPosition, window.location.hash.length) : '';\n}\n\n/* istanbul ignore next */\nfunction getPathName() {\n    return window.location.hash.indexOf('?') >= 0\n        ? window.location.href.substring(0, window.location.href.lastIndexOf('?'))\n        : window.location.href;\n}\n\nfunction toObject(query: string) {\n    return {...QueryString.parse(query, {parseBooleans: true, parseNumbers: true, sort: false})};\n}\n\nfunction toQueryString(obj: object): string {\n    return QueryString.stringify(obj, {sort: false});\n}\n\nfunction getSearchParams(): {[key: string]: any} {\n    return UrlUtils.toObject(UrlUtils.getQuery());\n}\n\nexport const UrlUtils = {\n    getQuery,\n    getSearchParams,\n    getPathName,\n    toQueryString,\n    toObject,\n};\n","import * as React from 'react';\r\nimport * as _ from 'underscore';\r\n\r\nimport {NavigationPerPageSelect} from './NavigationPerPageSelect';\r\n\r\nexport interface INavigationPerPageOwnProps extends React.ClassAttributes<NavigationPerPage> {\r\n    id?: string;\r\n    totalEntries: number;\r\n    label?: string;\r\n    perPageNumbers?: number[];\r\n    loadingIds?: string[];\r\n    initialPosition?: number;\r\n}\r\n\r\nexport interface INavigationPerPageStateProps {\r\n    currentPerPage?: number;\r\n    currentPage?: number;\r\n}\r\n\r\nexport interface INavigationPerPageDispatchProps {\r\n    onRender?: (perPageNb: number) => void;\r\n    onDestroy?: () => void;\r\n    onPerPageClick?: (newPerPage: number, currentPerPage?: number, currentPage?: number) => void;\r\n}\r\n\r\nexport interface INavigationPerPageProps\r\n    extends INavigationPerPageOwnProps,\r\n        INavigationPerPageStateProps,\r\n        INavigationPerPageDispatchProps {}\r\n\r\nexport const PER_PAGE_NUMBERS: number[] = [10, 20, 30];\r\nexport const PER_PAGE_LABEL: string = 'Results per page';\r\n\r\nexport class NavigationPerPage extends React.Component<INavigationPerPageProps> {\r\n    static defaultProps: Partial<INavigationPerPageProps> = {\r\n        perPageNumbers: PER_PAGE_NUMBERS,\r\n        label: PER_PAGE_LABEL,\r\n    };\r\n    private initialPosition: number;\r\n\r\n    private handleClick(newPerPage: number) {\r\n        if (this.props.onPerPageClick && this.props.currentPerPage !== newPerPage) {\r\n            this.props.onPerPageClick(newPerPage, this.props.currentPerPage, this.props.currentPage);\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.initialPosition = !_.isUndefined(this.props.initialPosition)\r\n            ? this.props.initialPosition\r\n            : Math.ceil(this.props.perPageNumbers.length / 2) - 1;\r\n        this.props.onRender?.(this.props.perPageNumbers[this.initialPosition]);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.onDestroy?.();\r\n    }\r\n\r\n    render() {\r\n        const currentPerPage: number = this.props.currentPerPage || this.props.perPageNumbers[this.initialPosition];\r\n        const topNumber: number = this.props.totalEntries;\r\n\r\n        const perPageSelects: JSX.Element[] = _.map(\r\n            this.props.perPageNumbers,\r\n            (num: number, index: number): JSX.Element => {\r\n                const shouldShowPerPageSelect: boolean = topNumber > (this.props.perPageNumbers[index - 1] || 0);\r\n\r\n                if (shouldShowPerPageSelect) {\r\n                    const selectId: string = `perpage-${this.props.id || ''}-${num}`;\r\n                    const isSelected: boolean = currentPerPage === num;\r\n                    return (\r\n                        <NavigationPerPageSelect\r\n                            onPerPageClick={(newPerPageNb: number) => this.handleClick(newPerPageNb)}\r\n                            perPageNb={num}\r\n                            key={selectId}\r\n                            selected={isSelected}\r\n                        />\r\n                    );\r\n                }\r\n            }\r\n        );\r\n\r\n        return (\r\n            <div className=\"items-per-page prepended-flat-select\">\r\n                <div className=\"flat-select-prepend\">{this.props.label}:</div>\r\n                <div className=\"flat-select clearfix\">{perPageSelects}</div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import * as React from 'react';\nimport {connect} from 'react-redux';\nimport * as _ from 'underscore';\n\nimport {IReactVaporState} from '../../ReactVapor';\nimport {IDispatch, IThunkAction} from '../../utils/ReduxUtils';\nimport {UrlUtils} from '../../utils/UrlUtils';\nimport {applyDatePicker, changeDatePickerLowerLimit, changeDatePickerUpperLimit} from '../datePicker/DatePickerActions';\nimport {filterThrough} from '../filterBox/FilterBoxActions';\nimport {selectListBoxOption} from '../listBox/ListBoxActions';\nimport {changePage} from '../navigation/pagination/NavigationPaginationActions';\nimport {changePerPage} from '../navigation/perPage/NavigationPerPageActions';\nimport {TableHeaderActions} from './actions/TableHeaderActions';\nimport {ITableHOCOwnProps} from './TableHOC';\nimport {ITableHOCPredicateValue, TableHOCUtils} from './utils/TableHOCUtils';\n\nexport interface TableWithUrlStateProps {\n    onUpdateUrl: (queryString: string) => void;\n}\n\nenum SortOrderValues {\n    ascending = 'asc',\n    descending = 'desc',\n}\n\nexport const Params = {\n    pageNumber: 'page',\n    pageSize: 'pageSize',\n    sortKey: 'sortBy',\n    sortOrder: 'order',\n    lowerDateLimit: 'from',\n    upperDateLimit: 'to',\n    filter: 'q',\n};\n\nfunction tableWithUrlState<P extends ITableHOCOwnProps>(Component: React.ComponentType<P>) {\n    type Props = P &\n        TableWithUrlStateProps &\n        ReturnType<typeof mapStateToProps> &\n        ReturnType<typeof mapDispatchToProps>;\n\n    const mapStateToProps = (state: IReactVaporState, ownProps: P) => ({\n        query: getQuery(state, ownProps.id),\n    });\n\n    const mapDispatchToProps = (dispatch: IDispatch, ownProps: P) => ({\n        initializeFromUrl: () => dispatch(updateTableStateFromUrl(ownProps.id)),\n    });\n\n    class WrappedComponentDisconnected extends React.PureComponent<Props> {\n        static displayName = `withUrlState(${Component.displayName})`;\n\n        render() {\n            const wrappedProps = _.omit(this.props, 'onUpdate', 'onUpdateUrl', 'query', 'initializeFromUrl');\n            return <Component {...(wrappedProps as P)} onUpdate={this.onUpdate} />;\n        }\n\n        componentDidMount() {\n            this.props.initializeFromUrl();\n        }\n\n        private onUpdate = () => {\n            this.updateUrl(this.props.query);\n            this.props.onUpdate?.();\n        };\n\n        private updateUrl = _.debounce(this.props.onUpdateUrl || _.noop, 100);\n    }\n\n    return connect(\n        mapStateToProps,\n        mapDispatchToProps\n        // @ts-ignore\n    )(WrappedComponentDisconnected);\n}\n\nfunction getQuery(state: IReactVaporState, tableId: string): string {\n    let order: SortOrderValues.ascending | SortOrderValues.descending;\n    const tableState = TableHOCUtils.getCompositeState(tableId, state);\n    const [from, to] = _.map(tableState.dateLimits, (limit) => limit && limit.toISOString());\n\n    if (_.isBoolean(tableState.sortAscending)) {\n        order = tableState.sortAscending ? SortOrderValues.ascending : SortOrderValues.descending;\n    }\n\n    return UrlUtils.toQueryString({\n        [Params.filter]: tableState.filter || undefined,\n        [Params.pageNumber]: tableState.pageNb,\n        [Params.pageSize]: tableState.perPage,\n        [Params.sortKey]: tableState.sortKey,\n        [Params.sortOrder]: order,\n        ..._.reduce(\n            tableState.predicates,\n            (memo, {id, value}: ITableHOCPredicateValue) => ({\n                ...memo,\n                [id]: value,\n            }),\n            {}\n        ),\n        [Params.lowerDateLimit]: from || undefined,\n        [Params.upperDateLimit]: to || undefined,\n    });\n}\n\nfunction updateTableStateFromUrl(tableId: string): IThunkAction {\n    return (dispatch: IDispatch, getState) => {\n        const urlParams = UrlUtils.getSearchParams();\n        const possiblePredicates = TableHOCUtils.getPredicateIds(tableId, getState());\n\n        Object.keys(urlParams)\n            .filter((key) => possiblePredicates.includes(key))\n            .forEach((key) =>\n                dispatch(selectListBoxOption(TableHOCUtils.getPredicateId(tableId, key), false, urlParams[key]))\n            );\n\n        if (urlParams.hasOwnProperty(Params.lowerDateLimit)) {\n            dispatch(\n                changeDatePickerLowerLimit(\n                    TableHOCUtils.getDatePickerId(tableId),\n                    new Date(urlParams[Params.lowerDateLimit])\n                )\n            );\n        }\n\n        if (urlParams.hasOwnProperty(Params.upperDateLimit)) {\n            dispatch(\n                changeDatePickerUpperLimit(\n                    TableHOCUtils.getDatePickerId(tableId),\n                    new Date(urlParams[Params.upperDateLimit])\n                )\n            );\n        }\n\n        if (urlParams.hasOwnProperty(Params.lowerDateLimit) || urlParams.hasOwnProperty(Params.upperDateLimit)) {\n            dispatch(applyDatePicker(tableId));\n        }\n\n        if (urlParams.hasOwnProperty(Params.filter)) {\n            dispatch(filterThrough(tableId, urlParams[Params.filter]));\n        }\n\n        if (urlParams.hasOwnProperty(Params.sortKey) && urlParams.hasOwnProperty(Params.sortOrder)) {\n            dispatch(\n                TableHeaderActions.sortTable(\n                    urlParams[Params.sortKey],\n                    urlParams[Params.sortOrder] === SortOrderValues.ascending\n                )\n            );\n        }\n\n        if (urlParams.hasOwnProperty(Params.pageSize)) {\n            dispatch(changePerPage(tableId, urlParams[Params.pageSize]));\n        }\n\n        if (urlParams.hasOwnProperty(Params.pageNumber)) {\n            dispatch(changePage(TableHOCUtils.getPaginationId(tableId), urlParams[Params.pageNumber]));\n        }\n    };\n}\n\nexport {tableWithUrlState, Params as TableWithUrlStateParameters};\n","import {FunctionComponent} from 'react';\nimport * as React from 'react';\nimport {TableHOCUtils} from '../table-hoc/utils/TableHOCUtils';\nimport {PaginationPagesNumber} from './PaginationPagesNumber';\nimport {PaginationPerPage} from './PaginationPerPage';\n\nexport interface ITablePaginationProps {\n    id: string;\n    totalPages: number;\n    perPageNumbers: number[];\n    defaultPerPageSelected: number;\n    totalEntries: number;\n    disabled?: boolean;\n}\n\nexport const TablePagination: FunctionComponent<ITablePaginationProps> = ({\n    id,\n    disabled = false,\n    totalPages,\n    perPageNumbers,\n    defaultPerPageSelected,\n    totalEntries,\n}) => (\n    <div className=\"pagination-container\">\n        <PaginationPerPage\n            id={id}\n            perPage={perPageNumbers}\n            disabled={disabled}\n            defaultPerPageSelected={defaultPerPageSelected}\n            hidden={perPageNumbers.length && totalEntries < perPageNumbers[0] && !disabled}\n        />\n        <div className=\"flex-auto\" />\n        <PaginationPagesNumber\n            id={TableHOCUtils.getPaginationId(id)}\n            totalPages={totalPages || 1}\n            disabled={disabled}\n            hidden={totalPages === 1}\n        />\n    </div>\n);\n\nexport const TablePaginationDefaultValue = {\n    PerPage: [10, 20, 30],\n    perPageLabel: 'Results per page',\n};\n","import * as classNames from 'classnames';\nimport * as React from 'react';\nimport {connect} from 'react-redux';\nimport * as _ from 'underscore';\nimport {IReactVaporState, IReduxActionsPayload} from '../../ReactVapor';\nimport {IReduxAction} from '../../utils/ReduxUtils';\nimport {PaginationReduxActions} from '../navigation/pagination/NavigationPaginationActions';\nimport {Svg} from '../svg/Svg';\nimport {PaginationSelect} from './PaginationSelect';\nimport {PaginationSelectors} from './PaginationSelectors';\n\nexport interface IPaginationPagesNumberOwnProps {\n    id: string;\n    totalPages: number;\n    numberOfPagesToShow?: number;\n    previousLabel?: string;\n    nextLabel?: string;\n    hidden?: boolean;\n    disabled?: boolean;\n}\n\nconst mapStateToProps = (state: IReactVaporState, ownProps: IPaginationPagesNumberOwnProps) => ({\n    currentPage: PaginationSelectors.getPaginationPageNumber(state, {id: ownProps.id}),\n});\n\nconst mapDispatchToProps = (\n    dispatch: (action: IReduxAction<IReduxActionsPayload>) => void,\n    ownProps: IPaginationPagesNumberOwnProps\n) => ({\n    onRender: () => dispatch(PaginationReduxActions.addPagination(ownProps.id)),\n    onDestroy: () => dispatch(PaginationReduxActions.removePagination(ownProps.id)),\n    onPageClick: (pageNb: number) => dispatch(PaginationReduxActions.changePage(ownProps.id, pageNb)),\n});\n\nexport interface IPaginationPagesNumberProps\n    extends IPaginationPagesNumberOwnProps,\n        ReturnType<typeof mapDispatchToProps>,\n        ReturnType<typeof mapStateToProps> {}\n\nconst NUMBER_OF_PAGES_SHOWING: number = 7;\nconst PREVIOUS_LABEL: string = 'Previous';\nconst NEXT_LABEL: string = 'Next';\n\nclass PaginationPagesNumberDisconnected extends React.Component<IPaginationPagesNumberProps, any> {\n    private handlePageClick = (pageNb: number) => {\n        if (pageNb >= 0 && this.props.currentPage !== pageNb) {\n            this.props.onPageClick?.(pageNb);\n        }\n    };\n\n    componentDidUpdate() {\n        if (this.props.currentPage > this.props.totalPages - 1) {\n            this.handlePageClick(this.props.totalPages - 1);\n        }\n    }\n\n    componentDidMount() {\n        this.props.onRender?.();\n    }\n\n    componentWillUnmount() {\n        this.props.onDestroy?.();\n    }\n\n    render() {\n        const {currentPage} = this.props;\n        const showXPages: number = Math.abs((this.props.numberOfPagesToShow || NUMBER_OF_PAGES_SHOWING) - 1);\n        const previousLabel: string = this.props.previousLabel || PREVIOUS_LABEL;\n        const nextLabel: string = this.props.nextLabel || NEXT_LABEL;\n        let start: number = 0;\n        let end: number = showXPages;\n        const lastPage: number = this.props.totalPages - 1;\n        const previousClasses: string = classNames('flat-select-option mod-link', {\n            disabled: currentPage === 0 || this.props.disabled,\n            selectable: currentPage !== 0,\n            hidden: this.props.hidden,\n        });\n        const nextClasses: string = classNames('flat-select-option mod-link', {\n            disabled: currentPage === lastPage || this.props.disabled,\n            selectable: currentPage !== lastPage,\n            hidden: this.props.hidden,\n        });\n\n        const pageSelects: JSX.Element[] = [];\n\n        if (!this.props.hidden) {\n            if (currentPage + showXPages / 2 > lastPage) {\n                end = lastPage;\n                start = Math.max(lastPage - showXPages, 0);\n            } else {\n                start = Math.max(Math.floor(currentPage - showXPages / 2), 0);\n                end = Math.min(start + showXPages, lastPage);\n            }\n\n            _.each(_.range(start, end + 1), (nbr: number): void => {\n                pageSelects.push(\n                    <PaginationSelect\n                        key={'page-' + nbr}\n                        onPageClick={this.handlePageClick}\n                        pageNb={nbr}\n                        selected={nbr === currentPage}\n                        disabled={this.props.disabled}\n                    />\n                );\n            });\n        }\n\n        return (\n            <div className=\"pagination\">\n                <div className=\"flat-select\">\n                    <a\n                        className={previousClasses}\n                        data-page={currentPage - 1}\n                        onClick={() => this.handlePageClick(currentPage - 1)}\n                    >\n                        <Svg\n                            svgName=\"arrow-left-rounded\"\n                            className=\"pagination-icon\"\n                            svgClass=\"icon icon-small mod-lg\"\n                        />\n                        {previousLabel}\n                    </a>\n                    {pageSelects}\n                    <a\n                        className={nextClasses}\n                        data-page={currentPage + 1}\n                        onClick={() => this.handlePageClick(currentPage + 1)}\n                    >\n                        {nextLabel}\n                        <Svg\n                            svgName=\"arrow-right-rounded\"\n                            className=\"pagination-icon\"\n                            svgClass=\"icon icon-small mod-lg\"\n                        />\n                    </a>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport const PaginationPagesNumber = connect(mapStateToProps, mapDispatchToProps)(PaginationPagesNumberDisconnected);\n","import * as classNames from 'classnames';\nimport {FunctionComponent} from 'react';\nimport * as React from 'react';\n\nexport interface IPaginationSelectProps extends React.HTMLAttributes<HTMLAnchorElement> {\n    disabled?: boolean;\n    selected: boolean;\n    pageNb: number;\n    onPageClick: (pageNb: number) => void;\n}\n\nexport const PaginationSelect: FunctionComponent<IPaginationSelectProps> = ({\n    disabled,\n    selected,\n    pageNb,\n    onPageClick,\n    className,\n    ...linkProps\n}) => (\n    <a\n        {...linkProps}\n        className={classNames(\n            'flat-select-option',\n            {\n                selectable: !selected,\n                disabled: disabled,\n            },\n            className\n        )}\n        data-page={pageNb}\n        onClick={() => onPageClick(pageNb)}\n    >\n        {pageNb + 1}\n    </a>\n);\n","import {createSelector} from 'reselect';\nimport * as _ from 'underscore';\nimport {IReactVaporState} from '../../ReactVapor';\nimport {IPaginationState} from '../navigation/pagination';\n\nconst getPaginationState = (state: IReactVaporState, {id}: {id: string}) =>\n    _.findWhere(state.paginationComposite, {id: id});\n\nconst getPaginationPageNumber = createSelector(\n    getPaginationState,\n    (paginationState: IPaginationState): number => paginationState?.pageNb ?? 0\n);\n\nexport const PaginationSelectors = {\n    getPaginationState,\n    getPaginationPageNumber,\n};\n","import * as classNames from 'classnames';\nimport {FunctionComponent} from 'react';\nimport * as React from 'react';\nimport {IFlatSelectOwnProps} from './FlatSelect';\nimport {FlatSelectConnected} from './FlatSelectConnected';\n\nexport interface IFlatSelectWithPrependProps extends IFlatSelectOwnProps {\n    prepend?: React.ReactNode;\n    prependClassName?: string;\n}\n\nexport const FlatSelectWithPrepend: FunctionComponent<IFlatSelectWithPrependProps> = ({\n    prepend,\n    prependClassName = '',\n    ...flatSelectProps\n}) => (\n    <div className={classNames('prepended-flat-select', prependClassName)}>\n        <div className=\"flat-select-prepend\">{prepend}</div>\n        <FlatSelectConnected {...flatSelectProps} />\n    </div>\n);\n","import * as classNames from 'classnames';\nimport {FunctionComponent} from 'react';\nimport * as React from 'react';\nimport * as _ from 'underscore';\nimport {UrlUtils} from '../../utils/UrlUtils';\nimport {FlatSelectWithPrepend} from '../flatSelect/FlatSelectWithPrepend';\nimport {Params} from '../table-hoc/TableWithUrlState';\nimport {PaginationUtils} from './PaginationUtils';\nimport {TablePaginationDefaultValue} from './TablePagination';\n\nexport interface IPaginationPerPageProps {\n    id: string;\n    perPage?: number[];\n    defaultPerPageSelected?: number;\n    label?: React.ReactNode;\n    disabled?: boolean;\n    hidden?: boolean;\n}\n\nexport const PaginationPerPage: FunctionComponent<IPaginationPerPageProps> = ({\n    id,\n    perPage = TablePaginationDefaultValue.PerPage,\n    defaultPerPageSelected = UrlUtils.getSearchParams?.()?.[Params.pageSize],\n    label = TablePaginationDefaultValue.perPageLabel,\n    disabled,\n    hidden,\n}) => (\n    <FlatSelectWithPrepend\n        id={PaginationUtils.getPaginationPerPageId(id)}\n        options={_.map(perPage, (nb: number) => ({\n            id: nb?.toString(),\n            option: {content: nb},\n        }))}\n        defaultSelectedOptionId={defaultPerPageSelected?.toString()}\n        prependClassName={classNames('items-per-page', {hidden: hidden})}\n        prepend={label}\n        disabled={disabled}\n    />\n);\n","import * as React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {IReactVaporState} from '../../ReactVapor';\r\nimport {IDispatch, ReduxUtils} from '../../utils/ReduxUtils';\r\nimport {\r\n    FlatSelect,\r\n    IFlatSelectDispatchProps,\r\n    IFlatSelectOwnProps,\r\n    IFlatSelectProps,\r\n    IFlatSelectStateProps,\r\n} from './FlatSelect';\r\nimport {addFlatSelect, removeFlatSelect, selectFlatSelect} from './FlatSelectActions';\r\nimport {IFlatSelectOptionProps} from './FlatSelectOption';\r\nimport {FlatSelectSelectors} from './FlatSelectSelectors';\r\n\r\nconst mapStateToProps = (state: IReactVaporState, ownProps: IFlatSelectOwnProps): IFlatSelectStateProps => {\r\n    return {\r\n        selectedOptionId: FlatSelectSelectors.getSelectedOptionId(state, ownProps),\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: IDispatch, ownProps: IFlatSelectOwnProps): IFlatSelectDispatchProps => ({\r\n    onRender: () =>\r\n        dispatch(\r\n            addFlatSelect(\r\n                ownProps.id,\r\n                ownProps.defaultSelectedOptionId || (ownProps.options.length && ownProps.options[0].id)\r\n            )\r\n        ),\r\n    onDestroy: () => dispatch(removeFlatSelect(ownProps.id)),\r\n    onOptionClick: (selected: IFlatSelectOptionProps) => dispatch(selectFlatSelect(ownProps.id, selected.id)),\r\n});\r\n\r\nexport const FlatSelectConnected: React.ComponentClass<IFlatSelectProps> = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps,\r\n    ReduxUtils.mergeProps\r\n)(FlatSelect);\r\n","import * as classNames from 'classnames';\r\nimport * as React from 'react';\r\nimport * as _ from 'underscore';\r\nimport {FlatSelectOption, IFlatSelectOptionProps} from './FlatSelectOption';\r\n\r\nexport interface IFlatSelectOwnProps {\r\n    id: string;\r\n    options: IFlatSelectOptionProps[];\r\n    className?: string;\r\n    group?: boolean;\r\n    optionPicker?: boolean;\r\n    defaultSelectedOptionId?: string;\r\n    onClick?: (option: IFlatSelectOptionProps) => void;\r\n    disabled?: boolean;\r\n    classes?: string[] /* @deprecated use className instead */;\r\n}\r\n\r\nexport interface IFlatSelectStateProps {\r\n    selectedOptionId?: string;\r\n}\r\n\r\nexport interface IFlatSelectDispatchProps {\r\n    onRender?: () => void;\r\n    onDestroy?: () => void;\r\n    onOptionClick?: (option: IFlatSelectOptionProps) => void;\r\n}\r\n\r\nexport interface IFlatSelectProps extends IFlatSelectOwnProps, IFlatSelectStateProps, IFlatSelectDispatchProps {}\r\n\r\nexport class FlatSelect extends React.Component<IFlatSelectProps> {\r\n    componentWillMount() {\r\n        if (this.props.onRender) {\r\n            this.props.onRender();\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (this.props.onDestroy) {\r\n            this.props.onDestroy();\r\n        }\r\n    }\r\n\r\n    private handleOnOptionClick(option: IFlatSelectOptionProps) {\r\n        if (this.props.onOptionClick) {\r\n            this.props.onOptionClick(option);\r\n        }\r\n\r\n        if (this.props.onClick) {\r\n            this.props.onClick(option);\r\n        }\r\n    }\r\n\r\n    private getOptions(): JSX.Element[] {\r\n        return _.map(this.props.options, (flatSelectOption: IFlatSelectOptionProps, index: number) => {\r\n            flatSelectOption.selected =\r\n                this.props.selectedOptionId && this.props.selectedOptionId === flatSelectOption.id;\r\n            flatSelectOption.onClick = (option: IFlatSelectOptionProps) => this.handleOnOptionClick(option);\r\n\r\n            return <FlatSelectOption key={index} {...flatSelectOption} disabled={this.props.disabled} />;\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const classes: string = classNames(\r\n            'flat-select',\r\n            {\r\n                'mod-btn-group': this.props.group,\r\n                'mod-option-picker': this.props.optionPicker,\r\n            },\r\n            this.props.classes,\r\n            this.props.className\r\n        );\r\n\r\n        return <div className={classes}>{this.getOptions()}</div>;\r\n    }\r\n}\r\n","import * as classNames from 'classnames';\r\nimport * as React from 'react';\r\nimport {Content, IContentProps} from '../content/Content';\r\nimport {ITooltipProps, Tooltip} from '../tooltip/Tooltip';\r\n\r\nexport interface IFlatSelectOptionProps {\r\n    id: string;\r\n    option: IContentProps;\r\n    classes?: string[];\r\n    prepend?: IContentProps;\r\n    append?: IContentProps;\r\n    tooltip?: ITooltipProps;\r\n    selected?: boolean;\r\n    onClick?: (option: IFlatSelectOptionProps) => void;\r\n    disabled?: boolean;\r\n}\r\n\r\nexport class FlatSelectOption extends React.Component<IFlatSelectOptionProps, any> {\r\n    static defaultProps: Partial<IFlatSelectOptionProps> = {\r\n        selected: false,\r\n    };\r\n\r\n    private onClick() {\r\n        if (this.props.onClick) {\r\n            this.props.onClick(this.props);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const classes: string = classNames(\r\n            'flat-select-option',\r\n            {\r\n                selectable: !this.props.selected,\r\n                disabled: this.props.disabled,\r\n            },\r\n            this.props.classes\r\n        );\r\n\r\n        return (\r\n            <a className={classes} onClick={() => this.onClick()}>\r\n                <Tooltip {...this.props.tooltip}>\r\n                    {this.props.prepend ? <Content {...this.props.prepend} /> : null}\r\n                    {<Content {...this.props.option} />}\r\n                    {this.props.append ? <Content {...this.props.append} /> : null}\r\n                </Tooltip>\r\n            </a>\r\n        );\r\n    }\r\n}\r\n","import * as React from 'react';\r\n\r\nexport interface INavigationPerPageSelectOwnProps extends React.ClassAttributes<NavigationPerPageSelect> {\r\n    perPageNb: number;\r\n    selected: boolean;\r\n    onPerPageClick: (perPageNb: number) => void;\r\n}\r\n\r\nexport interface INavigationPerPageSelectProps extends INavigationPerPageSelectOwnProps {}\r\n\r\nexport class NavigationPerPageSelect extends React.Component<INavigationPerPageSelectProps, any> {\r\n    render() {\r\n        const selectClasses: string = 'flat-select-option' + (this.props.selected ? '' : ' selectable');\r\n        const spanClasses: string = 'enabled' + (this.props.selected ? ' selected-value state-selected' : '');\r\n\r\n        return (\r\n            <a className={selectClasses} onClick={() => this.props.onPerPageClick(this.props.perPageNb)}>\r\n                <span className={spanClasses}>{this.props.perPageNb}</span>\r\n            </a>\r\n        );\r\n    }\r\n}\r\n"],"sourceRoot":""}