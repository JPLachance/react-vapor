(window.webpackJsonp=window.webpackJsonp||[]).push([[554],{1648:function(n,r,e){"use strict";e.r(r),r.default="import {mount, ReactWrapper, shallow} from 'enzyme';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport * as React from 'react';\r\nimport {IInputProps} from '../../input/Input';\r\nimport {AddInput} from '../AddInput';\r\n\r\ndescribe('AddInput', () => {\r\n    describe('<AddInput />', () => {\r\n        it('should render without errors', () => {\r\n            expect(() => {\r\n                shallow(<AddInput />);\r\n            }).not.toThrow();\r\n        });\r\n    });\r\n\r\n    describe('<AddInput />', () => {\r\n        let addInput: ReactWrapper<IInputProps, any>;\r\n\r\n        beforeEach(() => {\r\n            addInput = mount(<AddInput />, {attachTo: document.getElementById('App')});\r\n        });\r\n\r\n        afterEach(() => {\r\n            addInput.detach();\r\n        });\r\n\r\n        it('should call property onBlur when input loses focus and prop is specified', () => {\r\n            const blurSpy = jasmine.createSpy('onBlur');\r\n            const innerInput = addInput.find('input');\r\n\r\n            innerInput.simulate('blur');\r\n            expect(blurSpy).not.toHaveBeenCalled();\r\n\r\n            addInput.setProps({onBlur: blurSpy}).mount();\r\n\r\n            innerInput.simulate('blur');\r\n            expect(blurSpy).toHaveBeenCalledTimes(1);\r\n        });\r\n\r\n        it('should call property onBlur when inner input has focus and Enter key is released', () => {\r\n            const blurSpy = jasmine.createSpy('onBlur');\r\n            const innerInput = addInput.find('input');\r\n\r\n            innerInput.simulate('keyUp', {\r\n                key: 'Enter',\r\n            });\r\n            expect(blurSpy).not.toHaveBeenCalled();\r\n\r\n            addInput.setProps({onBlur: blurSpy}).mount();\r\n\r\n            innerInput.simulate('keyUp', {\r\n                key: 'Enter',\r\n            });\r\n            expect(blurSpy).toHaveBeenCalledTimes(1);\r\n        });\r\n\r\n        it('should call property onBlur when inner add button is clicked', () => {\r\n            const blurSpy = jasmine.createSpy('onBlur');\r\n            const innerAddInputButton = addInput.find('.input-actions');\r\n\r\n            innerAddInputButton.simulate('click');\r\n            expect(blurSpy).not.toHaveBeenCalled();\r\n\r\n            addInput.setProps({onBlur: blurSpy}).mount();\r\n\r\n            innerAddInputButton.simulate('click');\r\n            expect(blurSpy).toHaveBeenCalledTimes(1);\r\n        });\r\n    });\r\n});\r\n"}}]);
//# sourceMappingURL=554.bundle.js.map