{"version":3,"sources":["webpack:///./src/components/drop/examples/DropWithDropdownExamples.tsx?437b","webpack:///./src/utils/UUID.ts?611d","webpack:///./src/utils/PropsToOmitUtils.ts?e979","webpack:///./src/components/drop/hoc/DropWithDropdown.tsx?af9f"],"names":["DropWithDropdownExamples1","render","defaultItems","value","onOptionClick","alert","className","id","generate","buttonContainerProps","renderOpenButton","onClick","name","enabled","items","closeOnClickDrop","closeOnClickOutside","d","Date","now","replace","c","r","Math","random","floor","toString","internalComponentPropsToOmit","PropsToOmitUtils","internal","input","mapStateToProps","state","groupId","isOpen","dropWithDropdown","Component","this","props","in","children","DropWithDropdown","defaultProps","positions","bottom","top","dropdown"],"mappings":"ihBASMA,EAA4B,UAAU,cAAV,CAA8B,KAEhE,2B,+CAoEA,OApE8C,OAC1C,YAAAC,OAAA,WACI,IAIMC,EAAgC,CAClC,CAACC,MAAO,eACR,CAACA,MAAO,mBACR,CAACA,MAAO,sBAAuBC,cAAe,WAN9CC,MAAM,8BAON,CAACF,MAAO,sBAGZ,OACI,uBAAKG,UAAU,OACX,uBAAKA,UAAU,cACX,yBAAOA,UAAU,sBAAoB,8BACrC,uBAAKA,UAAU,oBACX,gBAACN,EAAyB,CACtBO,GAAI,IAAKC,WACTC,qBAAsB,CAClBH,UAAW,gBAEfI,iBAAkB,SAACC,GAAwB,OACvC,gBAAC,IAAM,CAACC,KAAM,OAAQC,SAAS,EAAMF,QAASA,MAGlD,gBAAC,IAAO,CAACG,MAAOZ,OAI5B,uBAAKI,UAAU,cACX,yBAAOA,UAAU,sBAAoB,yDACrC,uBAAKA,UAAU,oBACX,gBAACN,EAAyB,CACtBO,GAAI,IAAKC,WACTC,qBAAsB,CAClBH,UAAW,gBAEfI,iBAAkB,SAACC,GAAwB,OACvC,gBAAC,IAAM,CAACC,KAAM,OAAQC,SAAS,EAAMF,QAASA,KAElDI,kBAAkB,GAElB,gBAAC,IAAO,CAACD,MAAOZ,OAI5B,uBAAKI,UAAU,cACX,yBAAOA,UAAU,sBAAoB,0DACrC,uBAAKA,UAAU,oBACX,gBAACN,EAAyB,CACtBO,GAAI,IAAKC,WACTC,qBAAsB,CAClBH,UAAW,gBAEfI,iBAAkB,SAACC,GAAwB,OACvC,gBAAC,IAAM,CAACC,KAAM,OAAQC,SAAS,EAAMF,QAASA,KAElDK,qBAAqB,GAErB,gBAAC,IAAO,CAACF,MAAOZ,SAO5C,EApEA,CAA8C,kB,iCCX9C,kCACA,+BAWA,OATW,EAAAM,SAAP,WAEI,IAAIS,EAAIC,KAAKC,MACb,MAAO,uCAAuCC,QAAQ,SAAS,SAACC,GAC5D,IAAMC,GAAKL,EAAoB,GAAhBM,KAAKC,UAAiB,GAAK,EAE1C,OADAP,EAAIM,KAAKE,MAAMR,EAAI,KACL,MAANI,EAAYC,EAAS,EAAJA,EAAW,GAAKI,SAAS,QAG9D,EAXA,I,iWCDMC,EAAyC,CAAC,WAAY,2BAc/CC,EAAmB,CAC5BC,SAAUF,EACVG,M,wFAZqB,CAClBH,EAA4B,CAC/B,eACA,UACA,WACA,SACA,QACA,Y,09BCEEI,EAAkB,SAACC,EAAyB,G,IAACzB,EAAA,EAAAA,GAAI0B,EAAA,EAAAA,QAA6C,OAChGC,OAAQ,IAAcA,OAAOF,EAAO,CAACzB,GAAE,EAAE0B,QAAO,MAGvCE,EAAmB,WAAM,gBAACC,GAEnC,+B,+CAUA,OAV+B,OAG3B,YAAAnC,OAAA,WACI,OACI,gBAACmC,EAAS,KAAK,OAAOC,KAAKC,MAAO,IAAiBT,WAC/C,gBAAC,IAAM,CAACU,GAAIF,KAAKC,MAAMJ,QAASG,KAAKC,MAAME,YANrDC,EAAgB,GADrB,YAAaV,IACRU,GAAN,CAA+B,iBAkB/B,OANAA,EAAiBC,aAAe,EAAH,KACtB,IAAKA,cAAY,CACpBC,UAAW,CAAC,IAAgBC,OAAQ,IAAgBC,KACpDZ,QAAS,IAAgBa,WAGtBL","file":"assets/989.bundle.js","sourcesContent":["import * as React from 'react';\r\nimport * as _ from 'underscore';\r\nimport {UUID} from '../../../utils/UUID';\r\nimport {Button} from '../../button/Button';\r\nimport {IItemBoxProps} from '../../itemBox/ItemBox';\r\nimport {ListBox} from '../../listBox/ListBox';\r\nimport {Drop} from '../Drop';\r\nimport {dropWithDropdown} from '../hoc/DropWithDropdown';\r\n\r\nconst DropWithDropdownExamples1 = _.compose(dropWithDropdown())(Drop);\r\n\r\nexport class DropWithDropdownExamples extends React.PureComponent {\r\n    render() {\r\n        const triggerAlertFunction = () => {\r\n            alert(`Alert function triggered`);\r\n        };\r\n\r\n        const defaultItems: IItemBoxProps[] = [\r\n            {value: 'Add Digimon'},\r\n            {value: 'Duplicate Meepo'},\r\n            {value: 'Disable Dragon Ball', onOptionClick: () => triggerAlertFunction()},\r\n            {value: 'Delete BitConnect'},\r\n        ];\r\n\r\n        return (\r\n            <div className=\"mt2\">\r\n                <div className=\"form-group\">\r\n                    <label className=\"form-control-label\">Default drop with dropdown</label>\r\n                    <div className=\"form-control pt5\">\r\n                        <DropWithDropdownExamples1\r\n                            id={UUID.generate()}\r\n                            buttonContainerProps={{\r\n                                className: 'inline-block',\r\n                            }}\r\n                            renderOpenButton={(onClick: () => void) => (\r\n                                <Button name={'Text'} enabled={true} onClick={onClick} />\r\n                            )}\r\n                        >\r\n                            <ListBox items={defaultItems} />\r\n                        </DropWithDropdownExamples1>\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label className=\"form-control-label\">Drop with dropdown without close on click inside drop</label>\r\n                    <div className=\"form-control pt5\">\r\n                        <DropWithDropdownExamples1\r\n                            id={UUID.generate()}\r\n                            buttonContainerProps={{\r\n                                className: 'inline-block',\r\n                            }}\r\n                            renderOpenButton={(onClick: () => void) => (\r\n                                <Button name={'Text'} enabled={true} onClick={onClick} />\r\n                            )}\r\n                            closeOnClickDrop={false}\r\n                        >\r\n                            <ListBox items={defaultItems} />\r\n                        </DropWithDropdownExamples1>\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label className=\"form-control-label\">Drop with dropdown without close on click outside drop</label>\r\n                    <div className=\"form-control pt5\">\r\n                        <DropWithDropdownExamples1\r\n                            id={UUID.generate()}\r\n                            buttonContainerProps={{\r\n                                className: 'inline-block',\r\n                            }}\r\n                            renderOpenButton={(onClick: () => void) => (\r\n                                <Button name={'Text'} enabled={true} onClick={onClick} />\r\n                            )}\r\n                            closeOnClickOutside={false}\r\n                        >\r\n                            <ListBox items={defaultItems} />\r\n                        </DropWithDropdownExamples1>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","// tslint:disable\r\nexport class UUID {\r\n    // TODO: replace for https://www.npmjs.com/package/uuid\r\n    static generate() {\r\n        // Source: https://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\r\n        let d = Date.now();\r\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c: string) => {\r\n            const r = (d + Math.random() * 16) % 16 | 0;\r\n            d = Math.floor(d / 16);\r\n            return (c === 'x' ? r : (r & 0x3) | 0x8).toString(16);\r\n        });\r\n    }\r\n}\r\n// tslint:enable\r\n","const internalComponentPropsToOmit: string[] = ['children', 'dangerouslySetInnerHTML'];\r\n\r\n// We omit those props for the input native tag because those props are reserved for the Input component and\r\n// to stay compatible with the old interface\r\nconst inputTagPropsToOmit: string[] = [\r\n    ...internalComponentPropsToOmit,\r\n    'defaultValue',\r\n    'onClick',\r\n    'onChange',\r\n    'onBlur',\r\n    'value',\r\n    'valid',\r\n];\r\n\r\nexport const PropsToOmitUtils = {\r\n    internal: internalComponentPropsToOmit,\r\n    input: inputTagPropsToOmit,\r\n};\r\n","import * as React from 'react';\r\nimport * as _ from 'underscore';\r\nimport {SlideY} from '../../../animations/SlideY';\r\nimport {IReactVaporState} from '../../../ReactVapor';\r\nimport {PropsToOmitUtils} from '../../../utils/PropsToOmitUtils';\r\nimport {ReduxConnect} from '../../../utils/ReduxUtils';\r\nimport {DropPodPosition} from '../DomPositionCalculator';\r\nimport {Drop, IDropOwnProps, IDropProps, IDropStateProps} from '../Drop';\r\nimport {DefaultGroupIds} from '../redux/DropActions';\r\nimport {DropSelectors} from '../redux/DropReducers';\r\n\r\nexport type DropWithDropdownComponent<T = IDropProps> = React.ComponentClass<IDropProps>;\r\n\r\nconst mapStateToProps = (state: IReactVaporState, {id, groupId}: IDropOwnProps): IDropStateProps => ({\r\n    isOpen: DropSelectors.isOpen(state, {id, groupId}),\r\n});\r\n\r\nexport const dropWithDropdown = () => (Component: DropWithDropdownComponent): DropWithDropdownComponent => {\r\n    @ReduxConnect(mapStateToProps)\r\n    class DropWithDropdown extends React.PureComponent<IDropProps> {\r\n        static defaultProps: Partial<IDropProps>;\r\n\r\n        render() {\r\n            return (\r\n                <Component {..._.omit(this.props, PropsToOmitUtils.internal)}>\r\n                    <SlideY in={this.props.isOpen}>{this.props.children}</SlideY>\r\n                </Component>\r\n            );\r\n        }\r\n    }\r\n\r\n    DropWithDropdown.defaultProps = {\r\n        ...Drop.defaultProps,\r\n        positions: [DropPodPosition.bottom, DropPodPosition.top],\r\n        groupId: DefaultGroupIds.dropdown,\r\n    };\r\n\r\n    return DropWithDropdown;\r\n};\r\n"],"sourceRoot":""}