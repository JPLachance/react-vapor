{"version":3,"sources":["webpack:///./src/components/lastUpdated/examples/LastUpdatedConnectedExamples.tsx?fc89","webpack:///./src/components/lastUpdated/LastUpdatedConnected.tsx?3a07"],"names":["mapStateToProps","mapDispatchToProps","dispatch","onRefresh","componentDidMount","setInterval","props","render","className","style","width","id","LastUpdatedConnectedExamples","LastUpdatedConnected","state","ownProps","item","lastUpdatedComposite","time","Date","onRender","onDestroy","mergeProps"],"mappings":"i0BASMA,EAAkB,WACpB,MAAO,IAGLC,EAAqB,SACvBC,GAEA,MAAO,CACHC,UAAW,WACPD,EAAS,YAAkB,4CAMvC,2B,+CAoBA,OApBkD,OAC9C,YAAAE,kBAAA,sBACIC,aAAY,WACR,EAAKC,MAAMH,cACZ,MAGP,YAAAI,OAAA,WACI,OACI,uBAAKC,UAAU,aAAaC,MAAO,CAACC,MAAO,MACvC,2BACI,yBAAOF,UAAU,sBAAoB,yGAIrC,gBAAC,IAAoB,CAACG,GAAG,4CAfhCC,EAA4B,GADxC,YAAaZ,EAAiBC,IAClBW,GAAb,CAAkD,c,iCCvBlD,4EA8BaC,EAAgE,aAhBrD,SAACC,EAAyBC,GAC9C,IAAMC,EAA0B,YAAYF,EAAMG,qBAAsB,CAACN,GAAII,EAASJ,KAEtF,MAAO,CACHO,KAAMF,EAAOA,EAAKE,KAAO,IAAIC,SAIV,SACvBjB,EACAa,GAC4B,OAC5BK,SAAU,WAAM,OAAAlB,EAAS,YAAea,EAASJ,MACjDU,UAAW,WAAM,OAAAnB,EAAS,YAAkBa,EAASJ,SAMrD,IAAWW,WAH8D,CAI3E","file":"assets/1008.bundle.js","sourcesContent":["import * as React from 'react';\r\nimport {IReduxAction, ReduxConnect} from '../../../utils/ReduxUtils';\r\nimport {changeLastUpdated, ILastUpdatedPayload} from '../LastUpdatedActions';\r\nimport {LastUpdatedConnected} from '../LastUpdatedConnected';\r\n\r\nexport interface ILastUpdateConnectedExamplesProps {\r\n    onRefresh?: () => void;\r\n}\r\n\r\nconst mapStateToProps = () => {\r\n    return {};\r\n};\r\n\r\nconst mapDispatchToProps = (\r\n    dispatch: (action: IReduxAction<ILastUpdatedPayload>) => void\r\n): ILastUpdateConnectedExamplesProps => {\r\n    return {\r\n        onRefresh: () => {\r\n            dispatch(changeLastUpdated('LastUpdatedConnectedExampleComponent'));\r\n        },\r\n    };\r\n};\r\n\r\n@ReduxConnect(mapStateToProps, mapDispatchToProps)\r\nexport class LastUpdatedConnectedExamples extends React.Component<ILastUpdateConnectedExamplesProps, any> {\r\n    componentDidMount() {\r\n        setInterval(() => {\r\n            this.props.onRefresh();\r\n        }, 10000);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"form-group\" style={{width: 400}}>\r\n                <div>\r\n                    <label className=\"form-control-label\">\r\n                        Last update updating with Redux (every 10 seconds here with the changeLastUpdated action with\r\n                        the id)\r\n                    </label>\r\n                    <LastUpdatedConnected id=\"LastUpdatedConnectedExampleComponent\" />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport * as _ from 'underscore';\r\nimport {IReactVaporState, IReduxActionsPayload} from '../../ReactVapor';\r\nimport {IReduxAction, ReduxUtils} from '../../utils/ReduxUtils';\r\nimport {\r\n    ILastUpdatedDispatchProps,\r\n    ILastUpdatedOwnProps,\r\n    ILastUpdatedProps,\r\n    ILastUpdatedStateProps,\r\n    LastUpdated,\r\n} from './LastUpdated';\r\nimport {addLastUpdated, removeLastUpdated} from './LastUpdatedActions';\r\nimport {ILastUpdatedState} from './LastUpdatedReducers';\r\n\r\nconst mapStateToProps = (state: IReactVaporState, ownProps: ILastUpdatedOwnProps): ILastUpdatedStateProps => {\r\n    const item: ILastUpdatedState = _.findWhere(state.lastUpdatedComposite, {id: ownProps.id});\r\n\r\n    return {\r\n        time: item ? item.time : new Date(),\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (\r\n    dispatch: (action: IReduxAction<IReduxActionsPayload>) => void,\r\n    ownProps: ILastUpdatedOwnProps\r\n): ILastUpdatedDispatchProps => ({\r\n    onRender: () => dispatch(addLastUpdated(ownProps.id)),\r\n    onDestroy: () => dispatch(removeLastUpdated(ownProps.id)),\r\n});\r\n\r\nexport const LastUpdatedConnected: React.ComponentClass<ILastUpdatedProps> = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps,\r\n    ReduxUtils.mergeProps\r\n)(LastUpdated);\r\n"],"sourceRoot":""}