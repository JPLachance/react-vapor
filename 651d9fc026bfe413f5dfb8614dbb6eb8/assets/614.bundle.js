(window.webpackJsonp=window.webpackJsonp||[]).push([[614],{1701:function(o,r,p){"use strict";p.r(r),r.default="import {connect} from 'react-redux';\r\nimport {findWhere} from 'underscore';\r\n\r\nimport {IReactVaporState} from '../../ReactVapor';\r\nimport {IDispatch, ReduxUtils} from '../../utils/ReduxUtils';\r\nimport {IPopoverDispatchProps, IPopoverProps, IPopoverState, Popover} from './Popover';\r\nimport {addPopover, removePopover, setPopoverIsOpen} from './PopoverActions';\r\n\r\nconst mapStateToProps = (state: IReactVaporState, ownProps: IPopoverProps): IPopoverState => {\r\n    const popoverState = findWhere(state.popovers, {id: ownProps.id});\r\n\r\n    return {isOpen: popoverState && popoverState.isOpen};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: IDispatch, ownProps: IPopoverProps): IPopoverDispatchProps => ({\r\n    onToggle: (isOpen: boolean) => dispatch(setPopoverIsOpen(ownProps.id, isOpen)),\r\n    onMount: (isOpen: boolean = false) => dispatch(addPopover(ownProps.id, isOpen)),\r\n    onUnmount: () => dispatch(removePopover(ownProps.id)),\r\n});\r\n\r\nexport const PopoverConnected: React.ComponentClass<IPopoverProps> = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps,\r\n    ReduxUtils.mergeProps\r\n)(Popover);\r\n"}}]);
//# sourceMappingURL=614.bundle.js.map