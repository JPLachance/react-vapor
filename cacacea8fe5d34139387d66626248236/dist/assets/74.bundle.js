(window.webpackJsonp=window.webpackJsonp||[]).push([[74],{251:function(e,n,o){"use strict";o.r(n),n.default='import * as React from \'react\';\nimport {\n    Button,\n    IRadioSelectProps,\n    Label,\n    LabeledInput,\n    Radio,\n    RadioSelectConnected,\n    Section,\n    setRadioSelect,\n} from \'react-vapor\';\n\nimport {Store} from \'../../Store\';\nimport {ExampleComponent} from \'../ComponentsInterface\';\n\nexport interface IRadioSelectExampleProps extends IRadioSelectProps {\n    defaultValue?: string;\n}\n\nexport interface IRadioSelectExampleState {\n    value: string;\n}\n\nexport const RadioButtonExamples: ExampleComponent = () => (\n    <Section title="Radio set">\n        <RadioSelectExample />\n        <RadioSelectDisabledExample />\n    </Section>\n);\n\nRadioButtonExamples.description = \'Radio Buttons allow for the selection of a single option among a set of options.\';\n\nconst radioSelectConnectedId = \'radioselectconnected\';\n\n// start-print\n\nconst RadioSelectExample: React.FunctionComponent = () => (\n    <Section level={2} title="Radio select with redux store">\n        <LabeledInput label="The Label of the Radio Select">\n            <RadioSelectConnected\n                id="radioselectconnected"\n                disabledTooltip="you see me because of the disabledTooltip prop"\n                disabledValuesOnMount={[\'blue\']}\n                valueOnMount={\'brown\'}\n                onChangeCallback={() => \'insert a callBack function here\'}\n            >\n                <Radio id="Option1" name="enabledOptions" value="blue">\n                    <Label>Blue</Label>\n                </Radio>\n                <Radio id="Option2" name="enabledOptions" value="green">\n                    <Label>Green</Label>\n                    <div className="mod-align-with-radio-label text-lynch mt1">\n                        The green color has an optional description.\n                    </div>\n                </Radio>\n                <Radio id="Option3" name="enabledOptions" value="brown">\n                    <Label>Brown</Label>\n                </Radio>\n            </RadioSelectConnected>\n        </LabeledInput>\n        <Section level={3}>\n            <Button\n                enabled\n                name="disable blue option"\n                onClick={() => Store.dispatch(setRadioSelect(radioSelectConnectedId, {disabledValues: [\'blue\']}))}\n            />\n            <Button\n                enabled\n                name="enable blue option"\n                onClick={() => Store.dispatch(setRadioSelect(radioSelectConnectedId, {disabledValues: []}))}\n            />\n        </Section>\n    </Section>\n);\n\nconst RadioSelectDisabledExample: React.FunctionComponent = () => (\n    <Section level={3}>\n        <LabeledInput label="A Radio Select with all options disabled">\n            <RadioSelectConnected\n                value="a-value"\n                disabled\n                onMount={() => \'I am Mounted, just for you!\'}\n                onUnmount={() => \'This is the end, my friend...\'}\n            >\n                <Radio id="Option4" name="disabledOptions" value="yellow">\n                    <Label>Yellow</Label>\n                </Radio>\n                <Radio id="Option5" name="disabledOptions" value="red">\n                    <Label>Red</Label>\n                </Radio>\n            </RadioSelectConnected>\n        </LabeledInput>\n    </Section>\n);\n'}}]);
//# sourceMappingURL=74.bundle.js.map