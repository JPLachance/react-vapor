{"version":3,"sources":["webpack:///./src/components/examples/ToastExamples.tsx"],"names":["ToastExamples","ToastsWithLocalState","ToastsWithReduxStore","state","setState","level","title","enabled","className","name","onClick","Success","Warning","Error","Timed","left","key","id","dismiss","onClose","type","right","bottom","dismissible","dispatch","renderToast","containerId","options","toastContent","style","marginBottom","href","content"],"mappings":"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","file":"assets/186.bundle.js","sourcesContent":["import * as React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {\r\n    addToast,\r\n    Button,\r\n    IDispatch,\r\n    IToastProps,\r\n    Section,\r\n    Toast,\r\n    ToastContainer,\r\n    ToastContainerConnected,\r\n} from 'react-vapor';\r\n\r\nimport {ExampleComponent} from '../ComponentsInterface';\r\n\r\nexport const ToastExamples: ExampleComponent = () => (\r\n    <Section>\r\n        <ToastsWithLocalState />\r\n        <ToastsWithReduxStore />\r\n    </Section>\r\n);\r\n\r\nconst ToastsWithLocalState: React.FunctionComponent = () => {\r\n    const [state, setState] = React.useState({\r\n        Success: false,\r\n        Warning: false,\r\n        Error: false,\r\n        Timed: false,\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <Section level={2} title=\"Toasts with a local state\">\r\n                <Button\r\n                    enabled\r\n                    className=\"btn\"\r\n                    name=\"Top left\"\r\n                    onClick={() => setState({...state, Success: !state.Success})}\r\n                />\r\n\r\n                <Button\r\n                    enabled\r\n                    className=\"btn\"\r\n                    name=\"Middle Earth\"\r\n                    onClick={() => setState({...state, Warning: !state.Warning})}\r\n                />\r\n\r\n                <Button className=\"btn\" name=\"Top right\" onClick={() => setState({...state, Error: !state.Error})} />\r\n\r\n                <Button className=\"btn\" name=\"Bottom\" onClick={() => setState({...state, Timed: !state.Timed})} />\r\n            </Section>\r\n\r\n            <ToastContainer left>\r\n                {state.Success && (\r\n                    <Toast\r\n                        key=\"toast-1\"\r\n                        id=\"toast-1\"\r\n                        title=\"Timed Sucess !!\"\r\n                        dismiss={1000}\r\n                        onClose={() => setState({...state, Success: false})}\r\n                    />\r\n                )}\r\n            </ToastContainer>\r\n            <ToastContainer>\r\n                {state.Warning && (\r\n                    <Toast\r\n                        key=\"toast-1\"\r\n                        id=\"toast-1\"\r\n                        title=\"Warning !!\"\r\n                        type=\"Warning\"\r\n                        onClose={() => setState({...state, Warning: false})}\r\n                    />\r\n                )}\r\n            </ToastContainer>\r\n            <ToastContainer right>\r\n                {state.Error && (\r\n                    <Toast\r\n                        key=\"toast-1\"\r\n                        id=\"toast-1\"\r\n                        title=\"Error !!\"\r\n                        type=\"Error\"\r\n                        onClose={() => setState({...state, Error: false})}\r\n                    />\r\n                )}\r\n            </ToastContainer>\r\n            <ToastContainer bottom>\r\n                {state.Timed && (\r\n                    <Toast\r\n                        key=\"toast-1\"\r\n                        id=\"toast-1\"\r\n                        title=\"An eternal Success !\"\r\n                        dismissible={false}\r\n                        onClose={() => setState({...state, Timed: false})}\r\n                    />\r\n                )}\r\n            </ToastContainer>\r\n        </>\r\n    );\r\n};\r\n\r\nconst MapDispatchToProps = (dispatch: IDispatch) => ({\r\n    renderToast: (containerId: string, title: string, options?: IToastProps) =>\r\n        dispatch(addToast(containerId, title, options)),\r\n});\r\n\r\nconst ToastsWithReduxStoreDisconnected: React.FunctionComponent<ReturnType<typeof MapDispatchToProps>> = ({\r\n    renderToast,\r\n}) => {\r\n    const toastContent = () => (\r\n        <ul>\r\n            <li style={{marginBottom: '5px'}}>\r\n                <a href=\"#\">Some Link</a>\r\n            </li>\r\n            <li>Complex React Component</li>\r\n        </ul>\r\n    );\r\n\r\n    return (\r\n        <>\r\n            <Section level={2} title=\"Toasts with a redux store\">\r\n                <Button\r\n                    enabled\r\n                    className=\"btn\"\r\n                    name=\"Success\"\r\n                    onClick={() => renderToast('containerId', 'Success !')}\r\n                />\r\n\r\n                <Button\r\n                    enabled\r\n                    className=\"btn\"\r\n                    name=\"Warning   \"\r\n                    onClick={() => renderToast('containerId', 'Warning !', {type: 'Warning'})}\r\n                />\r\n\r\n                <Button\r\n                    className=\"btn\"\r\n                    name=\"Error\"\r\n                    onClick={() => renderToast('containerId', 'Error !', {type: 'Error'})}\r\n                />\r\n\r\n                <Button\r\n                    className=\"btn\"\r\n                    name=\"Timed Success\"\r\n                    onClick={() => renderToast('containerId', 'Timed Success !', {dismiss: 1000})}\r\n                />\r\n\r\n                <Button\r\n                    className=\"btn\"\r\n                    name=\"custom JSX\"\r\n                    onClick={() => renderToast('containerId', 'Custom JSX !', {content: toastContent})}\r\n                />\r\n                <Button\r\n                    className=\"btn\"\r\n                    name=\"custom String\"\r\n                    onClick={() => renderToast('containerId', 'Timed Success!', {content: 'I am a string !'})}\r\n                />\r\n            </Section>\r\n            <ToastContainerConnected id=\"containerId\" />\r\n        </>\r\n    );\r\n};\r\nconst ToastsWithReduxStore = connect(null, MapDispatchToProps)(ToastsWithReduxStoreDisconnected);\r\n"],"sourceRoot":""}