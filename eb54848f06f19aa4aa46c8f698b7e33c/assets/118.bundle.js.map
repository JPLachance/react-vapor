{"version":3,"sources":["webpack:////home/travis/build/coveo/react-vapor/node_modules/moment/locale sync en-ca","webpack:///./src/components/examples/ChartExamples.tsx"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","data","label","x","y","dateData","i","startOf","subtract","unix","overPattern","ChartType","Scatter","Line","Bar","ChartExamples","chartType","setChartType","className","style","height","renderChart","width","series","padding","left","right","undefined","type","key","enabled","onClick","name","innerPadding","value","isVertical","color","serie","colorPattern","point","xFormat","yFormat","show","sort","format","tickTextSize"],"mappings":"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","file":"assets/118.bundle.js","sourcesContent":["var map = {\n\t\"./en-ca\": 131,\n\t\"./en-ca.js\": 131\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 136;","import * as moment from 'moment';\r\nimport * as React from 'react';\r\nimport {\r\n    BarSeries,\r\n    Button,\r\n    ChartContainer,\r\n    ChartTooltip,\r\n    InfoLine,\r\n    LineSeries,\r\n    ScatterSeries,\r\n    VaporColors,\r\n    XGrid,\r\n    XYAxis,\r\n    XYChart,\r\n    XYPoint,\r\n    YGrid,\r\n} from 'react-vapor';\r\nimport * as _ from 'underscore';\r\nimport * as s from 'underscore.string';\r\n\r\nconst data = [\r\n    {\r\n        label: 'First',\r\n        data: [\r\n            {x: -1, y: 3},\r\n            {x: 0, y: 3},\r\n            {x: 1, y: 3},\r\n            {x: 2, y: 6},\r\n            {x: 3, y: 2},\r\n            {x: 4, y: 12},\r\n            {x: 5, y: 8},\r\n        ],\r\n    },\r\n    {\r\n        label: 'Second',\r\n        data: [\r\n            {x: -1, y: 1},\r\n            {x: 0, y: 5},\r\n            {x: 1, y: 4},\r\n            {x: 2, y: 0},\r\n            {x: 3, y: 6},\r\n            {x: 4, y: 7},\r\n            {x: 5, y: 4},\r\n        ],\r\n    },\r\n    {\r\n        label: 'Third',\r\n        data: [\r\n            {x: -1, y: 4},\r\n            {x: 0, y: 7},\r\n            {x: 1, y: 1},\r\n            {x: 2, y: 1},\r\n            {x: 3, y: 1},\r\n            {x: 4, y: 2},\r\n            {x: 5, y: 7},\r\n        ],\r\n    },\r\n];\r\n\r\nconst dateData = [\r\n    {\r\n        label: 'First',\r\n        data: _.range(25).map((i: number) => ({\r\n            x: moment()\r\n                .startOf('day')\r\n                .subtract(i, 'day')\r\n                .unix(),\r\n            y: i + 1,\r\n        })),\r\n    },\r\n];\r\n\r\nconst overPattern = [VaporColors['orange-1'], VaporColors['orange-2'], VaporColors['orange-3']];\r\nconst ChartType = {\r\n    Scatter: 'scatter',\r\n    Line: 'line',\r\n    Bar: 'bar',\r\n};\r\n\r\nexport const ChartExamples: React.FunctionComponent = () => {\r\n    const [chartType, setChartType] = React.useState(ChartType.Scatter);\r\n    return (\r\n        <div className=\"mt2\">\r\n            <div className=\"form-group\">\r\n                <label className=\"form-control-label\">Basic {s.capitalize(chartType)} Chart</label>\r\n                <div className=\"form-control\" style={{height: '300px'}}>\r\n                    <ChartContainer\r\n                        renderChart={(width, height) => (\r\n                            <XYChart\r\n                                series={[data[0]]}\r\n                                height={height}\r\n                                width={width}\r\n                                padding={\r\n                                    chartType === ChartType.Bar ? {left: width / 12, right: width / 12} : undefined\r\n                                }\r\n                            >\r\n                                {chartType === ChartType.Scatter && <ScatterSeries />}\r\n                                {chartType === ChartType.Line && <LineSeries />}\r\n                                {chartType === ChartType.Bar && <BarSeries />}\r\n                            </XYChart>\r\n                        )}\r\n                    />\r\n                </div>\r\n                {_.map(ChartType, (type) => (\r\n                    <Button\r\n                        key={type}\r\n                        enabled={chartType !== type}\r\n                        onClick={() => setChartType(type)}\r\n                        name={`${type} Series`}\r\n                    />\r\n                ))}\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"form-control-label\">Chart with tooltip</label>\r\n                <div className=\"form-control\" style={{height: '300px'}}>\r\n                    <ChartContainer\r\n                        renderChart={(width, height) => (\r\n                            <XYChart series={data} height={height} width={width}>\r\n                                <ScatterSeries />\r\n                                <ChartTooltip />\r\n                            </XYChart>\r\n                        )}\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"form-control-label\">Chart with y-axis and Info Lines</label>\r\n                <div className=\"form-control\" style={{height: '300px'}}>\r\n                    <ChartContainer\r\n                        renderChart={(width, height) => (\r\n                            <XYChart series={data} height={height} width={width}>\r\n                                <XYAxis x={{innerPadding: 30}} y={{innerPadding: 30}}>\r\n                                    <XGrid padding={30} />\r\n                                    <YGrid padding={30} />\r\n                                    <LineSeries />\r\n                                    <InfoLine value={3} label=\"Three\" padding={30} />\r\n                                    <InfoLine value={2} label=\"Two\" padding={30} isVertical />\r\n                                </XYAxis>\r\n                            </XYChart>\r\n                        )}\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"form-control-label\">Combined Chart</label>\r\n                <div className=\"form-control\" style={{height: '500px'}}>\r\n                    <ChartContainer\r\n                        renderChart={(width, height) => (\r\n                            <XYChart\r\n                                series={data}\r\n                                height={height}\r\n                                width={width}\r\n                                color={(serie: number, colorPattern: string[], point?: XYPoint) =>\r\n                                    point && point.y > 7 ? overPattern[serie] : colorPattern[serie]\r\n                                }\r\n                                xFormat={(value: number) =>\r\n                                    ['One', 'Two', 'Three', 'Four', 'Five', 'Six', 'Seven'][value + 1]\r\n                                }\r\n                                yFormat={(value: number) => value * 10 + '%'}\r\n                            >\r\n                                <XYAxis x={{innerPadding: width / 12}} y={{show: false}}>\r\n                                    <BarSeries />\r\n                                    <LineSeries />\r\n                                    <ScatterSeries />\r\n                                    <ChartTooltip sort />\r\n                                </XYAxis>\r\n                            </XYChart>\r\n                        )}\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"form-control-label\">Date Chart</label>\r\n                <div className=\"form-control\" style={{height: '300px'}}>\r\n                    <ChartContainer\r\n                        renderChart={(width, height) => (\r\n                            <XYChart\r\n                                series={dateData}\r\n                                height={height}\r\n                                width={width}\r\n                                xFormat={(value: number) => moment.unix(value).format('YYYY-MM-DD')}\r\n                            >\r\n                                <XYAxis x={{tickTextSize: 120}} y={{show: false}}>\r\n                                    <BarSeries />\r\n                                    <ChartTooltip sort />\r\n                                </XYAxis>\r\n                            </XYChart>\r\n                        )}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label className=\"form-control-label\">Date Chart</label>\r\n                <div className=\"form-control\" style={{height: '300px'}}>\r\n                    <ChartContainer\r\n                        renderChart={(width, height) => (\r\n                            <XYChart\r\n                                series={[\r\n                                    {\r\n                                        label: 'First',\r\n                                        data: [\r\n                                            {\r\n                                                x: moment()\r\n                                                    .startOf('day')\r\n                                                    .unix(),\r\n                                                y: 500,\r\n                                            },\r\n                                        ],\r\n                                    },\r\n                                ]}\r\n                                height={height}\r\n                                width={width}\r\n                                xFormat={(value: number) => moment.unix(value).format('YYYY-MM-DD')}\r\n                            >\r\n                                <XYAxis x={{tickTextSize: 120}} y={{show: false}}>\r\n                                    <BarSeries />\r\n                                    <ChartTooltip sort />\r\n                                </XYAxis>\r\n                            </XYChart>\r\n                        )}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n"],"sourceRoot":""}