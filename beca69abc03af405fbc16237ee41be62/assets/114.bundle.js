(window.webpackJsonp=window.webpackJsonp||[]).push([[114],{1216:function(n,r,o){"use strict";o.r(r),r.default='import * as React from \'react\';\r\n\r\nimport {TooltipPlacement} from \'../../utils/TooltipUtils\';\r\nimport {Svg} from \'../svg/Svg\';\r\nimport {Tooltip} from \'../tooltip/Tooltip\';\r\n\r\nexport interface IConfirmButtonLabel {\r\n    cancel: string;\r\n    confirm: string;\r\n}\r\n\r\nexport interface IConfirmData {\r\n    confirmType: string;\r\n    confirmLabel?: string;\r\n    buttonLabels?: IConfirmButtonLabel;\r\n}\r\n\r\nexport interface IBaseActionOptions {\r\n    enabled: boolean;\r\n    name?: string;\r\n    link?: string;\r\n    target?: string;\r\n    primary?: boolean;\r\n    tooltip?: string;\r\n    tooltipPlacement?: string;\r\n    hideDisabled?: boolean;\r\n    onClick?: () => void;\r\n}\r\n\r\nexport interface IActionOptions extends IBaseActionOptions {\r\n    icon?: string;\r\n    iconClass?: string;\r\n    id?: string;\r\n    trigger?: () => void;\r\n    unrepeatable?: boolean;\r\n    callOnDoubleClick?: boolean;\r\n    requiresConfirmation?: IConfirmData;\r\n    separator?: boolean;\r\n    grouped?: boolean;\r\n    subActions?: IActionOptions[];\r\n    hidden?: boolean;\r\n}\r\n\r\nexport interface IBasicActionProps {\r\n    action: IActionOptions;\r\n    simple?: boolean;\r\n}\r\n\r\nexport interface IActionProps extends React.ClassAttributes<Action>, IBasicActionProps {}\r\n\r\nexport class Action extends React.Component<IActionProps, any> {\r\n    static defaultProps: Partial<IActionOptions> = {\r\n        hideDisabled: true,\r\n    };\r\n\r\n    render() {\r\n        const {icon, id, name, tooltipPlacement, tooltip} = this.props.action;\r\n        const actionIcon: JSX.Element = icon ? (\r\n            <Svg svgName={icon} className="action-icon" svgClass="icon fill-medium-blue" />\r\n        ) : (\r\n            <Svg svgName="more" className="action-icon action-icon-more" svgClass="icon icon-medium fill-medium-blue" />\r\n        );\r\n        const inside: string | JSX.Element = this.props.simple ? (\r\n            name\r\n        ) : (\r\n            <span className="inline-flex flex-center">\r\n                {actionIcon}\r\n                <span className="action-label" data-trigger={id || name}>\r\n                    {name}\r\n                </span>\r\n            </span>\r\n        );\r\n        const placement: string = tooltipPlacement || TooltipPlacement.Right;\r\n        const wholeAction: JSX.Element = tooltip ? (\r\n            <Tooltip title={tooltip} placement={placement}>\r\n                {inside}\r\n            </Tooltip>\r\n        ) : (\r\n            <span>{inside}</span>\r\n        );\r\n\r\n        return wholeAction;\r\n    }\r\n}\r\n'}}]);
//# sourceMappingURL=114.bundle.js.map