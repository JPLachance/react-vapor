(window.webpackJsonp=window.webpackJsonp||[]).push([[726],{1814:function(t,r,s){"use strict";s.r(r),r.default="import {mount, ReactWrapper, shallow} from 'enzyme';\r\nimport * as React from 'react';\r\n\r\nimport {Loading} from '../../loading/Loading';\r\nimport {Svg} from '../../svg/Svg';\r\nimport {StatusCard, StatusCardProps} from '../StatusCard';\r\nimport * as styles from '../styles/StatusCard.scss';\r\n\r\ndescribe('StatusCard', () => {\r\n    const basicProps: StatusCardProps = {\r\n        color: 'green',\r\n        title: 'Title',\r\n    };\r\n    const statusCardChild = 'Some child';\r\n\r\n    it('should render without errors', () => {\r\n        expect(() => {\r\n            shallow(<StatusCard {...basicProps}>{statusCardChild}</StatusCard>);\r\n        }).not.toThrow();\r\n    });\r\n\r\n    describe('<StatusCard />', () => {\r\n        let statusCard: ReactWrapper<StatusCardProps>;\r\n\r\n        const mountWithProps = (props?: Partial<StatusCardProps>) => {\r\n            statusCard = mount(\r\n                <StatusCard {...basicProps} {...props}>\r\n                    {statusCardChild}\r\n                </StatusCard>,\r\n                {attachTo: document.getElementById('App')}\r\n            );\r\n        };\r\n\r\n        beforeEach(() => {\r\n            mountWithProps();\r\n        });\r\n\r\n        afterEach(() => {\r\n            statusCard.unmount();\r\n            statusCard.detach();\r\n        });\r\n\r\n        it('should get the props correctly', () => {\r\n            const addedProps: Partial<StatusCardProps> = {icon: 'view', simple: true};\r\n            mountWithProps(addedProps);\r\n            const statusCardProps = statusCard.props();\r\n\r\n            expect(statusCardProps.color).toBe(basicProps.color);\r\n            expect(statusCardProps.icon).toBe(addedProps.icon);\r\n            expect(statusCardProps.title).toBe(basicProps.title);\r\n            expect(statusCardProps.simple).toBe(addedProps.simple);\r\n            expect((statusCardProps as any).children).toBe(statusCardChild);\r\n        });\r\n\r\n        it('should have the class styles.statusCard', () => {\r\n            expect(statusCard.find(`.${styles.statusCard}`).length).toBe(1);\r\n        });\r\n\r\n        it('should have a class with the color prop', () => {\r\n            expect(statusCard.find(`.border-left-color-${basicProps.color}`).length).toBe(1);\r\n        });\r\n\r\n        it('should have the class simple if simple prop is set to true', () => {\r\n            expect(statusCard.find('.simple').length).toBe(0);\r\n\r\n            mountWithProps({simple: true});\r\n\r\n            expect(statusCard.find('.simple').length).toBe(1);\r\n        });\r\n\r\n        it('should render a <Svg /> with the class styles.statusCardIcon if there is an icon prop', () => {\r\n            expect(statusCard.find(Svg).length).toBe(0);\r\n\r\n            mountWithProps({icon: 'view'});\r\n\r\n            const svg = statusCard.find(Svg);\r\n            expect(svg.length).toBe(1);\r\n            expect(svg.find(`.${styles.statusCardIcon}`).length).toBeGreaterThanOrEqual(1);\r\n        });\r\n\r\n        it('should render a <h3/> with the class styles.statusCardTitle', () => {\r\n            const title = statusCard.find('h3');\r\n            expect(title.length).toBe(1);\r\n            expect(title.html()).toContain(basicProps.title);\r\n            expect(title.find(`.${styles.statusCardTitle}`).length).toBe(1);\r\n        });\r\n\r\n        it('should render the children with the class styles.statusCardInfo', () => {\r\n            const children = statusCard.find(`.${styles.statusCardInfo}`);\r\n            expect(children.length).toBe(1);\r\n            expect(children.html()).toContain(statusCardChild);\r\n        });\r\n\r\n        it('should render a <Loading /> component when the prop loading is set to true', () => {\r\n            expect(statusCard.find(Loading).length).toBe(0);\r\n\r\n            mountWithProps({loading: true});\r\n\r\n            expect(statusCard.find(Loading).length).toBe(1);\r\n        });\r\n    });\r\n});\r\n"}}]);
//# sourceMappingURL=726.bundle.js.map