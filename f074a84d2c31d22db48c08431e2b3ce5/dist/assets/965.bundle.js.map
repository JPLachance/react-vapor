{"version":3,"sources":["webpack:///./src/components/dropdownSearch/examples/DropdownSearchExamples.tsx?05ae","webpack:///./src/utils/UUID.ts?611d","webpack:///./src/components/dropdownSearch/MultiSelectDropdownSearch/SelectedOption.tsx?08de","webpack:///./src/components/dropdownSearch/DropdownSearch.tsx?0c81","webpack:///./src/components/dropdownSearch/DropdownSearchInfiniteScrollOptions.tsx?d739","webpack:///./src/components/dropdownSearch/DropdownSearchAutoInfiniteScroll.tsx?c1d4","webpack:///./node_modules/react-infinite-scroll-component/lib/index.js","webpack:///./src/components/dropdownSearch/DropdownSearchConnected.tsx?eaf0","webpack:///./src/components/dropdownSearch/MultiSelectDropdownSearch/MultiSelectDropdownSearch.tsx?394c","webpack:///./src/components/dropdownSearch/MultiSelectDropdownSearch/MultiSelectInput.tsx?968d","webpack:///./src/components/dropdownSearch/MultiSelectDropdownSearch/MultiSelectDropdownSearchConnected.tsx?6ce5"],"names":["mapStateToProps","mapDispatchToProps","dispatch","onOptionsChanged","id","options","ids","optionsPage","componentWillMount","i","this","generate","value","displayValue","hidden","render","defaultOptions","manyOptions","n","className","deselectAllTooltipText","filterPlaceholder","map","opt","append","undefined","disabled","disabledTooltip","title","placement","maxWidth","supportSingleCustomOption","noResultText","defaultSelectedOption","width","highlightAllFilterResult","prefix","svg","svgName","svgClass","isDisabled","infiniteScroll","next","getNewOptions","dataLength","hasMore","endMessage","loader","hasMoreItems","maxPage","customFiltering","filterText","filter","autoInfiniteScroll","optionsPerPage","optionNumber","push","props","deprecated","DropdownSearchExamples","d","Date","now","replace","c","r","Math","random","floor","toString","handleOnRemove","onRemoveClick","tooltipContent","count","children","label","tooltipLabel","key","Top","delayShow","onClick","handleOnOptionClick","e","target","option","currentTarget","dataset","onOptionClick","onOptionClickCallBack","preventDefault","stopPropagation","componentDidUpdate","updateScrollPositionBasedOnActiveElement","dropdownButton","setFocusOnDropdownButton","isSearchOn","focus","updateOptions","length","onMount","onMountCallBack","componentWillUnmount","onDestroy","getClasses","style","getStyles","getMainInput","getDropdownMenu","getDropdownOptions","ElementTag","getDisplayedOptions","toLowerCase","index","opts","optionClasses","selected","wrapperClasses","active","JSON","stringify","activeOption","valueToShow","highlightThreshold","getTextFiltered","formattedOption","onMouseDown","getDropdownPrepend","getSvg","getDropdownOptionAppend","noSpanWrapper","getNoOptions","getSelectedOption","getSelectedOptions","text","originalText","highlightIndexKey","textFilterElements","indexOf","substring","getTextElement","subText","getMainInputPrepend","prepend","fixedPrepend","classes","content","selectedOption","filterPlaceHolder","isOpened","onFilter","handleOnFilterTextChange","onBlur","handleOnBlur","onKeyDown","handleOnKeyDownFilterBox","isAutoFocus","buttonClasses","default","type","handleOnClick","handleOnClose","handleOnKeyDownDropdownButton","ref","input","getSelectedOptionElement","isScrolledIntoView","el","boxTop","ulElement","getBoundingClientRect","top","boxBottom","bottom","elTop","elBottom","custom","handleOnOptionClickOnKeyDown","isKeyToPreventOnKeyDown","keyCode","upArrow","onKeyDownFilterBox","open","modMenu","containerClasses","dropdownOptions","onMouseEnter","handleOnMouseEnter","ulElementRefFunction","menu","searchThresold","activeLi","getElementsByClassName","scrollTop","onFilterTextChange","onClickCallBack","onToggleDropdown","onClose","enter","tab","onKeyDownDropdownButton","downArrow","onMouseEnterDropdown","defaultProps","scrollableTarget","overflow","state","activeOptions","slice","componentWillUpdate","nextProps","setState","additionalOptions","concat","hasMoreOptions","showEndMessage","factory","__WEBPACK_EXTERNAL_MODULE_8__","modules","installedModules","__webpack_require__","moduleId","exports","module","loaded","call","m","p","Object","defineProperty","_extends","assign","arguments","source","prototype","hasOwnProperty","_createClass","defineProperties","descriptor","enumerable","configurable","writable","Constructor","protoProps","staticProps","_interopRequireDefault","obj","__esModule","_react","_react2","_propTypes2","_utilsThrottle2","_utilsThreshold","InfiniteScroll","_Component","instance","TypeError","_classCallCheck","_x2","_x3","_x4","_again","object","property","receiver","Function","desc","getOwnPropertyDescriptor","getter","get","parent","getPrototypeOf","_get","showLoader","lastScrollTop","actionTriggered","pullToRefreshThresholdBreached","startY","currentY","dragging","maxPullDownDistance","onScrollListener","bind","throttledOnScrollListener","onStart","onMove","onEnd","getScrollableTarget","subClass","superClass","create","constructor","setPrototypeOf","__proto__","_inherits","_scrollableNode","height","_infScroll","window","addEventListener","initialScrollY","scrollHeight","scrollTo","pullDownToRefresh","_pullDown","firstChild","forceUpdate","refreshFunction","Error","removeEventListener","HTMLElement","document","getElementById","console","warn","evt","pageY","touches","willChange","transition","pullDownToRefreshThreshold","transform","_this","requestAnimationFrame","scrollThreshold","clientHeight","body","documentElement","screen","availHeight","threshold","parseThreshold","unit","ThresholdUnits","Pixel","event","_this2","onScroll","setTimeout","isElementAtBottom","_this3","WebkitOverflowScrolling","hasChildren","outerDivStyle","createElement","infScroll","position","pullDown","left","right","pullDownToRefreshContent","releaseToRefreshContent","Component","disableBrowserPullToRefresh","propTypes","func","bool","node","isRequired","oneOfType","number","string","Percent","match","parseFloat","defaultThreshold","fn","threshhold","scope","last","deferTimer","context","args","clearTimeout","apply","makeEmptyFunction","arg","emptyFunction","thatReturns","thatReturnsFalse","thatReturnsTrue","thatReturnsNull","thatReturnsThis","thatReturnsArgument","condition","format","a","b","f","error","argIndex","name","framesToPop","invariant","ReactPropTypesSecret","shim","propName","componentName","location","propFullName","secret","getShim","ReactPropTypes","array","symbol","any","arrayOf","element","instanceOf","objectOf","oneOf","shape","checkPropTypes","PropTypes","DropdownSearchConnected","ownProps","dropdownSearch","mergeProps","onCustomOptionClick","createOptionText","selectedOptions","onRemoveSelectedOption","onRemoveAll","onRemoveAllSelectedOptions","onFocus","displayedOptions","handleInputChange","handleOnRemoveAll","handleOnFocus","handleOnKeyDown","getSelectedOptionComponents","selectedOptionComponents","getRemoveAllSelectedOptionsButton","placeholder","onChange","MultiSelectDropdownSearchConnected"],"mappings":"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","file":"assets/965.bundle.js","sourcesContent":["import * as React from 'react';\r\nimport * as _ from 'underscore';\r\n\r\nimport {IDispatch, ReduxConnect} from '../../../utils/ReduxUtils';\r\nimport {UUID} from '../../../utils/UUID';\r\nimport {IDropdownOption} from '../DropdownSearch';\r\nimport {updateOptionsDropdownSearch} from '../DropdownSearchActions';\r\nimport {DropdownSearchConnected} from '../DropdownSearchConnected';\r\nimport {MultiSelectDropdownSearchConnected} from '../MultiSelectDropdownSearch/MultiSelectDropdownSearchConnected';\r\n\r\ninterface DropdownSearchExamplesProps {\r\n    onOptionsChanged?: (id: string, options: IDropdownOption[]) => void;\r\n}\r\n\r\nconst maxPage: number = 500; // Change this for the max number of elements in the infinite scroll example (page * 10 element)\r\n\r\nconst mapStateToProps = () => ({});\r\n\r\nconst mapDispatchToProps = (dispatch: IDispatch): DropdownSearchExamplesProps => ({\r\n    onOptionsChanged: (id: string, options: IDropdownOption[]) => dispatch(updateOptionsDropdownSearch(id, options)),\r\n});\r\n\r\n@ReduxConnect(mapStateToProps, mapDispatchToProps)\r\nexport class DropdownSearchExamples extends React.Component<DropdownSearchExamplesProps, {}> {\r\n    static deprecated = true;\r\n\r\n    private ids: string[] = [];\r\n    private optionsPage: number = 1;\r\n    private options: IDropdownOption[];\r\n\r\n    componentWillMount() {\r\n        // Generate ids ONCE for the components below\r\n        for (let i = 0; i < 15; i++) {\r\n            this.ids[i] = UUID.generate();\r\n        }\r\n\r\n        this.options = [\r\n            {value: 'Option 1', displayValue: 'Option 1', hidden: false},\r\n            {value: 'Option 2', displayValue: 'Option 2'},\r\n            {value: 'Option 3', displayValue: 'Option 3'},\r\n            {value: 'Option 4', displayValue: 'Option 4'},\r\n            {value: 'Option 5', displayValue: 'Option 5'},\r\n            {value: 'Option 6', displayValue: 'Option 6'},\r\n            {value: 'Option 7', displayValue: 'Option 7'},\r\n            {value: 'Option 8', displayValue: 'Option 8'},\r\n            {value: 'Option 9', displayValue: 'Option 9'},\r\n            {value: 'Option 10', displayValue: 'Option 10'},\r\n        ];\r\n    }\r\n\r\n    render() {\r\n        const defaultOptions = {\r\n            defaultOptions: [...this.options],\r\n        };\r\n\r\n        const customOptions = {\r\n            defaultOptions: [\r\n                {\r\n                    value: 'test 1',\r\n                    displayValue: 'test 1',\r\n                    prefix: 'Prefix',\r\n                    svg: {svgName: 'access-private', svgClass: 'icon fill-blue'},\r\n                },\r\n                {value: 'test 2', prefix: 'Prefix 2', svg: {svgName: 'access-secured', svgClass: 'icon fill-blue'}},\r\n            ],\r\n            defaultSelectedOption: {\r\n                value: 'test 1',\r\n                displayValue: 'test 1',\r\n                prefix: 'Prefix',\r\n                svg: {svgName: 'access-private', svgClass: 'icon fill-blue'},\r\n            },\r\n        };\r\n\r\n        const manyOptions = {\r\n            defaultOptions: _.times(5000, (n: number) => {\r\n                return {\r\n                    displayValue: `Test ${n}`,\r\n                    value: `Test ${n}`,\r\n                };\r\n            }),\r\n        };\r\n\r\n        return (\r\n            <div className=\"mt2\">\r\n                <div className=\"form-group\">\r\n                    <label className=\"form-control-label\">Multiselect Dropdown</label>\r\n                    <div className=\"form-control\">\r\n                        <MultiSelectDropdownSearchConnected\r\n                            {...defaultOptions}\r\n                            id={this.ids[0]}\r\n                            deselectAllTooltipText=\"Unselect all\"\r\n                            filterPlaceholder=\"Select options\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label className=\"form-control-label\">Default Dropdown</label>\r\n                    <div className=\"form-control\">\r\n                        <DropdownSearchConnected {...defaultOptions} id={this.ids[1]} />\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label className=\"form-control-label\">Default Dropdown with appends and disabled options</label>\r\n                    <div className=\"form-control\">\r\n                        <DropdownSearchConnected\r\n                            id={this.ids[2]}\r\n                            defaultOptions={defaultOptions.defaultOptions.map((opt, i) => ({\r\n                                ...opt,\r\n                                append: i % 2 ? 'APP' : undefined,\r\n                                disabled: i < 2,\r\n                                disabledTooltip: {title: 'i am disabled', placement: 'top'},\r\n                            }))}\r\n                            maxWidth=\"300px\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label className=\"form-control-label\">Default Dropdown with single custom option support</label>\r\n                    <div className=\"form-control\">\r\n                        <DropdownSearchConnected\r\n                            {...defaultOptions}\r\n                            id={this.ids[3]}\r\n                            supportSingleCustomOption\r\n                            noResultText=\"Press enter or tab to select the above value, or remove it to display all options.\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label className=\"form-control-label\">Dropdown with default selected option</label>\r\n                    <div className=\"form-control\">\r\n                        <DropdownSearchConnected\r\n                            {...defaultOptions}\r\n                            id={this.ids[4]}\r\n                            defaultSelectedOption={{value: 'Option 1'}}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label className=\"form-control-label\">Dropdown with custom default selected option</label>\r\n                    <div className=\"form-control\">\r\n                        <DropdownSearchConnected\r\n                            {...defaultOptions}\r\n                            id={this.ids[5]}\r\n                            defaultSelectedOption={{value: 'Custom default selected option'}}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label className=\"form-control-label\">Dropdown with 5 000 options</label>\r\n                    <div className=\"form-control\">\r\n                        <DropdownSearchConnected {...manyOptions} id={this.ids[6]} />\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label className=\"form-control-label\">Dropdown with max width 350px</label>\r\n                    <div className=\"form-control\">\r\n                        <DropdownSearchConnected {...defaultOptions} maxWidth=\"350px\" id={this.ids[7]} />\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label className=\"form-control-label\">Dropdown with filter placeholder</label>\r\n                    <div className=\"form-control\">\r\n                        <DropdownSearchConnected\r\n                            {...defaultOptions}\r\n                            filterPlaceholder=\"Filter placeholder test\"\r\n                            id={this.ids[8]}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label className=\"form-control-label\">Dropdown with fixed width 500px</label>\r\n                    <div className=\"form-control\">\r\n                        <DropdownSearchConnected {...defaultOptions} width=\"500px\" id={this.ids[9]} />\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label className=\"form-control-label\">Dropdown with highlight on filter search</label>\r\n                    <div className=\"form-control\">\r\n                        <DropdownSearchConnected {...defaultOptions} highlightAllFilterResult id={this.ids[10]} />\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label className=\"form-control-label\">Dropdown with custom option</label>\r\n                    <div className=\"form-control\">\r\n                        <DropdownSearchConnected {...customOptions} id={this.ids[11]} />\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label className=\"form-control-label\">Dropdown disabled</label>\r\n                    <div className=\"form-control\">\r\n                        <DropdownSearchConnected {...defaultOptions} isDisabled id={this.ids[12]} />\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label className=\"form-control-label\">Dropdown with an infinite scroll</label>\r\n                    <div className=\"form-control\">\r\n                        <DropdownSearchConnected\r\n                            {...defaultOptions}\r\n                            defaultOptions={this.options}\r\n                            id={this.ids[13]}\r\n                            infiniteScroll={{\r\n                                next: () => {\r\n                                    this.optionsPage++;\r\n                                    this.getNewOptions();\r\n                                },\r\n                                dataLength: 0, // Needed to satisfy interface but will overwritten (because of the way we pass options)\r\n                                hasMore: true, // Also needed to satisfy the interface, but will be overwritten because the dropdown currently has a hard time changing props\r\n                                endMessage: (\r\n                                    <div className=\"option-wrapper\">\r\n                                        <span className=\"dropdown-option\">No more items to show</span>\r\n                                    </div>\r\n                                ),\r\n                                loader: (\r\n                                    <div className=\"option-wrapper\">\r\n                                        <span className=\"dropdown-option\">Loading more items...</span>\r\n                                    </div>\r\n                                ),\r\n                            }}\r\n                            hasMoreItems={() => this.optionsPage < maxPage - 1} // Used to overwrite the hasMore prop for the infinite scroll\r\n                            customFiltering={(filterText: string) => this.filter(filterText)}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label className=\"form-control-label\">\r\n                        Dropdown with an infinite scroll & filters on all options\r\n                    </label>\r\n                    <div className=\"form-control\">\r\n                        <DropdownSearchConnected\r\n                            {...manyOptions}\r\n                            autoInfiniteScroll={{\r\n                                optionsPerPage: 10,\r\n                                endMessage: (\r\n                                    <div className=\"option-wrapper\">\r\n                                        <span className=\"dropdown-option\">No more items to show</span>\r\n                                    </div>\r\n                                ),\r\n                                loader: (\r\n                                    <div className=\"option-wrapper\">\r\n                                        <span className=\"dropdown-option\">Loading more items...</span>\r\n                                    </div>\r\n                                ),\r\n                            }}\r\n                            id={this.ids[14]}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private getNewOptions() {\r\n        if (this.optionsPage < maxPage) {\r\n            _.times(10, (n: number) => {\r\n                const optionNumber: number = n + this.optionsPage * 10;\r\n                this.options.push({\r\n                    displayValue: `Option ${optionNumber}`,\r\n                    value: `Option ${optionNumber}`,\r\n                });\r\n            });\r\n            this.props.onOptionsChanged(this.ids[13], this.options);\r\n        }\r\n    }\r\n\r\n    private filter(filterText: string) {\r\n        this.props.onOptionsChanged(this.ids[13], [\r\n            {\r\n                displayValue: `Custom option return by filtering`,\r\n                value: `Custom option`,\r\n            },\r\n            {\r\n                displayValue: `Custom option ${filterText}`,\r\n                value: `Custom option2`,\r\n            },\r\n        ]);\r\n    }\r\n}\r\n","// tslint:disable\r\nexport class UUID {\r\n    // TODO: replace for https://www.npmjs.com/package/uuid\r\n    static generate() {\r\n        // Source: https://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\r\n        let d = Date.now();\r\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c: string) => {\r\n            const r = (d + Math.random() * 16) % 16 | 0;\r\n            d = Math.floor(d / 16);\r\n            return (c === 'x' ? r : (r & 0x3) | 0x8).toString(16);\r\n        });\r\n    }\r\n}\r\n// tslint:enable\r\n","import * as React from 'react';\r\n\r\nimport {TooltipPlacement} from '../../../utils/TooltipUtils';\r\nimport {Svg} from '../../svg/Svg';\r\nimport {Tooltip} from '../../tooltip/Tooltip';\r\n\r\nexport interface ISelectedOptionProps {\r\n    value: string;\r\n    label: React.ReactNode;\r\n    onRemoveClick?: (value: string) => void;\r\n}\r\n\r\nexport class SelectedOption extends React.PureComponent<ISelectedOptionProps> {\r\n    handleOnRemove = () => {\r\n        this.props.onRemoveClick?.(this.props.value);\r\n    };\r\n\r\n    render() {\r\n        const tooltipContent = React.Children.count(this.props.children) > 0 ? this.props.children : this.props.label;\r\n        const tooltipLabel = typeof this.props.label === 'string' ? this.props.label : '';\r\n\r\n        return (\r\n            <div className=\"selected-option\" key={this.props.value}>\r\n                <Tooltip\r\n                    title={tooltipLabel}\r\n                    placement={TooltipPlacement.Top}\r\n                    className=\"selected-option-value\"\r\n                    delayShow={300}\r\n                >\r\n                    {tooltipContent}\r\n                </Tooltip>\r\n\r\n                <div className=\"remove-option\" onClick={this.handleOnRemove}>\r\n                    <Svg svgName=\"clear\" svgClass=\"icon fill-medium-blue mod-small\" />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import * as classNames from 'classnames';\r\nimport * as React from 'react';\r\nimport {InfiniteScrollProps} from 'react-infinite-scroll-component';\r\nimport * as _ from 'underscore';\r\nimport * as s from 'underscore.string';\r\n\r\nimport {keyCode} from '../../utils/InputUtils';\r\nimport {Content} from '../content/Content';\r\nimport {FilterBox} from '../filterBox/FilterBox';\r\nimport {ISvgProps, Svg} from '../svg/Svg';\r\nimport {ITooltipProps, Tooltip} from '../tooltip/Tooltip';\r\nimport {\r\n    DropdownSearchAutoInfiniteScroll,\r\n    IDropdownSearchAutoInfiniteScrollOptions,\r\n} from './DropdownSearchAutoInfiniteScroll';\r\nimport {DropdownSearchInfiniteScrollOptions} from './DropdownSearchInfiniteScrollOptions';\r\n\r\nexport interface IDropdownOption {\r\n    svg?: ISvgProps;\r\n    value: string;\r\n    displayValue?: string;\r\n    prefix?: string;\r\n    selected?: boolean;\r\n    custom?: boolean;\r\n    hidden?: boolean;\r\n    disabled?: boolean;\r\n    disabledTooltip?: ITooltipProps;\r\n    default?: boolean;\r\n    append?: string;\r\n}\r\n\r\nexport interface IDropdownSearchStateProps {\r\n    isOpened?: boolean;\r\n    filterText?: string;\r\n    options?: IDropdownOption[];\r\n    activeOption?: IDropdownOption;\r\n    setFocusOnDropdownButton?: boolean;\r\n}\r\n\r\nexport interface IDropdownSearchOwnProps {\r\n    id?: string;\r\n    modMenu?: boolean;\r\n    fixedPrepend?: string;\r\n    containerClasses?: string[];\r\n    defaultOptions?: IDropdownOption[];\r\n    defaultSelectedOption?: IDropdownOption;\r\n    filterPlaceholder?: string;\r\n    maxWidth?: React.ReactText;\r\n    width?: React.ReactText;\r\n    hasFilterSuggestionBoxWidthFixed?: boolean;\r\n    highlightThreshold?: number;\r\n    highlightAllFilterResult?: boolean;\r\n    noResultText?: string;\r\n    createOptionText?: string;\r\n    deselectAllTooltipText?: string;\r\n    isDisabled?: boolean;\r\n    onOptionClickCallBack?: (option: IDropdownOption) => void;\r\n    onMountCallBack?: () => void;\r\n    onClickCallBack?: () => void;\r\n    supportSingleCustomOption?: boolean;\r\n    searchThresold?: number;\r\n    infiniteScroll?: InfiniteScrollProps;\r\n    hasMoreItems?: () => boolean;\r\n    customFiltering?: (filterText: string) => void;\r\n    autoInfiniteScroll?: IDropdownSearchAutoInfiniteScrollOptions;\r\n}\r\n\r\nexport interface IDropdownSearchDispatchProps {\r\n    onMount?: () => void;\r\n    onDestroy?: () => void;\r\n    onToggleDropdown?: () => void;\r\n    onBlur?: (options: IDropdownOption[]) => void;\r\n    onFocus?: () => void;\r\n    onFilterTextChange?: (filterText: string) => void;\r\n    onOptionClick?: (option: IDropdownOption) => void;\r\n    onCustomOptionClick?: (displayValue: string) => void;\r\n    onKeyDownFilterBox?: (keyCode: number, activeOption?: IDropdownOption) => void;\r\n    onKeyDownDropdownButton?: (keyCode: number, activeOption?: IDropdownOption) => void;\r\n    onMouseEnterDropdown?: (activeOption?: IDropdownOption) => void;\r\n    onRemoveSelectedOption?: (value: string) => void;\r\n    onRemoveAllSelectedOptions?: () => void;\r\n    onClose?: () => void;\r\n    updateOptions?: (options: IDropdownOption[]) => void;\r\n}\r\n\r\nexport interface IDropdownSearchProps\r\n    extends IDropdownSearchOwnProps,\r\n        IDropdownSearchStateProps,\r\n        IDropdownSearchDispatchProps {}\r\n\r\n/**\r\n * @deprecated use components from SelectComponents instead\r\n */\r\nexport class DropdownSearch extends React.Component<IDropdownSearchProps, {}> {\r\n    static defaultProps: Partial<IDropdownSearchProps> = {\r\n        isOpened: false,\r\n        highlightThreshold: 100,\r\n        highlightAllFilterResult: false,\r\n        noResultText: 'No results',\r\n        searchThresold: 7,\r\n    };\r\n\r\n    filterInput: HTMLDivElement;\r\n    ulElement: HTMLElement;\r\n\r\n    protected dropdownButton: HTMLElement;\r\n\r\n    componentDidUpdate() {\r\n        this.updateScrollPositionBasedOnActiveElement();\r\n\r\n        if (this.dropdownButton && this.props.setFocusOnDropdownButton && this.isSearchOn()) {\r\n            this.dropdownButton.focus();\r\n        }\r\n\r\n        if (\r\n            this.props.updateOptions &&\r\n            !this.props.options.length &&\r\n            this.props.defaultOptions &&\r\n            this.props.defaultOptions.length\r\n        ) {\r\n            this.props.updateOptions(this.props.defaultOptions);\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        if (this.props.onMount) {\r\n            this.props.onMount();\r\n        }\r\n\r\n        if (this.props.onMountCallBack) {\r\n            this.props.onMountCallBack();\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (this.props.onDestroy) {\r\n            this.props.onDestroy();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={this.getClasses()} style={this.getStyles()}>\r\n                {this.getMainInput()}\r\n                {this.getDropdownMenu()}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    protected getDropdownOptions(): JSX.Element[] {\r\n        const hasInfiniteScrolling = !!this.props.infiniteScroll || !!this.props.autoInfiniteScroll;\r\n        const ElementTag: string = hasInfiniteScrolling ? 'div' : 'li';\r\n        const options = _.chain(this.getDisplayedOptions())\r\n            .filter((option: IDropdownOption) => {\r\n                const value = option.displayValue || option.value;\r\n                return (\r\n                    _.isEmpty(this.props.filterText) ||\r\n                    s.contains(value.toLowerCase(), this.props.filterText.toLowerCase())\r\n                );\r\n            })\r\n            .map((opt: IDropdownOption, index: number, opts: IDropdownOption[]) => {\r\n                const optionClasses = classNames('dropdown-option', {\r\n                    'with-append': !_.isUndefined(opt.append),\r\n                    'state-selected': opt.selected,\r\n                });\r\n                const wrapperClasses = classNames('option-wrapper', {\r\n                    active: JSON.stringify(opt) === JSON.stringify(this.props.activeOption),\r\n                    disabled: !!opt.disabled,\r\n                });\r\n\r\n                const value = opt.displayValue || opt.value;\r\n                const valueToShow =\r\n                    !!this.props.highlightAllFilterResult || opts.length <= this.props.highlightThreshold\r\n                        ? this.getTextFiltered(value)\r\n                        : value;\r\n\r\n                const formattedOption = React.createElement(\r\n                    ElementTag,\r\n                    {\r\n                        key: opt.value,\r\n                        className: wrapperClasses,\r\n                        title: value,\r\n                        'data-value': opt.value,\r\n                        onMouseDown: (e: React.MouseEvent<HTMLSpanElement>) => this.handleOnOptionClick(e),\r\n                    },\r\n                    <>\r\n                        <span className={optionClasses}>\r\n                            {this.getDropdownPrepend(opt)}\r\n                            {this.getSvg(opt)}\r\n                            {valueToShow}\r\n                        </span>\r\n                        {this.getDropdownOptionAppend(opt)}\r\n                    </>\r\n                );\r\n\r\n                return opt.disabled && opt.disabledTooltip ? (\r\n                    <Tooltip key={opt.value} noSpanWrapper {...opt.disabledTooltip}>\r\n                        {formattedOption}\r\n                    </Tooltip>\r\n                ) : (\r\n                    formattedOption\r\n                );\r\n            })\r\n            .value();\r\n\r\n        return options.length ? options : this.getNoOptions();\r\n    }\r\n\r\n    protected getSelectedOption(): IDropdownOption {\r\n        return _.findWhere(this.props.options, {selected: true});\r\n    }\r\n\r\n    protected getSelectedOptions(): IDropdownOption[] {\r\n        return _.where(this.props.options, {selected: true});\r\n    }\r\n\r\n    protected getDropdownOptionAppend(option?: IDropdownOption): JSX.Element {\r\n        return option && option.append ? <div className=\"dropdown-option-append\">{option.append}</div> : null;\r\n    }\r\n\r\n    protected getNoOptions(): JSX.Element[] {\r\n        return [\r\n            <li key=\"noResultDropdownSearch\">\r\n                <span className=\"no-search-results\">{this.props.noResultText}</span>\r\n            </li>,\r\n        ];\r\n    }\r\n\r\n    protected getSvg(option: IDropdownOption): JSX.Element {\r\n        return option && option.svg ? (\r\n            <span key={option.svg.svgName} className=\"value-icon\">\r\n                <Svg {...option.svg} />\r\n            </span>\r\n        ) : null;\r\n    }\r\n\r\n    protected getTextFiltered(text: string): Array<JSX.Element | string> | string {\r\n        const originalText = (text || '').toString();\r\n        if (!_.isEmpty(this.props.filterText)) {\r\n            let highlightIndexKey: number = 0;\r\n            const textFilterElements: Array<JSX.Element | string> = [''];\r\n            let index: number = text.toLowerCase().indexOf(this.props.filterText.toLowerCase());\r\n            while (index !== -1) {\r\n                if (index > 0) {\r\n                    textFilterElements.push(text.substring(0, index));\r\n                }\r\n                textFilterElements.push(\r\n                    this.getTextElement(\r\n                        text.substring(index, index + this.props.filterText.length),\r\n                        originalText,\r\n                        highlightIndexKey,\r\n                        'bold'\r\n                    )\r\n                );\r\n                text = text.substring(index + this.props.filterText.length);\r\n                index = text.toLowerCase().indexOf(this.props.filterText.toLowerCase());\r\n                highlightIndexKey += 1;\r\n            }\r\n            textFilterElements.push(text);\r\n\r\n            return textFilterElements;\r\n        }\r\n\r\n        return text;\r\n    }\r\n\r\n    protected getTextElement(\r\n        subText: string,\r\n        text: string,\r\n        highlightIndexKey: number,\r\n        className: string = ''\r\n    ): JSX.Element {\r\n        return (\r\n            <span key={`${text}-${highlightIndexKey}`} className={className}>\r\n                {subText}\r\n            </span>\r\n        );\r\n    }\r\n\r\n    protected getMainInputPrepend(option: IDropdownOption): JSX.Element {\r\n        const prepend = this.props.fixedPrepend || (option && option.prefix);\r\n\r\n        return prepend ? <Content key={prepend} classes={['dropdown-prepend']} content={prepend} /> : null;\r\n    }\r\n\r\n    protected getDropdownPrepend(option: IDropdownOption): JSX.Element {\r\n        return option && option.prefix ? (\r\n            <Content key={option.prefix} classes={['dropdown-prepend']} content={option.prefix} />\r\n        ) : null;\r\n    }\r\n\r\n    protected getMainInput(): JSX.Element {\r\n        const selectedOption: IDropdownOption = _.findWhere(this.props.options, {selected: true});\r\n        const filterPlaceHolder: string =\r\n            (selectedOption && (selectedOption.displayValue || selectedOption.value)) || this.props.filterPlaceholder;\r\n\r\n        if (this.props.isOpened && (this.isSearchOn() || this.props.supportSingleCustomOption)) {\r\n            return (\r\n                <FilterBox\r\n                    id={this.props.id}\r\n                    onFilter={(id, filterText) => this.handleOnFilterTextChange(filterText)}\r\n                    onBlur={() => this.handleOnBlur()}\r\n                    onKeyDown={(e: React.KeyboardEvent<HTMLInputElement>) => this.handleOnKeyDownFilterBox(e)}\r\n                    filterPlaceholder={filterPlaceHolder}\r\n                    isAutoFocus={true}\r\n                    filterText={this.props.filterText || ''}\r\n                />\r\n            );\r\n        }\r\n        const buttonClasses = classNames('btn dropdown-toggle dropdown-button-search-container mod-search', {\r\n            'dropdown-toggle-placeholder': selectedOption && selectedOption.default === true,\r\n        });\r\n\r\n        return (\r\n            <button\r\n                className={buttonClasses}\r\n                type=\"button\"\r\n                data-toggle=\"dropdown\"\r\n                onClick={() => this.handleOnClick()}\r\n                onBlur={() => this.handleOnClose()}\r\n                onKeyDown={(e: React.KeyboardEvent<HTMLButtonElement>) => this.handleOnKeyDownDropdownButton(e as any)}\r\n                style={{\r\n                    maxWidth: this.props.maxWidth,\r\n                }}\r\n                ref={(input: HTMLButtonElement) => (this.dropdownButton = input)}\r\n                disabled={!!this.props.isDisabled}\r\n            >\r\n                {this.getMainInputPrepend(selectedOption)}\r\n                {this.getSvg(selectedOption)}\r\n                {this.getSelectedOptionElement()}\r\n                {this.getDropdownOptionAppend(selectedOption)}\r\n                <span className=\"dropdown-toggle-arrow\"></span>\r\n            </button>\r\n        );\r\n    }\r\n\r\n    protected isScrolledIntoView(el: Element) {\r\n        const boxTop = this.ulElement.getBoundingClientRect().top;\r\n        const boxBottom = this.ulElement.getBoundingClientRect().bottom;\r\n        const elTop = el.getBoundingClientRect().top;\r\n        const elBottom = el.getBoundingClientRect().bottom;\r\n\r\n        return elTop >= boxTop && elBottom <= boxBottom;\r\n    }\r\n\r\n    protected getDisplayedOptions(): IDropdownOption[] {\r\n        return _.reject(\r\n            this.props.options,\r\n            (option) => (!this.props.supportSingleCustomOption && option.custom) || option.hidden\r\n        );\r\n    }\r\n\r\n    protected handleOnOptionClickOnKeyDown(e: React.KeyboardEvent<HTMLInputElement>) {\r\n        if (this.isKeyToPreventOnKeyDown(e)) {\r\n            e.preventDefault();\r\n\r\n            if (e.keyCode !== keyCode.upArrow && this.props.onOptionClickCallBack && this.props.activeOption) {\r\n                this.props.onOptionClickCallBack(this.props.activeOption);\r\n            }\r\n        }\r\n    }\r\n\r\n    protected handleOnKeyDownFilterBox(e: React.KeyboardEvent<HTMLInputElement>) {\r\n        if (this.props.onKeyDownFilterBox) {\r\n            this.props.onKeyDownFilterBox(e.keyCode, this.props.activeOption);\r\n        }\r\n\r\n        this.handleOnOptionClickOnKeyDown(e);\r\n    }\r\n\r\n    protected getClasses() {\r\n        return classNames(\r\n            'dropdown',\r\n            'mod-search',\r\n            {\r\n                open: this.props.isOpened,\r\n                'mod-menu': this.props.modMenu,\r\n            },\r\n            ...(this.props.containerClasses || [])\r\n        );\r\n    }\r\n\r\n    protected getStyles() {\r\n        return {\r\n            width: this.props.width,\r\n        };\r\n    }\r\n\r\n    private getDropdownMenu(): JSX.Element {\r\n        if (!this.props.isOpened) {\r\n            return null;\r\n        }\r\n        const dropdownOptions: JSX.Element[] = this.getDropdownOptions();\r\n\r\n        if (this.props.autoInfiniteScroll) {\r\n            return (\r\n                <DropdownSearchAutoInfiniteScroll\r\n                    {...this.props.autoInfiniteScroll}\r\n                    options={dropdownOptions}\r\n                    onMouseEnter={() => this.handleOnMouseEnter()}\r\n                    ulElementRefFunction={(menu: HTMLElement) => (this.ulElement = menu)}\r\n                />\r\n            );\r\n        }\r\n\r\n        if (this.props.infiniteScroll) {\r\n            return (\r\n                <DropdownSearchInfiniteScrollOptions\r\n                    infiniteScroll={{\r\n                        ...this.props.infiniteScroll,\r\n                        dataLength: dropdownOptions.length,\r\n                        hasMore: this.props.hasMoreItems && this.props.hasMoreItems(),\r\n                    }}\r\n                    onMouseEnter={() => this.handleOnMouseEnter()}\r\n                    ulElementRefFunction={(menu: HTMLElement) => (this.ulElement = menu)}\r\n                    options={dropdownOptions}\r\n                />\r\n            );\r\n        }\r\n\r\n        return (\r\n            <ul\r\n                className=\"dropdown-menu\"\r\n                ref={(menu: HTMLUListElement) => {\r\n                    this.ulElement = menu;\r\n                }}\r\n                onMouseEnter={() => this.handleOnMouseEnter()}\r\n            >\r\n                {dropdownOptions}\r\n            </ul>\r\n        );\r\n    }\r\n\r\n    private getSelectedOptionElement(): JSX.Element[] {\r\n        if (this.props.options.length) {\r\n            return _.map(this.getSelectedOptions(), (selectedOption: IDropdownOption) => {\r\n                const displayValue = selectedOption.displayValue || selectedOption.value;\r\n                return (\r\n                    <span\r\n                        key={selectedOption.value}\r\n                        className={classNames('dropdown-selected-value', {'with-append': !!selectedOption.append})}\r\n                        data-value={selectedOption.value}\r\n                        title={displayValue}\r\n                    >\r\n                        {displayValue}\r\n                    </span>\r\n                );\r\n            });\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    private isSearchOn(): boolean {\r\n        return !!this.props.infiniteScroll || this.props.options.length > this.props.searchThresold;\r\n    }\r\n\r\n    private updateScrollPositionBasedOnActiveElement() {\r\n        const activeLi: HTMLCollectionOf<Element> = this.ulElement\r\n            ? this.ulElement.getElementsByClassName('active')\r\n            : undefined;\r\n        if (activeLi && activeLi.length) {\r\n            const el: Element = activeLi[0];\r\n            if (!this.isScrolledIntoView(el)) {\r\n                if (el.getBoundingClientRect().bottom > this.ulElement.getBoundingClientRect().bottom) {\r\n                    this.ulElement.scrollTop +=\r\n                        el.getBoundingClientRect().bottom - this.ulElement.getBoundingClientRect().bottom;\r\n                }\r\n                if (el.getBoundingClientRect().top < this.ulElement.getBoundingClientRect().top) {\r\n                    this.ulElement.scrollTop -=\r\n                        this.ulElement.getBoundingClientRect().top - el.getBoundingClientRect().top;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private handleOnFilterTextChange(filterText: string) {\r\n        if (this.props.customFiltering) {\r\n            this.props.customFiltering(filterText);\r\n        } else {\r\n            this.props.onFilterTextChange?.(filterText);\r\n        }\r\n    }\r\n\r\n    private handleOnClick() {\r\n        if (this.props.onClickCallBack) {\r\n            this.props.onClickCallBack();\r\n        }\r\n\r\n        if (this.props.onToggleDropdown) {\r\n            this.props.onToggleDropdown();\r\n        }\r\n    }\r\n\r\n    private handleOnOptionClick = (e: React.MouseEvent<HTMLSpanElement>) => {\r\n        if (e.target) {\r\n            const option = _.findWhere(this.props.options, {value: e.currentTarget.dataset.value});\r\n            if (option && !option.disabled) {\r\n                if (this.props.onOptionClick) {\r\n                    this.props.onOptionClick(option);\r\n                }\r\n\r\n                if (this.props.onOptionClickCallBack) {\r\n                    this.props.onOptionClickCallBack(option);\r\n                }\r\n            } else {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n            }\r\n        }\r\n    };\r\n\r\n    private handleOnBlur() {\r\n        if (this.props.onBlur && !this.props.setFocusOnDropdownButton) {\r\n            this.props.onBlur(this.props.options);\r\n        }\r\n    }\r\n\r\n    private handleOnClose() {\r\n        if (this.props.onClose) {\r\n            this.props.onClose();\r\n        }\r\n    }\r\n\r\n    private isKeyToPreventOnKeyDown(e: React.KeyboardEvent<HTMLInputElement>) {\r\n        /**\r\n         * Prevent Enter key because it triggers an undesirable click event\r\n         * Prevent Tab key to prevent focusing on the next element when selecting an option\r\n         * Prevent Up Arrow key when the first option in the dropdown is the active option to avoid two focus events to be triggered\r\n         */\r\n        return (\r\n            e.keyCode === keyCode.enter ||\r\n            e.keyCode === keyCode.tab ||\r\n            (e.keyCode === keyCode.upArrow && this.props.activeOption === this.props.options[0])\r\n        );\r\n    }\r\n\r\n    private handleOnKeyDownDropdownButton(e: React.KeyboardEvent<HTMLInputElement>) {\r\n        if (this.props.onKeyDownDropdownButton) {\r\n            this.props.onKeyDownDropdownButton(e.keyCode, this.props.activeOption);\r\n        }\r\n\r\n        if (!this.isSearchOn()) {\r\n            this.handleOnOptionClickOnKeyDown(e);\r\n        }\r\n\r\n        if (!this.isSearchOn() && _.contains([keyCode.downArrow, keyCode.upArrow], e.keyCode)) {\r\n            e.preventDefault();\r\n        }\r\n    }\r\n\r\n    private handleOnMouseEnter() {\r\n        if (this.props.onMouseEnterDropdown) {\r\n            this.props.onMouseEnterDropdown(this.props.activeOption);\r\n        }\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as InfiniteScroll from 'react-infinite-scroll-component';\r\nimport * as _ from 'underscore';\r\n\r\nexport interface DropdownSearchInfiniteScrollOptionsProps {\r\n    onMouseEnter: () => void;\r\n    options: JSX.Element[];\r\n    ulElementRefFunction: (menu: HTMLElement) => void;\r\n    infiniteScroll: InfiniteScroll.InfiniteScrollProps;\r\n}\r\n\r\nexport class DropdownSearchInfiniteScrollOptions extends React.Component<DropdownSearchInfiniteScrollOptionsProps, {}> {\r\n    private id: string;\r\n\r\n    componentWillMount() {\r\n        this.id = _.uniqueId('infinite-dropdown');\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div\r\n                id={this.id}\r\n                className=\"dropdown-menu\"\r\n                ref={(menu: HTMLElement) => this.props.ulElementRefFunction(menu)}\r\n                onMouseEnter={() => this.props.onMouseEnter()}\r\n            >\r\n                <InfiniteScroll\r\n                    {...this.props.infiniteScroll}\r\n                    scrollableTarget={this.id}\r\n                    style={{...this.props.infiniteScroll.style, overflow: 'initial'}}\r\n                >\r\n                    {this.props.options}\r\n                </InfiniteScroll>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as _ from 'underscore';\r\n\r\nimport {DropdownSearchInfiniteScrollOptions} from './DropdownSearchInfiniteScrollOptions';\r\n\r\nexport interface IDropdownSearchAutoInfiniteScrollOptions {\r\n    optionsPerPage: number;\r\n    endMessage?: React.ReactNode;\r\n    loader?: React.ReactNode;\r\n}\r\n\r\nexport interface IDropdownSearchAutoInfiniteScrollProps extends IDropdownSearchAutoInfiniteScrollOptions {\r\n    options: JSX.Element[];\r\n    onMouseEnter: () => void;\r\n    ulElementRefFunction: (menu: HTMLElement) => void;\r\n}\r\n\r\ninterface IDropdownSearchAutoInfiniteScrollState {\r\n    activeOptions: JSX.Element[];\r\n}\r\n\r\nexport class DropdownSearchAutoInfiniteScroll extends React.Component<\r\n    IDropdownSearchAutoInfiniteScrollProps,\r\n    IDropdownSearchAutoInfiniteScrollState\r\n> {\r\n    constructor(props: IDropdownSearchAutoInfiniteScrollProps, state: IDropdownSearchAutoInfiniteScrollState) {\r\n        super(props, state);\r\n        this.state = {\r\n            activeOptions: props.options.slice(0, props.optionsPerPage),\r\n        };\r\n    }\r\n\r\n    componentWillUpdate(nextProps: IDropdownSearchAutoInfiniteScrollProps) {\r\n        if (!_.isEqual(this.props.options, nextProps.options)) {\r\n            this.setState({activeOptions: nextProps.options.slice(0, this.props.optionsPerPage)});\r\n        }\r\n    }\r\n\r\n    private get hasMoreOptions() {\r\n        return this.state.activeOptions.length < this.props.options.length;\r\n    }\r\n\r\n    private get showEndMessage() {\r\n        if (this.props.endMessage && this.props.options.length > this.props.optionsPerPage) {\r\n            return this.props.endMessage;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    private next() {\r\n        const index = this.state.activeOptions.length;\r\n        const additionalOptions = this.props.options.slice(index, index + this.props.optionsPerPage);\r\n        this.setState({activeOptions: this.state.activeOptions.concat(additionalOptions)});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <DropdownSearchInfiniteScrollOptions\r\n                infiniteScroll={{\r\n                    next: () => this.next(),\r\n                    dataLength: this.state.activeOptions.length,\r\n                    hasMore: this.hasMoreOptions,\r\n                    endMessage: this.showEndMessage,\r\n                    loader: this.props.loader || null,\r\n                }}\r\n                onMouseEnter={this.props.onMouseEnter}\r\n                ulElementRefFunction={this.props.ulElementRefFunction}\r\n                options={this.state.activeOptions}\r\n            />\r\n        );\r\n    }\r\n}\r\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"InfiniteScroll\"] = factory(require(\"react\"));\n\telse\n\t\troot[\"InfiniteScroll\"] = factory(root[\"React\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_8__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n\n\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\n\tvar _get = function get(_x2, _x3, _x4) { var _again = true; _function: while (_again) { var object = _x2, property = _x3, receiver = _x4; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x2 = parent; _x3 = property; _x4 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n\tvar _react = __webpack_require__(8);\n\n\tvar _react2 = _interopRequireDefault(_react);\n\n\tvar _propTypes = __webpack_require__(6);\n\n\tvar _propTypes2 = _interopRequireDefault(_propTypes);\n\n\tvar _utilsThrottle = __webpack_require__(2);\n\n\tvar _utilsThrottle2 = _interopRequireDefault(_utilsThrottle);\n\n\tvar _utilsThreshold = __webpack_require__(1);\n\n\tvar InfiniteScroll = (function (_Component) {\n\t  _inherits(InfiniteScroll, _Component);\n\n\t  function InfiniteScroll(props) {\n\t    _classCallCheck(this, InfiniteScroll);\n\n\t    _get(Object.getPrototypeOf(InfiniteScroll.prototype), \"constructor\", this).call(this);\n\t    this.state = {\n\t      showLoader: false,\n\t      lastScrollTop: 0,\n\t      actionTriggered: false,\n\t      pullToRefreshThresholdBreached: false\n\t    };\n\t    // variables to keep track of pull down behaviour\n\t    this.startY = 0;\n\t    this.currentY = 0;\n\t    this.dragging = false;\n\t    // will be populated in componentDidMount\n\t    // based on the height of the pull down element\n\t    this.maxPullDownDistance = 0;\n\n\t    this.onScrollListener = this.onScrollListener.bind(this);\n\t    this.throttledOnScrollListener = (0, _utilsThrottle2[\"default\"])(this.onScrollListener, 150).bind(this);\n\t    this.onStart = this.onStart.bind(this);\n\t    this.onMove = this.onMove.bind(this);\n\t    this.onEnd = this.onEnd.bind(this);\n\t    this.getScrollableTarget = this.getScrollableTarget.bind(this);\n\t  }\n\n\t  _createClass(InfiniteScroll, [{\n\t    key: \"componentDidMount\",\n\t    value: function componentDidMount() {\n\t      this._scrollableNode = this.getScrollableTarget();\n\t      this.el = this.props.height ? this._infScroll : this._scrollableNode || window;\n\t      this.el.addEventListener(\"scroll\", this.throttledOnScrollListener);\n\n\t      if (typeof this.props.initialScrollY === \"number\" && this.el.scrollHeight > this.props.initialScrollY) {\n\t        this.el.scrollTo(0, this.props.initialScrollY);\n\t      }\n\n\t      if (this.props.pullDownToRefresh) {\n\t        this.el.addEventListener(\"touchstart\", this.onStart);\n\t        this.el.addEventListener(\"touchmove\", this.onMove);\n\t        this.el.addEventListener(\"touchend\", this.onEnd);\n\n\t        this.el.addEventListener(\"mousedown\", this.onStart);\n\t        this.el.addEventListener(\"mousemove\", this.onMove);\n\t        this.el.addEventListener(\"mouseup\", this.onEnd);\n\n\t        // get BCR of pullDown element to position it above\n\t        this.maxPullDownDistance = this._pullDown.firstChild.getBoundingClientRect().height;\n\t        this.forceUpdate();\n\n\t        if (typeof this.props.refreshFunction !== \"function\") {\n\t          throw new Error(\"Mandatory prop \\\"refreshFunction\\\" missing.\\n          Pull Down To Refresh functionality will not work\\n          as expected. Check README.md for usage'\");\n\t        }\n\t      }\n\t    }\n\t  }, {\n\t    key: \"componentWillUnmount\",\n\t    value: function componentWillUnmount() {\n\t      this.el.removeEventListener(\"scroll\", this.throttledOnScrollListener);\n\n\t      if (this.props.pullDownToRefresh) {\n\t        this.el.removeEventListener(\"touchstart\", this.onStart);\n\t        this.el.removeEventListener(\"touchmove\", this.onMove);\n\t        this.el.removeEventListener(\"touchend\", this.onEnd);\n\n\t        this.el.removeEventListener(\"mousedown\", this.onStart);\n\t        this.el.removeEventListener(\"mousemove\", this.onMove);\n\t        this.el.removeEventListener(\"mouseup\", this.onEnd);\n\t      }\n\t    }\n\t  }, {\n\t    key: \"componentWillReceiveProps\",\n\t    value: function componentWillReceiveProps(props) {\n\t      // do nothing when dataLength is unchanged\n\t      if (this.props.dataLength === props.dataLength) return;\n\n\t      // update state when new data was sent in\n\t      this.setState({\n\t        showLoader: false,\n\t        actionTriggered: false,\n\t        pullToRefreshThresholdBreached: false\n\t      });\n\t    }\n\t  }, {\n\t    key: \"getScrollableTarget\",\n\t    value: function getScrollableTarget() {\n\t      if (this.props.scrollableTarget instanceof HTMLElement) return this.props.scrollableTarget;\n\t      if (typeof this.props.scrollableTarget === 'string') {\n\t        return document.getElementById(this.props.scrollableTarget);\n\t      }\n\t      if (this.props.scrollableTarget === null) {\n\t        console.warn(\"You are trying to pass scrollableTarget but it is null. This might\\n        happen because the element may not have been added to DOM yet.\\n        See https://github.com/ankeetmaini/react-infinite-scroll-component/issues/59 for more info.\\n      \");\n\t      }\n\t      return null;\n\t    }\n\t  }, {\n\t    key: \"onStart\",\n\t    value: function onStart(evt) {\n\t      if (this.state.lastScrollTop) return;\n\n\t      this.dragging = true;\n\t      this.startY = evt.pageY || evt.touches[0].pageY;\n\t      this.currentY = this.startY;\n\n\t      this._infScroll.style.willChange = \"transform\";\n\t      this._infScroll.style.transition = \"transform 0.2s cubic-bezier(0,0,0.31,1)\";\n\t    }\n\t  }, {\n\t    key: \"onMove\",\n\t    value: function onMove(evt) {\n\t      if (!this.dragging) return;\n\t      this.currentY = evt.pageY || evt.touches[0].pageY;\n\n\t      // user is scrolling down to up\n\t      if (this.currentY < this.startY) return;\n\n\t      if (this.currentY - this.startY >= this.props.pullDownToRefreshThreshold) {\n\t        this.setState({\n\t          pullToRefreshThresholdBreached: true\n\t        });\n\t      }\n\n\t      // so you can drag upto 1.5 times of the maxPullDownDistance\n\t      if (this.currentY - this.startY > this.maxPullDownDistance * 1.5) return;\n\n\t      this._infScroll.style.overflow = \"visible\";\n\t      this._infScroll.style.transform = \"translate3d(0px, \" + (this.currentY - this.startY) + \"px, 0px)\";\n\t    }\n\t  }, {\n\t    key: \"onEnd\",\n\t    value: function onEnd(evt) {\n\t      var _this = this;\n\n\t      this.startY = 0;\n\t      this.currentY = 0;\n\n\t      this.dragging = false;\n\n\t      if (this.state.pullToRefreshThresholdBreached) {\n\t        this.props.refreshFunction && this.props.refreshFunction();\n\t      }\n\n\t      requestAnimationFrame(function () {\n\t        _this._infScroll.style.overflow = \"auto\";\n\t        _this._infScroll.style.transform = \"none\";\n\t        _this._infScroll.style.willChange = \"none\";\n\t      });\n\t    }\n\t  }, {\n\t    key: \"isElementAtBottom\",\n\t    value: function isElementAtBottom(target) {\n\t      var scrollThreshold = arguments.length <= 1 || arguments[1] === undefined ? 0.8 : arguments[1];\n\n\t      var clientHeight = target === document.body || target === document.documentElement ? window.screen.availHeight : target.clientHeight;\n\n\t      var threshold = (0, _utilsThreshold.parseThreshold)(scrollThreshold);\n\n\t      if (threshold.unit === _utilsThreshold.ThresholdUnits.Pixel) {\n\t        return target.scrollTop + clientHeight >= target.scrollHeight - threshold.value;\n\t      }\n\n\t      return target.scrollTop + clientHeight >= threshold.value / 100 * target.scrollHeight;\n\t    }\n\t  }, {\n\t    key: \"onScrollListener\",\n\t    value: function onScrollListener(event) {\n\t      var _this2 = this;\n\n\t      if (typeof this.props.onScroll === \"function\") {\n\t        // Execute this callback in next tick so that it does not affect the\n\t        // functionality of the library.\n\t        setTimeout(function () {\n\t          return _this2.props.onScroll(event);\n\t        }, 0);\n\t      }\n\n\t      var target = this.props.height || this._scrollableNode ? event.target : document.documentElement.scrollTop ? document.documentElement : document.body;\n\n\t      // return immediately if the action has already been triggered,\n\t      // prevents multiple triggers.\n\t      if (this.state.actionTriggered) return;\n\n\t      var atBottom = this.isElementAtBottom(target, this.props.scrollThreshold);\n\n\t      // call the `next` function in the props to trigger the next data fetch\n\t      if (atBottom && this.props.hasMore) {\n\t        this.setState({ actionTriggered: true, showLoader: true });\n\t        this.props.next();\n\t      }\n\t      this.setState({ lastScrollTop: target.scrollTop });\n\t    }\n\t  }, {\n\t    key: \"render\",\n\t    value: function render() {\n\t      var _this3 = this;\n\n\t      var style = _extends({\n\t        height: this.props.height || \"auto\",\n\t        overflow: \"auto\",\n\t        WebkitOverflowScrolling: \"touch\"\n\t      }, this.props.style);\n\t      var hasChildren = this.props.hasChildren || !!(this.props.children && this.props.children.length);\n\n\t      // because heighted infiniteScroll visualy breaks\n\t      // on drag down as overflow becomes visible\n\t      var outerDivStyle = this.props.pullDownToRefresh && this.props.height ? { overflow: \"auto\" } : {};\n\t      return _react2[\"default\"].createElement(\n\t        \"div\",\n\t        { style: outerDivStyle },\n\t        _react2[\"default\"].createElement(\n\t          \"div\",\n\t          {\n\t            className: \"infinite-scroll-component\",\n\t            ref: function (infScroll) {\n\t              return _this3._infScroll = infScroll;\n\t            },\n\t            style: style\n\t          },\n\t          this.props.pullDownToRefresh && _react2[\"default\"].createElement(\n\t            \"div\",\n\t            {\n\t              style: { position: \"relative\" },\n\t              ref: function (pullDown) {\n\t                return _this3._pullDown = pullDown;\n\t              }\n\t            },\n\t            _react2[\"default\"].createElement(\n\t              \"div\",\n\t              {\n\t                style: {\n\t                  position: \"absolute\",\n\t                  left: 0,\n\t                  right: 0,\n\t                  top: -1 * this.maxPullDownDistance\n\t                }\n\t              },\n\t              !this.state.pullToRefreshThresholdBreached && this.props.pullDownToRefreshContent,\n\t              this.state.pullToRefreshThresholdBreached && this.props.releaseToRefreshContent\n\t            )\n\t          ),\n\t          this.props.children,\n\t          !this.state.showLoader && !hasChildren && this.props.hasMore && this.props.loader,\n\t          this.state.showLoader && this.props.hasMore && this.props.loader,\n\t          !this.props.hasMore && this.props.endMessage\n\t        )\n\t      );\n\t    }\n\t  }]);\n\n\t  return InfiniteScroll;\n\t})(_react.Component);\n\n\texports[\"default\"] = InfiniteScroll;\n\n\tInfiniteScroll.defaultProps = {\n\t  pullDownToRefreshContent: _react2[\"default\"].createElement(\n\t    \"h3\",\n\t    null,\n\t    \"Pull down to refresh\"\n\t  ),\n\t  releaseToRefreshContent: _react2[\"default\"].createElement(\n\t    \"h3\",\n\t    null,\n\t    \"Release to refresh\"\n\t  ),\n\t  pullDownToRefreshThreshold: 100,\n\t  disableBrowserPullToRefresh: true\n\t};\n\n\tInfiniteScroll.propTypes = {\n\t  next: _propTypes2[\"default\"].func,\n\t  hasMore: _propTypes2[\"default\"].bool,\n\t  children: _propTypes2[\"default\"].node,\n\t  loader: _propTypes2[\"default\"].node.isRequired,\n\t  scrollThreshold: _propTypes2[\"default\"].oneOfType([_propTypes2[\"default\"].number, _propTypes2[\"default\"].string]),\n\t  endMessage: _propTypes2[\"default\"].node,\n\t  style: _propTypes2[\"default\"].object,\n\t  height: _propTypes2[\"default\"].number,\n\t  scrollableTarget: _propTypes2[\"default\"].node,\n\t  hasChildren: _propTypes2[\"default\"].bool,\n\t  pullDownToRefresh: _propTypes2[\"default\"].bool,\n\t  pullDownToRefreshContent: _propTypes2[\"default\"].node,\n\t  releaseToRefreshContent: _propTypes2[\"default\"].node,\n\t  pullDownToRefreshThreshold: _propTypes2[\"default\"].number,\n\t  refreshFunction: _propTypes2[\"default\"].func,\n\t  onScroll: _propTypes2[\"default\"].func,\n\t  dataLength: _propTypes2[\"default\"].number.isRequired\n\t};\n\tmodule.exports = exports[\"default\"];\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\texports.parseThreshold = parseThreshold;\n\tvar ThresholdUnits = {\n\t  Pixel: 'Pixel',\n\t  Percent: 'Percent'\n\t};\n\n\texports.ThresholdUnits = ThresholdUnits;\n\tvar defaultThreshold = {\n\t  unit: ThresholdUnits.Percent,\n\t  value: 0.8\n\t};\n\n\tfunction parseThreshold(scrollThreshold) {\n\t  if (typeof scrollThreshold === \"number\") {\n\t    return {\n\t      unit: ThresholdUnits.Percent,\n\t      value: scrollThreshold * 100\n\t    };\n\t  }\n\n\t  if (typeof scrollThreshold === \"string\") {\n\t    if (scrollThreshold.match(/^(\\d*(.\\d+)?)px$/)) {\n\t      return {\n\t        unit: ThresholdUnits.Pixel,\n\t        value: parseFloat(scrollThreshold)\n\t      };\n\t    }\n\n\t    if (scrollThreshold.match(/^(\\d*(.\\d+)?)%$/)) {\n\t      return {\n\t        unit: ThresholdUnits.Percent,\n\t        value: parseFloat(scrollThreshold)\n\t      };\n\t    }\n\n\t    console.warn('scrollThreshold format is invalid. Valid formats: \"120px\", \"50%\"...');\n\n\t    return defaultThreshold;\n\t  }\n\n\t  console.warn('scrollThreshold should be string or number');\n\n\t  return defaultThreshold;\n\t}\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports) {\n\n\t// https://remysharp.com/2010/07/21/throttling-function-calls\n\t\"use strict\";\n\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports[\"default\"] = throttle;\n\n\tfunction throttle(fn, threshhold, scope) {\n\t  threshhold || (threshhold = 250);\n\t  var last, deferTimer;\n\t  return function () {\n\t    var context = scope || this;\n\n\t    var now = +new Date(),\n\t        args = arguments;\n\t    if (last && now < last + threshhold) {\n\t      // hold on to it\n\t      clearTimeout(deferTimer);\n\t      deferTimer = setTimeout(function () {\n\t        last = now;\n\t        fn.apply(context, args);\n\t      }, threshhold);\n\t    } else {\n\t      last = now;\n\t      fn.apply(context, args);\n\t    }\n\t  };\n\t}\n\n\tmodule.exports = exports[\"default\"];\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t *\n\t * This source code is licensed under the MIT license found in the\n\t * LICENSE file in the root directory of this source tree.\n\t *\n\t * \n\t */\n\n\tfunction makeEmptyFunction(arg) {\n\t  return function () {\n\t    return arg;\n\t  };\n\t}\n\n\t/**\n\t * This function accepts and discards inputs; it has no side effects. This is\n\t * primarily useful idiomatically for overridable function endpoints which\n\t * always need to be callable, since JS lacks a null-call idiom ala Cocoa.\n\t */\n\tvar emptyFunction = function emptyFunction() {};\n\n\temptyFunction.thatReturns = makeEmptyFunction;\n\temptyFunction.thatReturnsFalse = makeEmptyFunction(false);\n\temptyFunction.thatReturnsTrue = makeEmptyFunction(true);\n\temptyFunction.thatReturnsNull = makeEmptyFunction(null);\n\temptyFunction.thatReturnsThis = function () {\n\t  return this;\n\t};\n\temptyFunction.thatReturnsArgument = function (arg) {\n\t  return arg;\n\t};\n\n\tmodule.exports = emptyFunction;\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t *\n\t * This source code is licensed under the MIT license found in the\n\t * LICENSE file in the root directory of this source tree.\n\t *\n\t */\n\n\t'use strict';\n\n\t/**\n\t * Use invariant() to assert state which your program assumes to be true.\n\t *\n\t * Provide sprintf-style format (only %s is supported) and arguments\n\t * to provide information about what broke and what you were\n\t * expecting.\n\t *\n\t * The invariant message will be stripped in production, but the invariant\n\t * will remain to ensure logic does not differ in production.\n\t */\n\n\tvar validateFormat = function validateFormat(format) {};\n\n\tif (false) {\n\t  validateFormat = function validateFormat(format) {\n\t    if (format === undefined) {\n\t      throw new Error('invariant requires an error message argument');\n\t    }\n\t  };\n\t}\n\n\tfunction invariant(condition, format, a, b, c, d, e, f) {\n\t  validateFormat(format);\n\n\t  if (!condition) {\n\t    var error;\n\t    if (format === undefined) {\n\t      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\n\t    } else {\n\t      var args = [a, b, c, d, e, f];\n\t      var argIndex = 0;\n\t      error = new Error(format.replace(/%s/g, function () {\n\t        return args[argIndex++];\n\t      }));\n\t      error.name = 'Invariant Violation';\n\t    }\n\n\t    error.framesToPop = 1; // we don't care about invariant's own frame\n\t    throw error;\n\t  }\n\t}\n\n\tmodule.exports = invariant;\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t */\n\n\t'use strict';\n\n\tvar emptyFunction = __webpack_require__(3);\n\tvar invariant = __webpack_require__(4);\n\tvar ReactPropTypesSecret = __webpack_require__(7);\n\n\tmodule.exports = function() {\n\t  function shim(props, propName, componentName, location, propFullName, secret) {\n\t    if (secret === ReactPropTypesSecret) {\n\t      // It is still safe when called from React.\n\t      return;\n\t    }\n\t    invariant(\n\t      false,\n\t      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n\t      'Use PropTypes.checkPropTypes() to call them. ' +\n\t      'Read more at http://fb.me/use-check-prop-types'\n\t    );\n\t  };\n\t  shim.isRequired = shim;\n\t  function getShim() {\n\t    return shim;\n\t  };\n\t  // Important!\n\t  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n\t  var ReactPropTypes = {\n\t    array: shim,\n\t    bool: shim,\n\t    func: shim,\n\t    number: shim,\n\t    object: shim,\n\t    string: shim,\n\t    symbol: shim,\n\n\t    any: shim,\n\t    arrayOf: getShim,\n\t    element: shim,\n\t    instanceOf: getShim,\n\t    node: shim,\n\t    objectOf: getShim,\n\t    oneOf: getShim,\n\t    oneOfType: getShim,\n\t    shape: getShim\n\t  };\n\n\t  ReactPropTypes.checkPropTypes = emptyFunction;\n\t  ReactPropTypes.PropTypes = ReactPropTypes;\n\n\t  return ReactPropTypes;\n\t};\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t */\n\n\tif (false) {\n\t  var REACT_ELEMENT_TYPE = (typeof Symbol === 'function' &&\n\t    Symbol.for &&\n\t    Symbol.for('react.element')) ||\n\t    0xeac7;\n\n\t  var isValidElement = function(object) {\n\t    return typeof object === 'object' &&\n\t      object !== null &&\n\t      object.$$typeof === REACT_ELEMENT_TYPE;\n\t  };\n\n\t  // By explicitly using `prop-types` you are opting into new development behavior.\n\t  // http://fb.me/prop-types-in-prod\n\t  var throwOnDirectAccess = true;\n\t  module.exports = require('./factoryWithTypeCheckers')(isValidElement, throwOnDirectAccess);\n\t} else {\n\t  // By explicitly using `prop-types` you are opting into new production behavior.\n\t  // http://fb.me/prop-types-in-prod\n\t  module.exports = __webpack_require__(5)();\n\t}\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t */\n\n\t'use strict';\n\n\tvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\n\tmodule.exports = ReactPropTypesSecret;\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_8__;\n\n/***/ })\n/******/ ])\n});\n;","import {connect} from 'react-redux';\r\nimport * as _ from 'underscore';\r\nimport {IReactVaporState} from '../../ReactVapor';\r\nimport {IDispatch, ReduxUtils} from '../../utils/ReduxUtils';\r\nimport {\r\n    DropdownSearch,\r\n    IDropdownOption,\r\n    IDropdownSearchOwnProps,\r\n    IDropdownSearchProps,\r\n    IDropdownSearchStateProps,\r\n} from './DropdownSearch';\r\nimport {\r\n    addDropdownSearch,\r\n    applyFilterDropdownSearch,\r\n    closeDropdownSearch,\r\n    removeDropdownSearch,\r\n    selectOptionDropdownSearch,\r\n    selectOrSetNextActiveOption,\r\n    toggleDropdownSearch,\r\n    updateActiveOptionDropdownSearch,\r\n    updateOptionsDropdownSearch,\r\n} from './DropdownSearchActions';\r\nimport {IDropdownSearchState} from './DropdownSearchReducers';\r\n\r\nconst mapStateToProps = (state: IReactVaporState, ownProps: IDropdownSearchProps): IDropdownSearchStateProps => {\r\n    const dropdownSearch: IDropdownSearchState = _.findWhere(state.dropdownSearch, {id: ownProps.id});\r\n\r\n    if (dropdownSearch) {\r\n        return {\r\n            isOpened: dropdownSearch.isOpened || false,\r\n            options: dropdownSearch.options || [],\r\n            filterText: dropdownSearch.filterText || '',\r\n            activeOption: dropdownSearch.activeOption,\r\n            setFocusOnDropdownButton: dropdownSearch.setFocusOnDropdownButton,\r\n        };\r\n    }\r\n\r\n    return {\r\n        isOpened: false,\r\n        options: ownProps.defaultOptions || [],\r\n        filterText: '',\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: IDispatch, ownProps: IDropdownSearchOwnProps) => ({\r\n    onMount: () => {\r\n        dispatch(\r\n            addDropdownSearch(\r\n                ownProps.id,\r\n                ownProps.defaultOptions,\r\n                ownProps.defaultSelectedOption,\r\n                ownProps.supportSingleCustomOption\r\n            )\r\n        );\r\n\r\n        // TODO: remove this once the component is refactored and the DropdownSearchReducer is not overwriting the defaultSelectedOption passed above anymore.\r\n        if (ownProps.defaultSelectedOption) {\r\n            dispatch(updateOptionsDropdownSearch(ownProps.id, ownProps.defaultOptions, ownProps.defaultSelectedOption));\r\n        }\r\n    },\r\n    onDestroy: () => dispatch(removeDropdownSearch(ownProps.id)),\r\n    onToggleDropdown: () => dispatch(toggleDropdownSearch(ownProps.id)),\r\n    onBlur: () => dispatch(toggleDropdownSearch(ownProps.id)),\r\n    onOptionClick: (option: IDropdownOption) => dispatch(selectOptionDropdownSearch(ownProps.id, option)),\r\n    onFilterTextChange: (filterText: string) => dispatch(applyFilterDropdownSearch(ownProps.id, filterText)),\r\n    onKeyDownFilterBox: (keyCode: number, activeOption?: IDropdownOption) =>\r\n        dispatch(selectOrSetNextActiveOption(ownProps.id, keyCode, activeOption)),\r\n    onKeyDownDropdownButton: (keyCode: number, activeOption?: IDropdownOption) =>\r\n        dispatch(selectOrSetNextActiveOption(ownProps.id, keyCode, activeOption)),\r\n    onMouseEnterDropdown: (activeOption?: IDropdownOption) =>\r\n        dispatch(updateActiveOptionDropdownSearch(ownProps.id, -1, activeOption)),\r\n    onClose: () => dispatch(closeDropdownSearch(ownProps.id)),\r\n    updateOptions: (options: IDropdownOption[]) => dispatch(updateOptionsDropdownSearch(ownProps.id, options)),\r\n});\r\n\r\nexport const DropdownSearchConnected: React.ComponentClass<IDropdownSearchProps> = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps,\r\n    ReduxUtils.mergeProps\r\n)(DropdownSearch);\r\n","import * as React from 'react';\r\nimport * as _ from 'underscore';\r\nimport {DropdownSearch, IDropdownOption, IDropdownSearchProps} from '../DropdownSearch';\r\nimport {MultiselectInput} from './MultiSelectInput';\r\n\r\nexport interface IMultiSelectDropdownSearchProps extends IDropdownSearchProps {\r\n    displayedOptions: IDropdownOption[];\r\n    selectedOptions: IDropdownOption[];\r\n}\r\n\r\nexport class MultiSelectDropdownSearch extends DropdownSearch {\r\n    static defaultProps: IMultiSelectDropdownSearchProps = {\r\n        ...DropdownSearch.defaultProps,\r\n        createOptionText: 'Create option for ',\r\n        isOpened: false,\r\n        options: [],\r\n        displayedOptions: [],\r\n        selectedOptions: [],\r\n        filterText: '',\r\n    };\r\n\r\n    protected getNoOptions(): JSX.Element[] {\r\n        if (\r\n            this.props.filterText.length > 0 &&\r\n            !_.findWhere(this.getSelectedOptions(), {value: this.props.filterText})\r\n        ) {\r\n            return [\r\n                <li\r\n                    key=\"noResultDropdownSearch\"\r\n                    onMouseDown={() => this.props.onCustomOptionClick(this.props.filterText)}\r\n                >\r\n                    <span className=\"no-search-results\">{`${this.props.createOptionText}\"${this.props.filterText}\"`}</span>\r\n                </li>,\r\n            ];\r\n        }\r\n        return super.getNoOptions();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={this.getClasses()} style={this.getStyles()}>\r\n                <MultiselectInput\r\n                    selectedOptions={this.getSelectedOptions()}\r\n                    onRemoveClick={this.props.onRemoveSelectedOption}\r\n                    onRemoveAll={this.props.onRemoveAllSelectedOptions}\r\n                    onFilterTextChange={this.props.onFilterTextChange}\r\n                    onBlur={() => this.props.onBlur(this.props.options)}\r\n                    onFocus={this.props.onFocus}\r\n                    onKeyDownFilterBox={(e: React.KeyboardEvent<HTMLInputElement>) => this.handleOnKeyDownFilterBox(e)}\r\n                    filterPlaceholder={this.props.filterPlaceholder}\r\n                    filterText={this.props.filterText}\r\n                    deselectAllTooltipText={this.props.deselectAllTooltipText}\r\n                />\r\n                <ul\r\n                    className=\"dropdown-menu\"\r\n                    ref={(input: HTMLUListElement) => {\r\n                        this.ulElement = input;\r\n                    }}\r\n                >\r\n                    {this.getDropdownOptions()}\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as _ from 'underscore';\r\nimport {Svg} from '../../svg/Svg';\r\nimport {Tooltip} from '../../tooltip/Tooltip';\r\nimport {IDropdownOption} from '../DropdownSearch';\r\nimport {SelectedOption} from './SelectedOption';\r\n\r\nexport interface IMultiselectInputProps {\r\n    selectedOptions: IDropdownOption[];\r\n    onRemoveClick?: (value: string) => void;\r\n    onRemoveAll?: () => void;\r\n    onFilterTextChange?: (filterText: string) => void;\r\n    onBlur?: () => void;\r\n    onFocus?: () => void;\r\n    onKeyDownFilterBox?: (e: React.KeyboardEvent<HTMLInputElement>) => void;\r\n    filterPlaceholder?: string;\r\n    filterText?: string;\r\n    deselectAllTooltipText?: string;\r\n}\r\n\r\nexport class MultiselectInput extends React.Component<IMultiselectInputProps, any> {\r\n    static defaultProps: Partial<IMultiselectInputProps> = {\r\n        deselectAllTooltipText: 'Deselect all options',\r\n    };\r\n\r\n    private handleOnRemoveAll() {\r\n        if (this.props.onRemoveAll) {\r\n            this.props.onRemoveAll();\r\n        }\r\n    }\r\n\r\n    private handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        if (this.props.onFilterTextChange) {\r\n            this.props.onFilterTextChange(e.target.value);\r\n        }\r\n    };\r\n\r\n    private handleOnBlur() {\r\n        if (this.props.onBlur) {\r\n            this.props.onBlur();\r\n        }\r\n    }\r\n\r\n    private handleOnFocus() {\r\n        if (this.props.onFocus) {\r\n            this.props.onFocus();\r\n        }\r\n    }\r\n\r\n    private handleOnKeyDown(e: React.KeyboardEvent<HTMLInputElement>) {\r\n        if (this.props.onKeyDownFilterBox) {\r\n            this.props.onKeyDownFilterBox(e);\r\n        }\r\n    }\r\n\r\n    private getSelectedOptionComponents(): JSX.Element[] {\r\n        const selectedOptionComponents: JSX.Element[] = [];\r\n\r\n        _.map(this.props.selectedOptions, (selectedOption) => {\r\n            selectedOptionComponents.push(\r\n                <SelectedOption\r\n                    value={selectedOption.value}\r\n                    label={selectedOption.displayValue}\r\n                    key={selectedOption.value}\r\n                    onRemoveClick={this.props.onRemoveClick}\r\n                />\r\n            );\r\n        });\r\n\r\n        return selectedOptionComponents;\r\n    }\r\n\r\n    private getRemoveAllSelectedOptionsButton(): JSX.Element {\r\n        if (this.props.selectedOptions.length) {\r\n            return (\r\n                <Tooltip title={this.props.deselectAllTooltipText} placement={'top'}>\r\n                    <div className=\"remove-all-selected-options\" onClick={() => this.handleOnRemoveAll()}>\r\n                        <Svg svgName=\"clear\" svgClass=\"icon fill-medium-blue\" />\r\n                    </div>\r\n                </Tooltip>\r\n            );\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"multiselect-input\">\r\n                <div className=\"multiselect-selected flex flex-center flex-auto\">\r\n                    <div className=\"selected-options-container\">{this.getSelectedOptionComponents()}</div>\r\n                    {this.getRemoveAllSelectedOptionsButton()}\r\n                </div>\r\n                <div className=\"multiselect-add flex flex-center flex-auto\">\r\n                    <input\r\n                        className=\"mod-no-border flex-auto\"\r\n                        placeholder={this.props.filterPlaceholder}\r\n                        onChange={(e: React.ChangeEvent<HTMLInputElement>) => this.handleInputChange(e)}\r\n                        onBlur={() => this.handleOnBlur()}\r\n                        onFocus={() => this.handleOnFocus()}\r\n                        onKeyDown={(e: React.KeyboardEvent<HTMLInputElement>) => this.handleOnKeyDown(e)}\r\n                        value={this.props.filterText}\r\n                    />\r\n                    <Svg svgName=\"filter\" className=\"icon fill-dark-medium-grey\" />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import {connect} from 'react-redux';\r\nimport * as _ from 'underscore';\r\nimport {IReactVaporState, IReduxActionsPayload} from '../../../ReactVapor';\r\nimport {IReduxAction, ReduxUtils} from '../../../utils/ReduxUtils';\r\nimport {\r\n    IDropdownOption,\r\n    IDropdownSearchDispatchProps,\r\n    IDropdownSearchOwnProps,\r\n    IDropdownSearchProps,\r\n    IDropdownSearchStateProps,\r\n} from '../DropdownSearch';\r\nimport {\r\n    addCustomSelectedOption,\r\n    addMultiSelectDropdownSearch,\r\n    applyFilterDropdownSearch,\r\n    closeDropdownSearch,\r\n    deselectAllOptionsMultiselectDropdownSearch,\r\n    deselectOptionDropdownSearch,\r\n    keyDownMultiselectDropdownSearch,\r\n    multiSelectOptionDropdownSearch,\r\n    openDropdownSearch,\r\n    removeDropdownSearch,\r\n    updateOptionsDropdownSearch,\r\n} from '../DropdownSearchActions';\r\nimport {IDropdownSearchState} from '../DropdownSearchReducers';\r\nimport {MultiSelectDropdownSearch} from './MultiSelectDropdownSearch';\r\n\r\nconst mapStateToProps = (state: IReactVaporState, ownProps: IDropdownSearchProps): IDropdownSearchStateProps => {\r\n    const dropdownSearch: IDropdownSearchState = _.findWhere(state.dropdownSearch, {id: ownProps.id});\r\n\r\n    if (dropdownSearch) {\r\n        return {\r\n            isOpened: dropdownSearch.isOpened || false,\r\n            options: dropdownSearch.options || [],\r\n            filterText: dropdownSearch.filterText || '',\r\n            activeOption: dropdownSearch.activeOption,\r\n            setFocusOnDropdownButton: dropdownSearch.setFocusOnDropdownButton,\r\n        };\r\n    }\r\n\r\n    return MultiSelectDropdownSearch.defaultProps;\r\n};\r\n\r\nconst mapDispatchToProps = (\r\n    dispatch: (action: IReduxAction<IReduxActionsPayload>) => void,\r\n    ownProps: IDropdownSearchOwnProps\r\n): IDropdownSearchDispatchProps => ({\r\n    onMount: () => dispatch(addMultiSelectDropdownSearch(ownProps.id, ownProps.defaultOptions)),\r\n    onDestroy: () => dispatch(removeDropdownSearch(ownProps.id)),\r\n    onBlur: (options: IDropdownOption[]) => dispatch(closeDropdownSearch(ownProps.id, options)),\r\n    onFocus: () => dispatch(openDropdownSearch(ownProps.id)),\r\n    onOptionClick: (option: IDropdownOption) => dispatch(multiSelectOptionDropdownSearch(ownProps.id, option)),\r\n    onCustomOptionClick: (value: string) => dispatch(addCustomSelectedOption(ownProps.id, value)),\r\n    onFilterTextChange: (filterText: string) => dispatch(applyFilterDropdownSearch(ownProps.id, filterText)),\r\n    onKeyDownFilterBox: (keyCode: number) => dispatch(keyDownMultiselectDropdownSearch(ownProps.id, keyCode)),\r\n    onRemoveSelectedOption: (value: string) => dispatch(deselectOptionDropdownSearch(ownProps.id, value)),\r\n    onRemoveAllSelectedOptions: () => dispatch(deselectAllOptionsMultiselectDropdownSearch(ownProps.id)),\r\n    updateOptions: (options: IDropdownOption[]) =>\r\n        dispatch(updateOptionsDropdownSearch(ownProps.id, options, undefined, false)),\r\n});\r\n\r\nexport const MultiSelectDropdownSearchConnected: React.ComponentClass<IDropdownSearchProps> = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps,\r\n    ReduxUtils.mergeProps\r\n)(MultiSelectDropdownSearch);\r\n"],"sourceRoot":""}