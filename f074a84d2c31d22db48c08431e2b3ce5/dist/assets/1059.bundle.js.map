{"version":3,"sources":["webpack:///./src/components/tooltip/DateTooltip.tsx?44bf","webpack:///./src/components/tooltip/examples/TooltipExamples.tsx?1ba2"],"names":["DateTooltip","content","date","format","tooltipFormat","title","moment","momentDate","Tooltip","render","className","placement","type","footer","currentDate","calendar","description"],"mappings":"sIAWaA,EAA0D,SAAC,G,IAChEC,EADiEC,EAAA,EAAAA,KAAMC,EAAA,EAAAA,OAAQC,EAAA,EAAAA,cAE7EC,EAAQC,EAAOJ,GAAMC,OAAOC,UAAiB,OAC7CG,EAAaD,EAAA,SAAgBJ,GAAQA,EAAOI,EAAOJ,GAMzD,OAJID,EADAE,EACU,aAAaA,GAAUA,EAAOI,GAAcA,EAAWJ,OAAOA,GAE9DI,EAAWJ,SAElB,gBAACK,EAAA,EAAO,CAACH,MAAOA,GAAQJ,I,0WCfnC,2B,+CAqEA,OArEqC,OAIjC,YAAAQ,OAAA,WACI,OACI,uBAAKC,UAAU,OACX,uBAAKA,UAAU,cACX,yBAAOA,UAAU,sBAAoB,mBACrC,uBAAKA,UAAU,gBACX,gBAACF,EAAA,EAAO,CAACH,MAAM,kBAAkBM,UAAU,SACvC,0BAAQC,KAAK,SAASF,UAAU,OAAK,gBAMjD,uBAAKA,UAAU,cACX,yBAAOA,UAAU,sBAAoB,iCACrC,uBAAKA,UAAU,gBACX,gBAACF,EAAA,EAAO,CAACH,MAAM,kBAAkBQ,OAAO,kBAAkBF,UAAU,SAChE,0BAAQC,KAAK,SAASF,UAAU,OAAK,gBAMjD,uBAAKA,UAAU,cACX,yBAAOA,UAAU,sBAAoB,4CACrC,uBAAKA,UAAU,gBACX,gBAACF,EAAA,EAAO,CAACH,MAAM,mBACX,0BAAQO,KAAK,SAASF,UAAU,OAAK,gBAMjD,uBAAKA,UAAU,cACX,yBAAOA,UAAU,sBAAoB,8CACrC,uBAAKA,UAAU,gBACX,gBAACF,EAAA,EAAO,CAACH,MAAM,IACX,0BAAQO,KAAK,SAASF,UAAU,OAAK,gBAMjD,uBAAKA,UAAU,cACX,yBAAOA,UAAU,sBAAoB,wBACrC,uBAAKA,UAAU,gBACX,0BAAQE,KAAK,SAASF,UAAU,OAC5B,gBAACV,EAAW,CACRE,KAAMI,EAAO,cACbH,OAAQ,SAACW,GAA+B,OAAAA,EAAYC,iBAKpE,uBAAKL,UAAU,cACX,yBAAOA,UAAU,sBAAoB,8CACrC,uBAAKA,UAAU,gBACX,0BAAQE,KAAK,SAASF,UAAU,OAC5B,gBAACV,EAAW,CAACE,KAAMI,IAAUH,OAAO,MAAMC,cAAc,iBA7DzE,EAAAY,YACH,oLAmER,EArEA,CAAqC","file":"assets/1059.bundle.js","sourcesContent":["import * as moment from 'moment';\nimport * as React from 'react';\nimport * as _ from 'underscore';\nimport {Tooltip} from './Tooltip';\n\nexport interface DateTooltipsProps {\n    date: moment.MomentInput;\n    format?: ((date: moment.MomentInput) => string) | string;\n    tooltipFormat?: string;\n}\n\nexport const DateTooltip: React.FunctionComponent<DateTooltipsProps> = ({date, format, tooltipFormat}) => {\n    let content: string;\n    const title = moment(date).format(tooltipFormat ?? 'LLL');\n    const momentDate = moment.isMoment(date) ? date : moment(date);\n    if (format) {\n        content = _.isFunction(format) ? format(momentDate) : momentDate.format(format);\n    } else {\n        content = momentDate.format();\n    }\n    return <Tooltip title={title}>{content}</Tooltip>;\n};\n","import * as moment from 'moment';\r\nimport * as React from 'react';\r\nimport {DateTooltip} from '../DateTooltip';\r\nimport {Tooltip} from '../Tooltip';\r\n\r\nexport class TooltipExamples extends React.Component<{}, {}> {\r\n    static description =\r\n        'Tooltips are short descriptions that appear when hovering an element. They are used to provide explanations that do not require nor allow user interaction, like tips and tricks.';\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"mt2\">\r\n                <div className=\"form-group\">\r\n                    <label className=\"form-control-label\">Tooltip example</label>\r\n                    <div className=\"form-control\">\r\n                        <Tooltip title=\"I am a tooltip!\" placement=\"right\">\r\n                            <button type=\"button\" className=\"btn\">\r\n                                Hover me!\r\n                            </button>\r\n                        </Tooltip>\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label className=\"form-control-label\">Tooltip example with a footer</label>\r\n                    <div className=\"form-control\">\r\n                        <Tooltip title=\"I am a tooltip!\" footer=\"I have a footer\" placement=\"right\">\r\n                            <button type=\"button\" className=\"btn\">\r\n                                Hover me!\r\n                            </button>\r\n                        </Tooltip>\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label className=\"form-control-label\">Tooltip with top with the container body</label>\r\n                    <div className=\"form-control\">\r\n                        <Tooltip title=\"I am a tooltip!\">\r\n                            <button type=\"button\" className=\"btn\">\r\n                                Hover me!\r\n                            </button>\r\n                        </Tooltip>\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label className=\"form-control-label\">No Tooltip if the title is an empty string</label>\r\n                    <div className=\"form-control\">\r\n                        <Tooltip title=\"\">\r\n                            <button type=\"button\" className=\"btn\">\r\n                                Hover me!\r\n                            </button>\r\n                        </Tooltip>\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label className=\"form-control-label\">Time Tooltip example</label>\r\n                    <div className=\"form-control\">\r\n                        <button type=\"button\" className=\"btn\">\r\n                            <DateTooltip\r\n                                date={moment('2019-12-16')}\r\n                                format={(currentDate: moment.Moment) => currentDate.calendar()}\r\n                            />\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label className=\"form-control-label\">Time Tooltip with custom formating example</label>\r\n                    <div className=\"form-control\">\r\n                        <button type=\"button\" className=\"btn\">\r\n                            <DateTooltip date={moment()} format=\"LLL\" tooltipFormat=\"ddd, hA\" />\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"],"sourceRoot":""}