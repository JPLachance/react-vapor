(window.webpackJsonp=window.webpackJsonp||[]).push([[176],{1275:function(r,n,e){"use strict";e.r(n),n.default="import {shallow, ShallowWrapper} from 'enzyme';\r\nimport {shallowWithState} from 'enzyme-redux';\r\nimport * as React from 'react';\r\nimport * as _ from 'underscore';\r\nimport {Title} from '../../title/Title';\r\nimport {Breadcrumb, IBreadcrumbProps} from '../Breadcrumb';\r\nimport {BreadcrumbLink, IBreadcrumbLinkProps} from '../BreadcrumbLink';\r\n\r\ndescribe('<Breadcrumb/>', () => {\r\n    const defaultProps: IBreadcrumbProps = {\r\n        title: {\r\n            text: 'test',\r\n        },\r\n    };\r\n\r\n    let breadcrumbComponent: ShallowWrapper<IBreadcrumbProps>;\r\n\r\n    it('should render without errors', () => {\r\n        expect(() => {\r\n            shallow(<Breadcrumb {...defaultProps} />);\r\n        }).not.toThrow();\r\n    });\r\n\r\n    describe('<Breadcrumb /> with default props', () => {\r\n        beforeEach(() => {\r\n            breadcrumbComponent = shallowWithState(<Breadcrumb {...defaultProps} />, {});\r\n        });\r\n\r\n        it('should render the default title', () => {\r\n            const titleComponent = breadcrumbComponent.find(Title);\r\n            expect(titleComponent.length).toEqual(1);\r\n            expect(titleComponent.props().text).toEqual(defaultProps.title.text);\r\n        });\r\n    });\r\n\r\n    describe('<Breadcrumb /> with custom props', () => {\r\n        const defaultLink: IBreadcrumbLinkProps = {\r\n            name: 'title',\r\n            link: '#',\r\n        };\r\n\r\n        const renderBreadcrumb = (props: Partial<IBreadcrumbProps> = {}) => {\r\n            breadcrumbComponent = shallowWithState(<Breadcrumb {..._.defaults(props, defaultProps)} />, {});\r\n        };\r\n\r\n        it('should not render the BreadcrumbLink if the links has no elements', () => {\r\n            renderBreadcrumb({\r\n                links: [],\r\n            });\r\n            expect(breadcrumbComponent.find(BreadcrumbLink).length).toBe(0);\r\n        });\r\n\r\n        it('should render the BreadcrumbLink if the links has 1 element', () => {\r\n            renderBreadcrumb({\r\n                links: [defaultLink],\r\n            });\r\n            expect(breadcrumbComponent.find(BreadcrumbLink).length).toBe(1);\r\n        });\r\n\r\n        it('should render all BreadcrumbLink if the links has more than 1 element', () => {\r\n            const secondLink: IBreadcrumbLinkProps = {\r\n                name: 'test',\r\n                link: '$',\r\n            };\r\n            renderBreadcrumb({\r\n                links: [defaultLink, secondLink],\r\n            });\r\n            expect(breadcrumbComponent.find(BreadcrumbLink).length).toBe(2);\r\n        });\r\n\r\n        it('should render the BreadcrumbLink link with the defaultLinkPath before', () => {\r\n            renderBreadcrumb({\r\n                links: [defaultLink],\r\n                defaultLinkPath: 'test/',\r\n            });\r\n            expect(breadcrumbComponent.find(BreadcrumbLink).props().link).toContain('test/');\r\n        });\r\n    });\r\n});\r\n"}}]);
//# sourceMappingURL=176.bundle.js.map