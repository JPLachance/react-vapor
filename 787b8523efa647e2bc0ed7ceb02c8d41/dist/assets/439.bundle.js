(window.webpackJsonp=window.webpackJsonp||[]).push([[439],{1533:function(n,t,r){"use strict";r.r(t),t.default="import {IReduxAction} from '../../utils/ReduxUtils';\r\n\r\nexport const InputActions = {\r\n    add: 'ADD_INPUT',\r\n    remove: 'REMOVE_INPUT',\r\n    changeValue: 'CHANGE_VALUE_INPUT',\r\n    validateValue: 'VALIDATE_VALUE_INPUT',\r\n    setDisabled: 'SET_DISABLED_INPUT',\r\n};\r\n\r\nexport interface IInputActionPayload {\r\n    id: string;\r\n    valid?: boolean;\r\n    value?: string;\r\n    disabled?: boolean;\r\n}\r\n\r\nexport const addInput = (\r\n    id: string,\r\n    value = '',\r\n    valid = true,\r\n    disabled = false\r\n): IReduxAction<IInputActionPayload> => ({\r\n    type: InputActions.add,\r\n    payload: {id, value, valid, disabled},\r\n});\r\n\r\nexport const removeInput = (id: string): IReduxAction<IInputActionPayload> => ({\r\n    type: InputActions.remove,\r\n    payload: {id},\r\n});\r\n\r\nexport const changeInputValue = (id: string, value = '', valid = true): IReduxAction<IInputActionPayload> => ({\r\n    type: InputActions.changeValue,\r\n    payload: {id, value, valid},\r\n});\r\n\r\nexport const validateInputValue = (id: string, valid = true): IReduxAction<IInputActionPayload> => ({\r\n    type: InputActions.validateValue,\r\n    payload: {id, valid},\r\n});\r\n\r\nexport const setDisabledInput = (id: string, disabled = false): IReduxAction<IInputActionPayload> => ({\r\n    type: InputActions.setDisabled,\r\n    payload: {id, disabled},\r\n});\r\n"}}]);
//# sourceMappingURL=439.bundle.js.map