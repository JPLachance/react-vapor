(window.webpackJsonp=window.webpackJsonp||[]).push([[310],{1418:function(o,t,n){"use strict";n.r(t),t.default="import {CSSProperties} from 'react';\r\n\r\nexport interface IDropUIPosition {\r\n    position: string;\r\n    orientation: string;\r\n}\r\n\r\nexport const DropPodPosition = {\r\n    bottom: 'bottom',\r\n    top: 'top',\r\n    left: 'left',\r\n    right: 'right',\r\n};\r\n\r\nexport const OrientationByPosition = {\r\n    [DropPodPosition.bottom]: [DropPodPosition.left, DropPodPosition.right],\r\n    [DropPodPosition.top]: [DropPodPosition.left, DropPodPosition.right],\r\n    [DropPodPosition.left]: [DropPodPosition.top, DropPodPosition.bottom],\r\n    [DropPodPosition.right]: [DropPodPosition.top, DropPodPosition.bottom],\r\n};\r\n\r\nexport interface IBoundingLimit {\r\n    maxY: number;\r\n    minY: number;\r\n    maxX: number;\r\n    minX: number;\r\n}\r\n\r\nexport interface IDomPositionCalculatorReturn {\r\n    style?: Partial<CSSProperties>;\r\n    lastPosition?: IDropUIPosition;\r\n}\r\n\r\nexport const DomPositionCalculator: {\r\n    [position: string]: (\r\n        buttonOffset: ClientRect | DOMRect,\r\n        dropOffset: ClientRect | DOMRect,\r\n        boundingLimit: IBoundingLimit,\r\n        dropUIPosition: Partial<IDropUIPosition>\r\n    ) => IDomPositionCalculatorReturn;\r\n} = {\r\n    bottom: (\r\n        buttonOffset: ClientRect | DOMRect,\r\n        dropOffset: ClientRect | DOMRect,\r\n        boundingLimit: IBoundingLimit,\r\n        dropUIPosition: IDropUIPosition\r\n    ): IDomPositionCalculatorReturn => {\r\n        if (\r\n            buttonOffset.bottom + dropOffset.height < boundingLimit.maxY ||\r\n            dropUIPosition.position === DropPodPosition.bottom\r\n        ) {\r\n            if (\r\n                buttonOffset.left + dropOffset.width < boundingLimit.maxX ||\r\n                dropUIPosition.orientation === DropPodPosition.left\r\n            ) {\r\n                return {\r\n                    style: {\r\n                        top: buttonOffset.bottom,\r\n                        left: buttonOffset.left,\r\n                    },\r\n                    lastPosition: {\r\n                        position: DropPodPosition.bottom,\r\n                        orientation: DropPodPosition.left,\r\n                    },\r\n                };\r\n            } else if (\r\n                buttonOffset.right - dropOffset.width >= boundingLimit.minX ||\r\n                dropUIPosition.orientation === DropPodPosition.right\r\n            ) {\r\n                return {\r\n                    style: {\r\n                        top: buttonOffset.bottom,\r\n                        left: buttonOffset.right - dropOffset.width,\r\n                    },\r\n                    lastPosition: {\r\n                        position: DropPodPosition.bottom,\r\n                        orientation: DropPodPosition.right,\r\n                    },\r\n                };\r\n            }\r\n        }\r\n\r\n        return {};\r\n    },\r\n    top: (\r\n        buttonOffset: ClientRect | DOMRect,\r\n        dropOffset: ClientRect | DOMRect,\r\n        boundingLimit: IBoundingLimit,\r\n        dropUIPosition: IDropUIPosition\r\n    ): IDomPositionCalculatorReturn => {\r\n        if (\r\n            buttonOffset.top - dropOffset.height > boundingLimit.minY ||\r\n            dropUIPosition.position === DropPodPosition.top\r\n        ) {\r\n            if (\r\n                buttonOffset.left + dropOffset.width < boundingLimit.maxX ||\r\n                dropUIPosition.orientation === DropPodPosition.left\r\n            ) {\r\n                return {\r\n                    style: {\r\n                        top: buttonOffset.top - dropOffset.height,\r\n                        left: buttonOffset.left,\r\n                    },\r\n                    lastPosition: {\r\n                        position: DropPodPosition.top,\r\n                        orientation: DropPodPosition.left,\r\n                    },\r\n                };\r\n            } else if (\r\n                buttonOffset.right - dropOffset.width > boundingLimit.minX ||\r\n                dropUIPosition.orientation === DropPodPosition.right\r\n            ) {\r\n                return {\r\n                    style: {\r\n                        top: buttonOffset.top - dropOffset.height,\r\n                        left: buttonOffset.right - dropOffset.width,\r\n                    },\r\n                    lastPosition: {\r\n                        position: DropPodPosition.top,\r\n                        orientation: DropPodPosition.right,\r\n                    },\r\n                };\r\n            }\r\n        }\r\n\r\n        return {};\r\n    },\r\n    left: (\r\n        buttonOffset: ClientRect | DOMRect,\r\n        dropOffset: ClientRect | DOMRect,\r\n        boundingLimit: IBoundingLimit,\r\n        dropUIPosition: IDropUIPosition\r\n    ): IDomPositionCalculatorReturn => {\r\n        if (\r\n            buttonOffset.left - dropOffset.width > boundingLimit.minX ||\r\n            dropUIPosition.position === DropPodPosition.left\r\n        ) {\r\n            if (\r\n                buttonOffset.top + dropOffset.height < boundingLimit.maxY ||\r\n                dropUIPosition.orientation === DropPodPosition.top\r\n            ) {\r\n                return {\r\n                    style: {\r\n                        top: buttonOffset.top,\r\n                        left: buttonOffset.left - dropOffset.width,\r\n                    },\r\n                    lastPosition: {\r\n                        position: DropPodPosition.left,\r\n                        orientation: DropPodPosition.top,\r\n                    },\r\n                };\r\n            } else if (\r\n                buttonOffset.bottom - dropOffset.height > boundingLimit.minY ||\r\n                dropUIPosition.orientation === DropPodPosition.bottom\r\n            ) {\r\n                return {\r\n                    style: {\r\n                        top: buttonOffset.bottom - dropOffset.height,\r\n                        left: buttonOffset.left - dropOffset.width,\r\n                    },\r\n                    lastPosition: {\r\n                        position: DropPodPosition.left,\r\n                        orientation: DropPodPosition.bottom,\r\n                    },\r\n                };\r\n            }\r\n        }\r\n\r\n        return {};\r\n    },\r\n    right: (\r\n        buttonOffset: ClientRect | DOMRect,\r\n        dropOffset: ClientRect | DOMRect,\r\n        boundingLimit: IBoundingLimit,\r\n        dropUIPosition: IDropUIPosition\r\n    ): IDomPositionCalculatorReturn => {\r\n        if (\r\n            buttonOffset.right + dropOffset.width < boundingLimit.maxX ||\r\n            dropUIPosition.position === DropPodPosition.right\r\n        ) {\r\n            if (\r\n                buttonOffset.top + dropOffset.height < boundingLimit.maxY ||\r\n                dropUIPosition.orientation === DropPodPosition.top\r\n            ) {\r\n                return {\r\n                    style: {\r\n                        top: buttonOffset.top,\r\n                        left: buttonOffset.right,\r\n                    },\r\n                    lastPosition: {\r\n                        position: DropPodPosition.right,\r\n                        orientation: DropPodPosition.top,\r\n                    },\r\n                };\r\n            } else if (\r\n                buttonOffset.bottom - dropOffset.height > boundingLimit.minY ||\r\n                dropUIPosition.orientation === DropPodPosition.bottom\r\n            ) {\r\n                return {\r\n                    style: {\r\n                        top: buttonOffset.bottom - dropOffset.height,\r\n                        left: buttonOffset.right,\r\n                    },\r\n                    lastPosition: {\r\n                        position: DropPodPosition.right,\r\n                        orientation: DropPodPosition.bottom,\r\n                    },\r\n                };\r\n            }\r\n        }\r\n\r\n        return {};\r\n    },\r\n};\r\n"}}]);
//# sourceMappingURL=310.bundle.js.map