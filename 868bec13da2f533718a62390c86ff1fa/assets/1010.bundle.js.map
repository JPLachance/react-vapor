{"version":3,"sources":["webpack:///./src/components/labeledValue/examples/LabeledValueExamples.tsx?aac0","webpack:///./src/components/labeledValue/LabeledValue.tsx?0e17"],"names":["LabeledValueExamples","className","label","value","fullRow","information","informationPlacement","Bottom","singleLine","render","informationSVG","this","props","title","placement","Top","svgName","svgClass","padded","padding","mr1","defaultProps"],"mappings":"8FAAA,yFAIaA,EAAuB,WAAM,OACtC,uBAAKC,UAAU,OACX,uBAAKA,UAAU,cACX,yBAAOA,UAAU,sBAAoB,6BACrC,gBAAC,IAAY,CAACC,MAAM,cAAcC,MAAM,gBACxC,gBAAC,IAAY,CAACD,MAAM,eAAeC,MAAM,kBAE7C,uBAAKF,UAAU,cACX,yBAAOA,UAAU,sBAAoB,8CACrC,uBAAKA,UAAU,mBACX,gBAAC,IAAY,CAACC,MAAM,cAAcC,MAAM,gBACxC,gBAAC,IAAY,CAACD,MAAM,eAAeC,MAAM,mBAGjD,uBAAKF,UAAU,cACX,yBAAOA,UAAU,sBAAoB,2DACrC,uBAAKA,UAAU,kBACX,gBAAC,IAAY,CAACC,MAAM,yBAAyBC,MAAM,cAAcC,SAAO,IACxE,gBAAC,IAAY,CAACF,MAAM,eAAeC,MAAM,iBACzC,gBAAC,IAAY,CAACD,MAAM,cAAcC,MAAM,kBAGhD,uBAAKF,UAAU,cACX,yBAAOA,UAAU,sBAAoB,uCACrC,uBAAKA,UAAU,WACX,gBAAC,IAAY,CAACC,MAAM,cAAcC,MAAM,gBACxC,gBAAC,IAAY,CAACD,MAAM,eAAeC,MAAM,iBACzC,gBAAC,IAAY,CAACD,MAAM,cAAcC,MAAM,gBACxC,gBAAC,IAAY,CAACD,MAAM,eAAeC,MAAM,iBACzC,gBAAC,IAAY,CAACD,MAAM,cAAcC,MAAM,kBAGhD,uBAAKF,UAAU,cACX,yBAAOA,UAAU,sBAAoB,kCACrC,gBAAC,IAAY,CAACC,MAAM,QAAQC,MAAM,QAAQE,YAAa,yCAE3D,uBAAKJ,UAAU,cACX,yBAAOA,UAAU,sBAAoB,mDACrC,gBAAC,IAAY,CACTC,MAAM,QACNC,MAAM,QACNE,YAAa,sCACbC,qBAAsB,IAAiBC,UAG/C,uBAAKN,UAAU,cACX,yBAAOA,UAAU,sBAAoB,2CACrC,gBAAC,IAAY,CAACC,MAAM,QAAQC,MAAM,QAAQK,YAAY,KAE1D,uBAAKP,UAAU,cACX,yBAAOA,UAAU,sBAAoB,2CACrC,gBAAC,IAAY,CACTC,MAAM,QACNC,MACI,4BACI,wBAAMF,UAAU,QAAM,qBACtB,0BACI,qCACA,qCACA,6C,oaC9C5B,2B,+CA8BA,OA9BkC,OAK9B,YAAAQ,OAAA,WACI,IAAMC,EAAmBC,KAAKC,MAAMP,YAChC,gBAAC,IAAO,CAACQ,MAAOF,KAAKC,MAAMP,YAAaS,UAAWH,KAAKC,MAAMN,sBAAwB,IAAiBS,KACnG,gBAAC,IAAG,CAACC,QAAQ,UAAUC,SAAS,2BAEpC,KAEJ,OACI,uBACIhB,UAAW,EACP,MACA,CAACiB,OAAQP,KAAKC,MAAMO,QAAS,mBAAoBR,KAAKC,MAAMR,SAC5DO,KAAKC,MAAMX,YAGf,0BAAQA,UAAW,EAAW,QAAS,CAAC,eAAgBU,KAAKC,MAAMJ,cAC/D,wBAAMP,UAAW,EAAW,CAACmB,MAAOT,KAAKC,MAAMP,eAAgBM,KAAKC,MAAMV,OACzEQ,GAEL,2BAAST,UAAW,EAAW,QAAS,CAAC,eAAgBU,KAAKC,MAAMJ,cAC/DG,KAAKC,MAAMT,SAxBrB,EAAAkB,aAA4C,CAC/CF,SAAS,GA4BjB,EA9BA,CAAkC","file":"assets/1010.bundle.js","sourcesContent":["import * as React from 'react';\r\nimport {TooltipPlacement} from '../../../utils/TooltipUtils';\r\nimport {LabeledValue} from '../LabeledValue';\r\n\r\nexport const LabeledValueExamples = () => (\r\n    <div className=\"mt2\">\r\n        <div className=\"form-group\">\r\n            <label className=\"form-control-label\">Two Simple Labeled Values</label>\r\n            <LabeledValue label=\"First label\" value=\"first value\" />\r\n            <LabeledValue label=\"Second label\" value=\"second value\" />\r\n        </div>\r\n        <div className=\"form-group\">\r\n            <label className=\"form-control-label\">Two Simple Labeled Values inside a flexbox</label>\r\n            <div className=\"flex flex-start\">\r\n                <LabeledValue label=\"First label\" value=\"first value\" />\r\n                <LabeledValue label=\"Second label\" value=\"second value\" />\r\n            </div>\r\n        </div>\r\n        <div className=\"form-group\">\r\n            <label className=\"form-control-label\">Labeled Values inside a flexbox with one value full row</label>\r\n            <div className=\"flex flex-wrap\">\r\n                <LabeledValue label=\"First label (full row)\" value=\"first value\" fullRow />\r\n                <LabeledValue label=\"Second label\" value=\"second value\" />\r\n                <LabeledValue label=\"Third label\" value=\"third value\" />\r\n            </div>\r\n        </div>\r\n        <div className=\"form-group\">\r\n            <label className=\"form-control-label\">Labeled Values \"columnised\" (3 X 3)</label>\r\n            <div className=\"columns\">\r\n                <LabeledValue label=\"First label\" value=\"first value\" />\r\n                <LabeledValue label=\"Second label\" value=\"second value\" />\r\n                <LabeledValue label=\"Third label\" value=\"third value\" />\r\n                <LabeledValue label=\"Fourth label\" value=\"fourth value\" />\r\n                <LabeledValue label=\"Fifth label\" value=\"fifth value\" />\r\n            </div>\r\n        </div>\r\n        <div className=\"form-group\">\r\n            <label className=\"form-control-label\">Labeled Value with information</label>\r\n            <LabeledValue label=\"Label\" value=\"value\" information={'Some valuable informations go here.'} />\r\n        </div>\r\n        <div className=\"form-group\">\r\n            <label className=\"form-control-label\">Labeled Value with custom information placement</label>\r\n            <LabeledValue\r\n                label=\"Label\"\r\n                value=\"value\"\r\n                information={'Some valuable informations go here.'}\r\n                informationPlacement={TooltipPlacement.Bottom}\r\n            />\r\n        </div>\r\n        <div className=\"form-group\">\r\n            <label className=\"form-control-label\">Labeled Value rendered on a single line</label>\r\n            <LabeledValue label=\"Label\" value=\"value\" singleLine={true} />\r\n        </div>\r\n        <div className=\"form-group\">\r\n            <label className=\"form-control-label\">Labeled Value with JSX.Element as value</label>\r\n            <LabeledValue\r\n                label=\"Label\"\r\n                value={\r\n                    <span>\r\n                        <span className=\"bold\">a list of values:</span>\r\n                        <ul>\r\n                            <li>value 1</li>\r\n                            <li>value 2</li>\r\n                            <li>value 3</li>\r\n                        </ul>\r\n                    </span>\r\n                }\r\n            />\r\n        </div>\r\n    </div>\r\n);\r\n","import * as classNames from 'classnames';\r\nimport * as React from 'react';\r\nimport {TooltipPlacement} from '../../utils/TooltipUtils';\r\nimport {Svg} from '../svg/Svg';\r\nimport {Tooltip} from '../tooltip/Tooltip';\r\n\r\nexport interface ILabeledValueProps {\r\n    label: string;\r\n    value: React.ReactNode;\r\n    fullRow?: boolean;\r\n    information?: string;\r\n    informationPlacement?: TooltipPlacement;\r\n    padding?: boolean;\r\n    singleLine?: boolean;\r\n    className?: string;\r\n}\r\n\r\nexport class LabeledValue extends React.PureComponent<ILabeledValueProps> {\r\n    static defaultProps: Partial<ILabeledValueProps> = {\r\n        padding: true,\r\n    };\r\n\r\n    render() {\r\n        const informationSVG = !!this.props.information ? (\r\n            <Tooltip title={this.props.information} placement={this.props.informationPlacement || TooltipPlacement.Top}>\r\n                <Svg svgName=\"info-14\" svgClass=\"icon fill-medium-grey\" />\r\n            </Tooltip>\r\n        ) : null;\r\n\r\n        return (\r\n            <div\r\n                className={classNames(\r\n                    'box',\r\n                    {padded: this.props.padding, 'full-content-x': !!this.props.fullRow},\r\n                    this.props.className\r\n                )}\r\n            >\r\n                <header className={classNames('label', {'inline-block': this.props.singleLine})}>\r\n                    <span className={classNames({mr1: !!this.props.information})}>{this.props.label}</span>\r\n                    {informationSVG}\r\n                </header>\r\n                <section className={classNames('value', {'inline-block': this.props.singleLine})}>\r\n                    {this.props.value}\r\n                </section>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"],"sourceRoot":""}