{"version":3,"sources":["webpack:///./src/components/flatSelect/examples/FlatSelectExamples.tsx?6d11","webpack:///./src/utils/UUID.ts?611d","webpack:///./src/components/flatSelect/FlatSelectSelectors.ts?585e","webpack:///./src/components/flatSelect/FlatSelect.tsx?30fc","webpack:///./src/components/flatSelect/FlatSelectOption.tsx?11b2","webpack:///./src/components/flatSelect/FlatSelectConnected.tsx?87e7"],"names":["render","defaultFlatSelectOption","id","generate","option","content","svg","svgName","svgClass","prepend","classes","append","className","options","group","optionPicker","tooltip","title","container","placement","d","Date","now","replace","c","r","Math","random","floor","toString","getInput","state","ownProps","flatSelect","FlatSelectSelectors","getSelectedOptionId","flatSelectState","selectedOptionId","componentWillMount","this","props","onRender","componentWillUnmount","onDestroy","handleOnOptionClick","onOptionClick","onClick","getOptions","flatSelectOption","index","selected","key","selectable","defaultProps","FlatSelectConnected","dispatch","defaultSelectedOptionId","length","mergeProps"],"mappings":"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","file":"assets/975.bundle.js","sourcesContent":["import * as React from 'react';\r\nimport {UUID} from '../../../utils/UUID';\r\nimport {IContentProps} from '../../content/Content';\r\nimport {Loading} from '../../loading/Loading';\r\nimport {ISvgProps, Svg} from '../../svg/Svg';\r\nimport {FlatSelectConnected} from '../FlatSelectConnected';\r\nimport {IFlatSelectOptionProps} from '../FlatSelectOption';\r\n\r\nexport class FlatSelectExamples extends React.Component {\r\n    render() {\r\n        const defaultFlatSelectOption: IFlatSelectOptionProps[] = [\r\n            {\r\n                id: UUID.generate(),\r\n                option: {content: 'Option 1'},\r\n            },\r\n            {\r\n                id: UUID.generate(),\r\n                option: {content: 'Option 2'},\r\n            },\r\n            {\r\n                id: UUID.generate(),\r\n                option: {content: 'Option 3'},\r\n            },\r\n        ];\r\n\r\n        const svg: ISvgProps = {\r\n            svgName: 'domain-google',\r\n            svgClass: 'icon',\r\n        };\r\n        const prepend: IContentProps = {content: () => <Svg {...svg} />, classes: ['mr1']};\r\n        const append: IContentProps = {content: () => <Svg {...svg} />, classes: ['ml1']};\r\n\r\n        return (\r\n            <div className=\"mt2\">\r\n                <h1 className=\"text-blue mb1\">Flat Select List</h1>\r\n\r\n                <div className=\"form-group\">\r\n                    <label className=\"form-control-label\">Default Flat Select</label>\r\n                    <div className=\"form-control\">\r\n                        <FlatSelectConnected\r\n                            {...{\r\n                                id: UUID.generate(),\r\n                                options: defaultFlatSelectOption,\r\n                            }}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label className=\"form-control-label\">Flat Select mod group</label>\r\n                    <div className=\"form-control\">\r\n                        <FlatSelectConnected\r\n                            {...{\r\n                                id: UUID.generate(),\r\n                                options: defaultFlatSelectOption,\r\n                                group: true,\r\n                            }}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label className=\"form-control-label\">Flat Select mod option picker</label>\r\n                    <div className=\"form-control\">\r\n                        <FlatSelectConnected\r\n                            {...{\r\n                                id: UUID.generate(),\r\n                                options: defaultFlatSelectOption,\r\n                                optionPicker: true,\r\n                            }}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label className=\"form-control-label\">Flat Select with option tooltip</label>\r\n                    <div className=\"form-control\">\r\n                        <FlatSelectConnected\r\n                            {...{\r\n                                id: UUID.generate(),\r\n                                options: [\r\n                                    {\r\n                                        id: UUID.generate(),\r\n                                        option: {content: 'Option 1'},\r\n                                        tooltip: {title: 'Option 1 tooltip', container: 'body', placement: 'bottom'},\r\n                                    },\r\n                                    {\r\n                                        id: UUID.generate(),\r\n                                        option: {content: 'Option 2'},\r\n                                        tooltip: {title: 'Option 2 tooltip', container: 'body', placement: 'bottom'},\r\n                                    },\r\n                                ],\r\n                            }}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label className=\"form-control-label\">Flat Select mod group with option tooltip</label>\r\n                    <div className=\"form-control\">\r\n                        <FlatSelectConnected\r\n                            {...{\r\n                                id: UUID.generate(),\r\n                                options: [\r\n                                    {\r\n                                        id: UUID.generate(),\r\n                                        option: {content: 'Option 1'},\r\n                                        tooltip: {title: 'Option 1 tooltip', container: 'body', placement: 'bottom'},\r\n                                    },\r\n                                    {\r\n                                        id: UUID.generate(),\r\n                                        option: {content: 'Option 2'},\r\n                                        tooltip: {title: 'Option 2 tooltip', container: 'body', placement: 'bottom'},\r\n                                    },\r\n                                ],\r\n                                group: true,\r\n                            }}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label className=\"form-control-label\">Flat Select with option prepend</label>\r\n                    <div className=\"form-control\">\r\n                        <FlatSelectConnected\r\n                            {...{\r\n                                id: UUID.generate(),\r\n                                options: [\r\n                                    {\r\n                                        id: UUID.generate(),\r\n                                        option: {content: 'Option 1'},\r\n                                        prepend: prepend,\r\n                                    },\r\n                                    {\r\n                                        id: UUID.generate(),\r\n                                        option: {content: 'Option 2'},\r\n                                        prepend: prepend,\r\n                                    },\r\n                                ],\r\n                            }}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label className=\"form-control-label\">Flat Select with option append</label>\r\n                    <div className=\"form-control\">\r\n                        <FlatSelectConnected\r\n                            {...{\r\n                                id: UUID.generate(),\r\n                                options: [\r\n                                    {\r\n                                        id: UUID.generate(),\r\n                                        option: {content: 'Option 1'},\r\n                                        append: append,\r\n                                    },\r\n                                    {\r\n                                        id: UUID.generate(),\r\n                                        option: {content: 'Option 2'},\r\n                                        append: append,\r\n                                    },\r\n                                ],\r\n                            }}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label className=\"form-control-label\">Flat Select with option component</label>\r\n                    <div className=\"form-control\">\r\n                        <FlatSelectConnected\r\n                            {...{\r\n                                id: UUID.generate(),\r\n                                options: [\r\n                                    {\r\n                                        id: UUID.generate(),\r\n                                        option: {content: Loading},\r\n                                    },\r\n                                    {\r\n                                        id: UUID.generate(),\r\n                                        option: {content: Loading},\r\n                                    },\r\n                                ],\r\n                            }}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","// tslint:disable\r\nexport class UUID {\r\n    // TODO: replace for https://www.npmjs.com/package/uuid\r\n    static generate() {\r\n        // Source: https://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\r\n        let d = Date.now();\r\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c: string) => {\r\n            const r = (d + Math.random() * 16) % 16 | 0;\r\n            d = Math.floor(d / 16);\r\n            return (c === 'x' ? r : (r & 0x3) | 0x8).toString(16);\r\n        });\r\n    }\r\n}\r\n// tslint:enable\r\n","import {createSelector} from 'reselect';\r\nimport * as _ from 'underscore';\r\n\r\nimport {IReactVaporState} from '../../ReactVapor';\r\nimport {flatSelectInitialState, IFlatSelectState} from './FlatSelectReducers';\r\n\r\nconst getInput = (state: IReactVaporState, ownProps: {id: string}): IFlatSelectState => {\r\n    return _.findWhere(state.flatSelect, {id: ownProps.id}) || flatSelectInitialState;\r\n};\r\n\r\nconst getSelectedOptionId = createSelector(\r\n    getInput,\r\n    (flatSelectState: IFlatSelectState): string => flatSelectState && flatSelectState.selectedOptionId\r\n);\r\n\r\nexport const FlatSelectSelectors = {\r\n    getInput,\r\n    getSelectedOptionId,\r\n};\r\n","import * as classNames from 'classnames';\r\nimport * as React from 'react';\r\nimport * as _ from 'underscore';\r\nimport {FlatSelectOption, IFlatSelectOptionProps} from './FlatSelectOption';\r\n\r\nexport interface IFlatSelectOwnProps {\r\n    id: string;\r\n    options: IFlatSelectOptionProps[];\r\n    classes?: string[];\r\n    group?: boolean;\r\n    optionPicker?: boolean;\r\n    defaultSelectedOptionId?: string;\r\n    onClick?: (option: IFlatSelectOptionProps) => void;\r\n}\r\n\r\nexport interface IFlatSelectStateProps {\r\n    selectedOptionId?: string;\r\n}\r\n\r\nexport interface IFlatSelectDispatchProps {\r\n    onRender?: () => void;\r\n    onDestroy?: () => void;\r\n    onOptionClick?: (option: IFlatSelectOptionProps) => void;\r\n}\r\n\r\nexport interface IFlatSelectProps extends IFlatSelectOwnProps, IFlatSelectStateProps, IFlatSelectDispatchProps {}\r\n\r\nexport class FlatSelect extends React.Component<IFlatSelectProps> {\r\n    componentWillMount() {\r\n        if (this.props.onRender) {\r\n            this.props.onRender();\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (this.props.onDestroy) {\r\n            this.props.onDestroy();\r\n        }\r\n    }\r\n\r\n    private handleOnOptionClick(option: IFlatSelectOptionProps) {\r\n        if (this.props.onOptionClick) {\r\n            this.props.onOptionClick(option);\r\n        }\r\n\r\n        if (this.props.onClick) {\r\n            this.props.onClick(option);\r\n        }\r\n    }\r\n\r\n    private getOptions(): JSX.Element[] {\r\n        return _.map(this.props.options, (flatSelectOption: IFlatSelectOptionProps, index: number) => {\r\n            flatSelectOption.selected =\r\n                this.props.selectedOptionId && this.props.selectedOptionId === flatSelectOption.id;\r\n            flatSelectOption.onClick = (option: IFlatSelectOptionProps) => this.handleOnOptionClick(option);\r\n\r\n            return <FlatSelectOption key={index} {...flatSelectOption} />;\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const classes: string = classNames(\r\n            'flat-select',\r\n            {\r\n                'mod-btn-group': this.props.group,\r\n                'mod-option-picker': this.props.optionPicker,\r\n            },\r\n            this.props.classes\r\n        );\r\n\r\n        return <div className={classes}>{this.getOptions()}</div>;\r\n    }\r\n}\r\n","import * as classNames from 'classnames';\r\nimport * as React from 'react';\r\nimport {Content, IContentProps} from '../content/Content';\r\nimport {ITooltipProps, Tooltip} from '../tooltip/Tooltip';\r\n\r\nexport interface IFlatSelectOptionProps {\r\n    id: string;\r\n    option: IContentProps;\r\n    classes?: string[];\r\n    prepend?: IContentProps;\r\n    append?: IContentProps;\r\n    tooltip?: ITooltipProps;\r\n    selected?: boolean;\r\n    onClick?: (option: IFlatSelectOptionProps) => void;\r\n}\r\n\r\nexport class FlatSelectOption extends React.Component<IFlatSelectOptionProps, any> {\r\n    static defaultProps: Partial<IFlatSelectOptionProps> = {\r\n        selected: false,\r\n    };\r\n\r\n    private onClick() {\r\n        if (this.props.onClick) {\r\n            this.props.onClick(this.props);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const classes: string = classNames(\r\n            'flat-select-option',\r\n            {\r\n                selectable: !this.props.selected,\r\n            },\r\n            this.props.classes\r\n        );\r\n\r\n        return (\r\n            <a className={classes} onClick={() => this.onClick()}>\r\n                <Tooltip {...this.props.tooltip}>\r\n                    {this.props.prepend ? <Content {...this.props.prepend} /> : null}\r\n                    {<Content {...this.props.option} />}\r\n                    {this.props.append ? <Content {...this.props.append} /> : null}\r\n                </Tooltip>\r\n            </a>\r\n        );\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport * as _ from 'underscore';\r\nimport {IReactVaporState} from '../../ReactVapor';\r\nimport {IDispatch, ReduxUtils} from '../../utils/ReduxUtils';\r\nimport {\r\n    FlatSelect,\r\n    IFlatSelectDispatchProps,\r\n    IFlatSelectOwnProps,\r\n    IFlatSelectProps,\r\n    IFlatSelectStateProps,\r\n} from './FlatSelect';\r\nimport {addFlatSelect, removeFlatSelect, selectFlatSelect} from './FlatSelectActions';\r\nimport {IFlatSelectOptionProps} from './FlatSelectOption';\r\nimport {FlatSelectSelectors} from './FlatSelectSelectors';\r\n\r\nconst mapStateToProps = (state: IReactVaporState, ownProps: IFlatSelectOwnProps): IFlatSelectStateProps => {\r\n    return {\r\n        selectedOptionId: FlatSelectSelectors.getSelectedOptionId(state, ownProps),\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: IDispatch, ownProps: IFlatSelectOwnProps): IFlatSelectDispatchProps => ({\r\n    onRender: () =>\r\n        dispatch(\r\n            addFlatSelect(\r\n                ownProps.id,\r\n                ownProps.defaultSelectedOptionId || (ownProps.options.length && ownProps.options[0].id)\r\n            )\r\n        ),\r\n    onDestroy: () => dispatch(removeFlatSelect(ownProps.id)),\r\n    onOptionClick: (selected: IFlatSelectOptionProps) => dispatch(selectFlatSelect(ownProps.id, selected.id)),\r\n});\r\n\r\nexport const FlatSelectConnected: React.ComponentClass<IFlatSelectProps> = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps,\r\n    ReduxUtils.mergeProps\r\n)(FlatSelect);\r\n"],"sourceRoot":""}