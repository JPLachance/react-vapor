{"version":3,"sources":["webpack:///./src/components/collapsible/examples/CollapsibleExamples.tsx?34fc","webpack:///./src/components/button/Button.tsx?06fe","webpack:///./src/components/section/Section.tsx?b7b7","webpack:///./src/components/collapsible/CollapsibleConnected.tsx?6a25","webpack:///./src/components/collapsible/styles/CollapsibleContainer.scss?43ac","webpack:///./src/components/collapsible/styles/CollapsibleInfoBox.scss?56f2","webpack:///./src/components/collapsible/CollapsibleContainer.tsx?481c","webpack:///./src/components/collapsible/CollapsibleContainerConnected.tsx?df64","webpack:///./src/components/collapsible/CollapsibleInfoBox.tsx?4099","webpack:///./src/components/collapsible/styles/CollapsibleContainer.scss?1ffc","webpack:///./src/components/collapsible/styles/CollapsibleInfoBox.scss?76b4"],"names":["CollapsibleExamples","title","level","id","className","headerContent","sectionAdditionalContent","style","position","top","marginLeft","isSection","sectionAdditionalContentCondition","Date","getMinutes","informationUrl","informationTooltip","placement","expandedOnMount","enabled","small","name","onClick","collapsibleState","getState","collapsibles","dispatch","expanded","ButtonPropsToOmit","this","props","getTemplate","buttonClass","buttonElement","buttonAttrs","disabled","link","target","rel","href","children","tooltip","tooltipPlacement","getClasses","primary","classes","render","defaultProps","Section","description","mods","titleProps","H","CollapsibleConnected","state","ownProps","onMount","onUnmount","onToggleExpandedState","currentExpandedState","mergeProps","exports","module","push","i","locals","getHeader","headerClasses","collapsibleHeaderClassName","getCollapsibleHeaderIcon","contentClasses","withoutContentPadding","collapsibleBodyClassName","toggleIconClassName","withBorders","getSvgClass","tooltipProps","svgProps","svgName","svgClass","collapsibleHeaderIcon","url","svg","CollapsibleContainerConnected","undefined","getAdditionalInfoClasses","sectionAdditionalContentClasses","hidden","content","options","transform","update","hot","accept","newContent","a","b","key","idx","Error","dispose"],"mappings":"8FAAA,2IAWaA,EAA+C,WAAM,OAC9D,gBAAC,IAAO,CAACC,MAAM,wBACX,gBAAC,IAAO,CAACC,MAAO,EAAGD,MAAM,uBACrB,gBAAC,IAAoB,CACjBE,GAAG,wBACHC,UAAU,WACVC,cAAe,sBAAID,UAAU,MAAI,uBAAwB,wBAKjE,gBAAC,IAAO,CAACF,MAAO,EAAGD,MAAM,0BACrB,gBAAC,IAAO,CAACC,MAAO,EAAGD,MAAM,iCACrB,gBAAC,IAAkB,CAACE,GAAG,iCAAiCF,MAAM,2CAAyC,kDAI3G,gBAAC,IAAO,CAACC,MAAO,EAAGD,MAAM,oDACrB,gBAAC,IAAkB,CACfE,GAAG,iCACHF,MAAM,YACNK,yBACI,wBAAMC,MAAO,CAACC,SAAU,WAAYC,IAAK,MAAOC,WAAY,SAAO,qBAEvEC,WAAS,mCAKjB,gBAAC,IAAO,CACJT,MAAO,EACPD,MAAM,oIAGN,gBAAC,IAAkB,CACfE,GAAG,iCACHF,MAAM,YACNK,yBACI,wBAAMC,MAAO,CAACC,SAAU,WAAYC,IAAK,MAAOC,WAAY,SAAO,qBAEvEE,kCAAmC,WAAM,SAAE,IAAIC,MAAOC,aAAe,IACrEH,WAAS,oCAMrB,gBAAC,IAAO,CAACT,MAAO,EAAGD,MAAM,0BACrB,gBAAC,IAAO,CAACC,MAAO,EAAGD,MAAM,2CACrB,gBAAC,IAA6B,CAC1BE,GAAG,kCACHF,MAAM,yCACNc,eAAe,gCACfC,mBAAoB,CAChBf,MACI,4FACJgB,UAAW,OAEfC,iBAAe,+BAKvB,gBAAC,IAAO,CAAChB,MAAO,EAAGD,MAAM,+CACrB,gBAAC,IAA6B,CAC1BE,GAAG,kCACHF,MAAM,6CACNe,mBAAoB,CAChBf,MAAO,2DACPgB,UAAW,QACd,uDAKT,gBAAC,IAAO,CAACf,MAAO,EAAGD,MAAM,kEACrB,gBAAC,IAAM,CACHkB,SAAS,EACTC,OAAO,EACPC,KAAK,mBACLC,QAAS,WACL,IAAMC,EAAmB,YAAY,IAAcC,WAAWC,aAAc,CACxEtB,GAAI,oCAER,IAAcuB,SACV,YACI,mCACCH,EAAiBI,cAKlC,gBAAC,IAA6B,CAACxB,GAAG,kCAAkCF,MAAM,wBAAsB,4C,ymBC1F1G2B,EAAoB,CAAH,oHAEvB,2B,+CAyEA,OAzE4B,OAWhB,YAAAN,QAAR,WACQO,KAAKC,MAAMR,SAAWO,KAAKC,MAAMX,SACjCU,KAAKC,MAAMR,WAInB,YAAAS,YAAA,SAAYC,GAAZ,IACQC,EADR,OAGQC,EAAc,EAAH,KACR,OAAOL,KAAKC,MAAOF,IAAkB,CACxCO,UAAWN,KAAKC,MAAMX,QACtBG,QAAS,WAAM,SAAKA,aAyBxB,OAtBIO,KAAKC,MAAMM,MACXF,EAAc,SAASA,EAAa,CAChCG,OAAQR,KAAKC,MAAMO,OACnBC,IAAK,sBACLC,KAAMV,KAAKC,MAAMM,OAGrBH,EACI,uBAAG7B,UAAc4B,EAAW,kBAAsBE,GAC7CL,KAAKC,MAAMT,KACXQ,KAAKC,MAAMU,WAIpBP,EACI,4BAAQ7B,UAAW4B,GAAiBE,GAC/BL,KAAKC,MAAMT,KACXQ,KAAKC,MAAMU,UAKhB,UAAUX,KAAKC,MAAMW,SAIzB,EAHA,gBAAC,IAAO,CAACxC,MAAO4B,KAAKC,MAAMW,QAASxB,UAAWY,KAAKC,MAAMY,iBAAkBtC,UAAU,iBACjF6B,IAOL,YAAAU,WAAR,WACI,OAAO,EACH,MACA,CACI,cAAed,KAAKC,MAAMc,QAC1B,YAAaf,KAAKC,MAAMV,MACxB,2BAA4BS,KAAKC,MAAMX,QACvC,oBAAqBU,KAAKC,MAAMc,UAAYf,KAAKC,MAAMX,SAE3DU,KAAKC,MAAMe,UAInB,YAAAC,OAAA,WACI,OAAOjB,KAAKE,YAAYF,KAAKc,eAtE1B,EAAAI,aAAsC,CACzC5B,SAAS,EACTE,KAAM,GACNoB,QAAS,GACTG,SAAS,EACTxB,OAAO,EACPsB,iBAAkB,QAClBL,OAAQ,IAiEhB,EAzEA,CAA4B,c,oSCFfW,EAAkD,SAAC,G,IAC5DR,EAAA,EAAAA,SACAvC,EAAA,EAAAA,MACAgD,EAAA,EAAAA,YACA7C,EAAA,EAAAA,UACA8C,EAAA,EAAAA,KACA,IAAAhD,aAAA,IAAQ,EAAR,IAEMiD,EAA2C,CAC7C/C,UAAW,uBACXoC,SAAUvC,GAERmD,EAAI,KAAIlD,EAAQ,GACtB,OACI,4BAAUE,UAAW,EAAWA,EAAW8C,EAAM,SAAShD,EAAK,qCAC1DD,GAAS,gBAACmD,EAAC,KAAKD,IAChBF,GAAe,qBAAG7C,UAAU,eAAe6C,GAC3CT,K,iCC7Bb,8EA8Baa,EAA+D,aAhBpD,SAACC,EAAyBC,GAC9C,IAAMhC,EAAmB,oBAAU+B,EAAM7B,aAAc,CAACtB,GAAIoD,EAASpD,KACrE,OAAIoB,EACO,CAACI,SAAUJ,EAAiBI,UAGhC,CAACA,SAAU4B,EAASrC,oBAGJ,SAACQ,EAAqB6B,GAA4D,OACzGC,QAAS,WAAM,OAAA9B,EAAS,YAAe6B,EAASpD,KAAMoD,EAASrC,mBAC/DuC,UAAW,WAAM,OAAA/B,EAAS,YAAkB6B,EAASpD,MACrDuD,sBAAuB,SAACC,GACpB,OAAAjC,EAAS,YAAuB6B,EAASpD,IAAKwD,QAMlD,IAAWC,WAH6D,CAI1E,M,qBCnCFC,EAAUC,EAAOD,QAAU,EAAQ,GAAR,EAA+D,IAKlFE,KAAK,CAACD,EAAOE,EAAI,0SAA2S,KAGpUH,EAAQI,OAAS,CAChB,YAAe,0DACf,OAAU,oDACV,QAAW,wD,qBCXZJ,EAAUC,EAAOD,QAAU,EAAQ,GAAR,EAA+D,IAKlFE,KAAK,CAACD,EAAOE,EAAI,uWAAwW,KAGjYH,EAAQI,OAAS,CAChB,UAAa,sDACb,cAAiB,4D,qoBCmBlB,yE,OAuBY,EAAAC,UAAY,WAChB,IAAMC,EAAgB,EAClB,4DACA,EAAKrC,MAAMsC,4BAEf,OACI,uBAAKhE,UAAW+D,GACZ,2BAAM,EAAKrC,MAAM7B,OAChB,EAAKoE,6B,EA8BtB,OA7D0C,OACtC,YAAAvB,OAAA,W,MACUwB,EAAiB,IAAU,MAC3B,YAAkBzC,KAAKC,MAAMyC,sBAAqB,GACpD1C,KAAKC,MAAM0C,yBACX,qBAGJ,OACI,gBAAC,IAAoB,CACjBrE,GAAI0B,KAAKC,MAAM3B,GACfC,UAAW,EAAWyB,KAAKC,MAAM1B,UAAW,eAC5CC,cAAewB,KAAKqC,YACpBhD,gBAAiBW,KAAKC,MAAMZ,gBAC5BiD,cAAe,EAAW,SAAetC,KAAKC,MAAMH,SAAW,gBAAkB,YACjF8C,oBAAoB,uBACpBC,aAAW,GAEX,uBAAKtE,UAAWkE,GAAiBzC,KAAKC,MAAMU,YAkBhD,YAAAmC,YAAR,WACI,OAAO,EAAW,kBAAmB,CACjC,gBAAiB9C,KAAKC,MAAMf,eAC5B,oBAAqBc,KAAKC,MAAMf,kBAIhC,YAAAsD,yBAAR,WACI,IAAKxC,KAAKC,MAAMf,iBAAmBc,KAAKC,MAAMd,mBAC1C,OAAO,KAGX,IAAM4D,EAAe,EAAH,CAAI3D,UAAW,SAAYY,KAAKC,MAAMd,oBAClD6D,EAAW,CAACC,QAASjD,KAAKC,MAAMf,eAAiB,OAAS,OAAQgE,SAAUlD,KAAK8C,eAEjFK,EAAwBnD,KAAKC,MAAMf,eACrC,gBAAC,IAAO,CAACkE,IAAKpD,KAAKC,MAAMf,eAAgBsB,OAAO,SAASI,QAASmC,EAAcM,IAAKL,IAErF,gBAAC,IAAO,KAAKD,GACT,gBAAC,IAAG,KAAKC,KAIjB,OAAO,wBAAMzE,UAAU,yBAAyB4E,IAExD,EA7DA,CAA0C,c,iCC7B1C,sEAqBaG,EAAkF,aATvE,SACpB7B,EACAC,GAEA,IAAMhC,EAAmB,oBAAU+B,EAAM7B,aAAc,CAACtB,GAAIoD,EAASpD,KAErE,MAAO,CAACwB,SAAUJ,GAAoBA,EAAiBI,iBAKvDyD,EACA,IAAWxB,WAHgF,CAI7F,M,qaCRF,2B,+CAqCA,OArCwC,OACpC,YAAAd,OAAA,WACI,OACI,gBAAC,IAAoB,CACjB3C,GAAI0B,KAAKC,MAAM3B,GACfC,UAAW,EAAW,YAAkB,oCACxC+D,cAAc,KACdM,oBAAoB,mBACpBpE,cAAewB,KAAKqC,YACpBhD,gBAAiBW,KAAKC,MAAMZ,iBAE5B,uBAAKd,UAAW,EAAW,gBAAsB,gBAAiByB,KAAKC,MAAMU,YAKjF,YAAA0B,UAAR,WACI,OAAOrC,KAAKC,MAAMnB,UACd,uBAAKP,UAAU,YACX,sBAAIA,UAAU,oBAAoByB,KAAKC,MAAM7B,OAC5C4B,KAAKC,MAAMxB,0BACR,wBAAMF,UAAWyB,KAAKwD,4BAA6BxD,KAAKC,MAAMxB,2BAItE,uBAAKF,UAAU,eACX,gBAAC,IAAG,CAAC0E,QAAQ,OAAO1E,UAAU,8BAA8B2E,SAAS,qBACrE,sBAAI3E,UAAU,oBAAoByB,KAAKC,MAAM7B,SAKjD,YAAAoF,yBAAR,WACI,OAAO,EAAWxD,KAAKC,MAAMwD,gCAAiC,CAC1DC,OAAQ1D,KAAKC,MAAMlB,oCAAsCiB,KAAKC,MAAMlB,uCAGhF,EArCA,CAAwC,kB,oBChBxC,IAAI4E,EAAU,EAAQ,KAEA,iBAAZA,IAAsBA,EAAU,CAAC,CAAC1B,EAAOE,EAAIwB,EAAS,MAOhE,IAAIC,EAAU,CAAC,KAAM,EAErB,eAPIC,EAQJ,gBAAqBN,GAEjBO,EAAS,EAAQ,GAAR,CAAmEH,EAASC,GAEtFD,EAAQvB,SAAQH,EAAOD,QAAU2B,EAAQvB,QAG3CH,EAAO8B,IAAIC,OAAO,KAAwN,WACzO,IAAIC,EAAa,EAAQ,KAiBzB,GAfyB,iBAAfA,IAAyBA,EAAa,CAAC,CAAChC,EAAOE,EAAI8B,EAAY,OAE3D,SAASC,EAAGC,GACzB,IAAIC,EAAKC,EAAM,EAEf,IAAID,KAAOF,EAAG,CACb,IAAIC,GAAKD,EAAEE,KAASD,EAAEC,GAAM,OAAO,EACnCC,IAGD,IAAID,KAAOD,EAAGE,IAEd,OAAe,IAARA,EAVK,CAWXV,EAAQvB,OAAQ6B,EAAW7B,QAEjB,MAAM,IAAIkC,MAAM,uDAE5BR,EAAOG,MAGRhC,EAAO8B,IAAIQ,SAAQ,WAAaT,Q,oBC1CjC,IAAIH,EAAU,EAAQ,KAEA,iBAAZA,IAAsBA,EAAU,CAAC,CAAC1B,EAAOE,EAAIwB,EAAS,MAOhE,IAAIC,EAAU,CAAC,KAAM,EAErB,eAPIC,EAQJ,gBAAqBN,GAEjBO,EAAS,EAAQ,GAAR,CAAmEH,EAASC,GAEtFD,EAAQvB,SAAQH,EAAOD,QAAU2B,EAAQvB,QAG3CH,EAAO8B,IAAIC,OAAO,KAAsN,WACvO,IAAIC,EAAa,EAAQ,KAiBzB,GAfyB,iBAAfA,IAAyBA,EAAa,CAAC,CAAChC,EAAOE,EAAI8B,EAAY,OAE3D,SAASC,EAAGC,GACzB,IAAIC,EAAKC,EAAM,EAEf,IAAID,KAAOF,EAAG,CACb,IAAIC,GAAKD,EAAEE,KAASD,EAAEC,GAAM,OAAO,EACnCC,IAGD,IAAID,KAAOD,EAAGE,IAEd,OAAe,IAARA,EAVK,CAWXV,EAAQvB,OAAQ6B,EAAW7B,QAEjB,MAAM,IAAIkC,MAAM,uDAE5BR,EAAOG,MAGRhC,EAAO8B,IAAIQ,SAAQ,WAAaT","file":"assets/1013.bundle.js","sourcesContent":["import * as React from 'react';\r\nimport * as _ from 'underscore';\r\n\r\nimport {ExamplesStore} from '../../../../docs/Store';\r\nimport {Button} from '../../button/Button';\r\nimport {Section} from '../../section/Section';\r\nimport {setExpandedCollapsibleContainer} from '../CollapsibleActions';\r\nimport {CollapsibleConnected} from '../CollapsibleConnected';\r\nimport {CollapsibleContainerConnected} from '../CollapsibleContainerConnected';\r\nimport {CollapsibleInfoBox} from '../CollapsibleInfoBox';\r\n\r\nexport const CollapsibleExamples: React.FunctionComponent = () => (\r\n    <Section title=\"Collapsible Examples\">\r\n        <Section level={3} title=\"A basic collapsible\">\r\n            <CollapsibleConnected\r\n                id=\"collapsible-example-1\"\r\n                className=\"bg-white\"\r\n                headerContent={<h3 className=\"p2\">Collapsible header</h3>}\r\n            >\r\n                Collapsible content\r\n            </CollapsibleConnected>\r\n        </Section>\r\n        <Section level={2} title=\"Collapsible info boxes\">\r\n            <Section level={3} title=\"A collapsible information box\">\r\n                <CollapsibleInfoBox id=\"collapsible-info-box-example-1\" title=\"Lean more about collapsible info boxes.\">\r\n                    Some latin stuff: Lorem ipsum dolor sit amet.\r\n                </CollapsibleInfoBox>\r\n            </Section>\r\n            <Section level={3} title=\"A collapsible information box for a page section\">\r\n                <CollapsibleInfoBox\r\n                    id=\"collapsible-info-box-example-2\"\r\n                    title=\"Section A\"\r\n                    sectionAdditionalContent={\r\n                        <span style={{position: 'relative', top: '8px', marginLeft: '20px'}}>Add anything here</span>\r\n                    }\r\n                    isSection\r\n                >\r\n                    Lorem ipsum dolor sit amet.\r\n                </CollapsibleInfoBox>\r\n            </Section>\r\n            <Section\r\n                level={3}\r\n                title=\"Collapsible information box for a page section with additional information only showing if the minute is\r\n                even\"\r\n            >\r\n                <CollapsibleInfoBox\r\n                    id=\"collapsible-info-box-example-3\"\r\n                    title=\"Section A\"\r\n                    sectionAdditionalContent={\r\n                        <span style={{position: 'relative', top: '8px', marginLeft: '20px'}}>Add anything here</span>\r\n                    }\r\n                    sectionAdditionalContentCondition={() => !(new Date().getMinutes() % 2)}\r\n                    isSection\r\n                >\r\n                    Lorem ipsum dolor sit amet.\r\n                </CollapsibleInfoBox>\r\n            </Section>\r\n        </Section>\r\n        <Section level={2} title=\"Collapsible containers\">\r\n            <Section level={3} title=\"Collapsible Container expanded on mount\">\r\n                <CollapsibleContainerConnected\r\n                    id=\"collapsible-container-example-1\"\r\n                    title=\"CollapsibleContainer expanded on mount\"\r\n                    informationUrl=\"http://coveo.github.io/vapor/\"\r\n                    informationTooltip={{\r\n                        title:\r\n                            \"I display information and if you click me you'll be led to a url that was provided to me.\",\r\n                        placement: 'top',\r\n                    }}\r\n                    expandedOnMount\r\n                >\r\n                    I am expanded on mount!\r\n                </CollapsibleContainerConnected>\r\n            </Section>\r\n            <Section level={3} title=\"Collapsible Container not expanded on mount\">\r\n                <CollapsibleContainerConnected\r\n                    id=\"collapsible-container-example-2\"\r\n                    title=\"CollapsibleContainer not expanded on mount\"\r\n                    informationTooltip={{\r\n                        title: 'I display information only since no url was given to me.',\r\n                        placement: 'top',\r\n                    }}\r\n                >\r\n                    I was not expanded on mount, but now I am! Thanks!\r\n                </CollapsibleContainerConnected>\r\n            </Section>\r\n            <Section level={3} title=\"CollapsibleContainer is expandable from outside the component.\">\r\n                <Button\r\n                    enabled={true}\r\n                    small={true}\r\n                    name=\"Toggle Container\"\r\n                    onClick={() => {\r\n                        const collapsibleState = _.findWhere(ExamplesStore.getState().collapsibles, {\r\n                            id: 'collapsible-container-example-3',\r\n                        });\r\n                        ExamplesStore.dispatch(\r\n                            setExpandedCollapsibleContainer(\r\n                                'collapsible-container-example-3',\r\n                                !collapsibleState.expanded\r\n                            )\r\n                        );\r\n                    }}\r\n                />\r\n                <CollapsibleContainerConnected id=\"collapsible-container-example-3\" title=\"CollapsibleContainer\">\r\n                    You just expanded me with a button!\r\n                </CollapsibleContainerConnected>\r\n            </Section>\r\n        </Section>\r\n    </Section>\r\n);\r\n","import * as classNames from 'classnames';\r\nimport * as React from 'react';\r\nimport {keys} from 'ts-transformer-keys';\r\nimport * as _ from 'underscore';\r\n\r\nimport {IBaseActionOptions} from '../actions/Action';\r\nimport {Tooltip} from '../tooltip/Tooltip';\r\n\r\nexport interface IButtonProps extends IBaseActionOptions {\r\n    small?: boolean;\r\n    classes?: string[];\r\n}\r\n\r\nconst ButtonPropsToOmit = keys<IButtonProps>();\r\n\r\nexport class Button extends React.Component<IButtonProps & React.ButtonHTMLAttributes<HTMLButtonElement>> {\r\n    static defaultProps: Partial<IButtonProps> = {\r\n        enabled: true,\r\n        name: '',\r\n        tooltip: '',\r\n        primary: false,\r\n        small: false,\r\n        tooltipPlacement: 'right',\r\n        target: '',\r\n    };\r\n\r\n    private onClick() {\r\n        if (this.props.onClick && this.props.enabled) {\r\n            this.props.onClick();\r\n        }\r\n    }\r\n\r\n    getTemplate(buttonClass: string): JSX.Element {\r\n        let buttonElement: JSX.Element;\r\n\r\n        let buttonAttrs = {\r\n            ..._.omit(this.props, ButtonPropsToOmit),\r\n            disabled: !this.props.enabled,\r\n            onClick: () => this.onClick(),\r\n        };\r\n\r\n        if (this.props.link) {\r\n            buttonAttrs = _.extend(buttonAttrs, {\r\n                target: this.props.target,\r\n                rel: 'noopener noreferrer',\r\n                href: this.props.link,\r\n            });\r\n\r\n            buttonElement = (\r\n                <a className={`${buttonClass} btn-container`} {...buttonAttrs}>\r\n                    {this.props.name}\r\n                    {this.props.children}\r\n                </a>\r\n            );\r\n        } else {\r\n            buttonElement = (\r\n                <button className={buttonClass} {...buttonAttrs}>\r\n                    {this.props.name}\r\n                    {this.props.children}\r\n                </button>\r\n            );\r\n        }\r\n\r\n        return !_.isEmpty(this.props.tooltip) ? (\r\n            <Tooltip title={this.props.tooltip} placement={this.props.tooltipPlacement} className=\"btn-container\">\r\n                {buttonElement}\r\n            </Tooltip>\r\n        ) : (\r\n            buttonElement\r\n        );\r\n    }\r\n\r\n    private getClasses() {\r\n        return classNames(\r\n            'btn',\r\n            {\r\n                'mod-primary': this.props.primary,\r\n                'mod-small': this.props.small,\r\n                'state-disabled disabled': !this.props.enabled,\r\n                'text-medium-grey': !this.props.primary && !this.props.enabled,\r\n            },\r\n            this.props.classes\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return this.getTemplate(this.getClasses());\r\n    }\r\n}\r\n","import * as classNames from 'classnames';\nimport * as React from 'react';\n\ntype SectionMods = 'mod-header-padding' | 'mod-form-top-bottom-padding' | 'material-card';\n\nexport interface ISectionProps {\n    title?: string;\n    description?: React.ReactNode;\n    className?: string;\n    mods?: SectionMods | SectionMods[];\n    level?: 1 | 2 | 3;\n}\n\nexport const Section: React.FunctionComponent<ISectionProps> = ({\n    children,\n    title,\n    description,\n    className,\n    mods,\n    level = 1,\n}) => {\n    const titleProps: React.HTMLProps<HTMLElement> = {\n        className: 'text-medium-blue mb1',\n        children: title,\n    };\n    const H = `h${level + 1}`;\n    return (\n        <fieldset className={classNames(className, mods, `level-${level} form-group mod-padding-children`)}>\n            {title && <H {...titleProps} />}\n            {description && <p className=\"description\">{description}</p>}\n            {children}\n        </fieldset>\n    );\n};\n","import * as React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {findWhere} from 'underscore';\r\n\r\nimport {IReactVaporState} from '../../ReactVapor';\r\nimport {IDispatch, ReduxUtils} from '../../utils/ReduxUtils';\r\nimport {\r\n    Collapsible,\r\n    CollapsibleDispatchProps,\r\n    CollapsibleOwnProps,\r\n    CollapsibleProps,\r\n    CollapsibleStateProps,\r\n} from './Collapsible';\r\nimport {addCollapsible, removeCollapsible, setCollapsibleExpanded} from './CollapsibleActions';\r\n\r\nconst mapStateToProps = (state: IReactVaporState, ownProps: CollapsibleOwnProps): CollapsibleStateProps => {\r\n    const collapsibleState = findWhere(state.collapsibles, {id: ownProps.id});\r\n    if (collapsibleState) {\r\n        return {expanded: collapsibleState.expanded};\r\n    }\r\n\r\n    return {expanded: ownProps.expandedOnMount};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: IDispatch, ownProps: CollapsibleOwnProps): CollapsibleDispatchProps => ({\r\n    onMount: () => dispatch(addCollapsible(ownProps.id, !!ownProps.expandedOnMount)),\r\n    onUnmount: () => dispatch(removeCollapsible(ownProps.id)),\r\n    onToggleExpandedState: (currentExpandedState: boolean) =>\r\n        dispatch(setCollapsibleExpanded(ownProps.id, !currentExpandedState)),\r\n});\r\n\r\nexport const CollapsibleConnected: React.ComponentClass<CollapsibleProps> = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps,\r\n    ReduxUtils.mergeProps\r\n)(Collapsible);\r\n","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/* ----------- Deprecated Palette ----------- */\\n.CollapsibleContainer-collapsible-3Xnefm3nu7QJpdNNBcOF9i {\\n  margin-top: -1px; }\\n\\n.CollapsibleContainer-header-hsM-1Omgb-DsES_qBzjTp {\\n  min-height: 50px; }\\n\\n.CollapsibleContainer-content-18SAr6ipBZGJCaW7ymVKtT {\\n  padding: 20px 40px; }\\n\", \"\"]);\n\n// exports\nexports.locals = {\n\t\"collapsible\": \"CollapsibleContainer-collapsible-3Xnefm3nu7QJpdNNBcOF9i\",\n\t\"header\": \"CollapsibleContainer-header-hsM-1Omgb-DsES_qBzjTp\",\n\t\"content\": \"CollapsibleContainer-content-18SAr6ipBZGJCaW7ymVKtT\"\n};","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/* ----------- Deprecated Palette ----------- */\\n.CollapsibleInfoBox-container-2AVLcrwnfIhiV96yxLJfIb {\\n  transition: background-color 150ms ease-in-out; }\\n  .CollapsibleInfoBox-container-2AVLcrwnfIhiV96yxLJfIb:hover {\\n    background-color: #f1f3f4; }\\n\\n.CollapsibleInfoBox-alignWithIcon-3NwHWqKdQE7Gc1n9v4DLzL {\\n  margin-left: calc(1rem + 20px); }\\n\", \"\"]);\n\n// exports\nexports.locals = {\n\t\"container\": \"CollapsibleInfoBox-container-2AVLcrwnfIhiV96yxLJfIb\",\n\t\"alignWithIcon\": \"CollapsibleInfoBox-alignWithIcon-3NwHWqKdQE7Gc1n9v4DLzL\"\n};","import * as classNames from 'classnames';\r\nimport * as React from 'react';\r\n\r\nimport {IClassName} from '../../utils/ClassNameUtils';\r\nimport {JSXRenderable} from '../../utils/JSXUtils';\r\nimport {LinkSvg} from '../svg/LinkSvg';\r\nimport {Svg} from '../svg/Svg';\r\nimport {ITooltipProps, Tooltip} from '../tooltip/Tooltip';\r\nimport {CollapsibleConnected} from './CollapsibleConnected';\r\nimport * as styles from './styles/CollapsibleContainer.scss';\r\n\r\nexport interface ICollapsibleContainerOwnProps {\r\n    id: string;\r\n    title: JSXRenderable;\r\n    expandedOnMount?: boolean;\r\n    informationUrl?: string;\r\n    informationTooltip?: ITooltipProps;\r\n    className?: IClassName;\r\n    collapsibleHeaderClassName?: IClassName;\r\n    collapsibleBodyClassName?: IClassName;\r\n    withoutContentPadding?: boolean;\r\n}\r\n\r\nexport interface ICollapsibleContainerStateProps {\r\n    expanded?: boolean;\r\n}\r\n\r\nexport interface ICollapsibleContainerProps extends ICollapsibleContainerOwnProps, ICollapsibleContainerStateProps {}\r\n\r\nexport class CollapsibleContainer extends React.Component<ICollapsibleContainerProps> {\r\n    render() {\r\n        const contentClasses = classNames(\r\n            {[styles.content]: !this.props.withoutContentPadding},\r\n            this.props.collapsibleBodyClassName,\r\n            'mod-border-bottom'\r\n        );\r\n\r\n        return (\r\n            <CollapsibleConnected\r\n                id={this.props.id}\r\n                className={classNames(this.props.className, styles.collapsible)}\r\n                headerContent={this.getHeader()}\r\n                expandedOnMount={this.props.expandedOnMount}\r\n                headerClasses={classNames(styles.header, this.props.expanded ? 'bg-light-grey' : 'bg-white')}\r\n                toggleIconClassName=\"fill-medium-blue mr4\"\r\n                withBorders\r\n            >\r\n                <div className={contentClasses}>{this.props.children}</div>\r\n            </CollapsibleConnected>\r\n        );\r\n    }\r\n\r\n    private getHeader = (): React.ReactNode => {\r\n        const headerClasses = classNames(\r\n            'inline-flex flex-center text-medium-blue caps p2 bold ml3',\r\n            this.props.collapsibleHeaderClassName\r\n        );\r\n        return (\r\n            <div className={headerClasses}>\r\n                <div>{this.props.title}</div>\r\n                {this.getCollapsibleHeaderIcon()}\r\n            </div>\r\n        );\r\n    };\r\n\r\n    private getSvgClass(): string {\r\n        return classNames('icon mod-lg ml1', {\r\n            'fill-orange': !!this.props.informationUrl,\r\n            'fill-medium-grey': !this.props.informationUrl,\r\n        });\r\n    }\r\n\r\n    private getCollapsibleHeaderIcon(): JSX.Element {\r\n        if (!this.props.informationUrl && !this.props.informationTooltip) {\r\n            return null;\r\n        }\r\n\r\n        const tooltipProps = {placement: 'right', ...this.props.informationTooltip};\r\n        const svgProps = {svgName: this.props.informationUrl ? 'help' : 'info', svgClass: this.getSvgClass()};\r\n\r\n        const collapsibleHeaderIcon = this.props.informationUrl ? (\r\n            <LinkSvg url={this.props.informationUrl} target=\"_blank\" tooltip={tooltipProps} svg={svgProps} />\r\n        ) : (\r\n            <Tooltip {...tooltipProps}>\r\n                <Svg {...svgProps} />\r\n            </Tooltip>\r\n        );\r\n\r\n        return <span className=\"round-contextual-help\">{collapsibleHeaderIcon}</span>;\r\n    }\r\n}\r\n","import {connect} from 'react-redux';\r\nimport {findWhere} from 'underscore';\r\n\r\nimport {IReactVaporState} from '../../ReactVapor';\r\nimport {ReduxUtils} from '../../utils/ReduxUtils';\r\nimport {\r\n    CollapsibleContainer,\r\n    ICollapsibleContainerOwnProps,\r\n    ICollapsibleContainerProps,\r\n    ICollapsibleContainerStateProps,\r\n} from './CollapsibleContainer';\r\n\r\nconst mapStateToProps = (\r\n    state: IReactVaporState,\r\n    ownProps: ICollapsibleContainerOwnProps\r\n): ICollapsibleContainerStateProps => {\r\n    const collapsibleState = findWhere(state.collapsibles, {id: ownProps.id});\r\n\r\n    return {expanded: collapsibleState && collapsibleState.expanded};\r\n};\r\n\r\nexport const CollapsibleContainerConnected: React.ComponentClass<ICollapsibleContainerProps> = connect(\r\n    mapStateToProps,\r\n    undefined,\r\n    ReduxUtils.mergeProps\r\n)(CollapsibleContainer);\r\n","import * as classNames from 'classnames';\r\nimport * as React from 'react';\r\n\r\nimport {Svg} from '../svg/Svg';\r\nimport {CollapsibleConnected} from './CollapsibleConnected';\r\nimport * as styles from './styles/CollapsibleInfoBox.scss';\r\n\r\nexport interface CollapsibleInfoBoxProps {\r\n    id: string;\r\n    title: string;\r\n    expandedOnMount?: boolean;\r\n    isSection?: boolean;\r\n    sectionAdditionalContent?: React.ReactNode;\r\n    sectionAdditionalContentCondition?: () => boolean;\r\n    sectionAdditionalContentClasses?: string;\r\n}\r\n\r\nexport class CollapsibleInfoBox extends React.PureComponent<CollapsibleInfoBoxProps> {\r\n    render() {\r\n        return (\r\n            <CollapsibleConnected\r\n                id={this.props.id}\r\n                className={classNames(styles.container, 'text-grey-9 mod-rounded-border-2')}\r\n                headerClasses=\"p1\"\r\n                toggleIconClassName=\"fill-medium-blue\"\r\n                headerContent={this.getHeader()}\r\n                expandedOnMount={this.props.expandedOnMount}\r\n            >\r\n                <div className={classNames(styles.alignWithIcon, 'px1 pb1 mr3')}>{this.props.children}</div>\r\n            </CollapsibleConnected>\r\n        );\r\n    }\r\n\r\n    private getHeader(): React.ReactNode {\r\n        return this.props.isSection ? (\r\n            <div className=\"flex pl1\">\r\n                <h2 className=\"text-medium-blue\">{this.props.title}</h2>\r\n                {this.props.sectionAdditionalContent && (\r\n                    <span className={this.getAdditionalInfoClasses()}>{this.props.sectionAdditionalContent}</span>\r\n                )}\r\n            </div>\r\n        ) : (\r\n            <div className=\"inline-flex\">\r\n                <Svg svgName=\"info\" className=\"icon mod-20 mx1 js-info-svg\" svgClass=\"fill-medium-grey\" />\r\n                <h3 className=\"text-medium-blue\">{this.props.title}</h3>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private getAdditionalInfoClasses() {\r\n        return classNames(this.props.sectionAdditionalContentClasses, {\r\n            hidden: this.props.sectionAdditionalContentCondition && !this.props.sectionAdditionalContentCondition(),\r\n        });\r\n    }\r\n}\r\n","\nvar content = require(\"!!../../../../node_modules/typings-for-css-modules-loader/lib/index.js??ref--7-1!../../../../node_modules/postcss-loader/src/index.js!../../../../node_modules/sass-loader/lib/loader.js!./CollapsibleContainer.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../node_modules/typings-for-css-modules-loader/lib/index.js??ref--7-1!../../../../node_modules/postcss-loader/src/index.js!../../../../node_modules/sass-loader/lib/loader.js!./CollapsibleContainer.scss\", function() {\n\t\tvar newContent = require(\"!!../../../../node_modules/typings-for-css-modules-loader/lib/index.js??ref--7-1!../../../../node_modules/postcss-loader/src/index.js!../../../../node_modules/sass-loader/lib/loader.js!./CollapsibleContainer.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","\nvar content = require(\"!!../../../../node_modules/typings-for-css-modules-loader/lib/index.js??ref--7-1!../../../../node_modules/postcss-loader/src/index.js!../../../../node_modules/sass-loader/lib/loader.js!./CollapsibleInfoBox.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../node_modules/typings-for-css-modules-loader/lib/index.js??ref--7-1!../../../../node_modules/postcss-loader/src/index.js!../../../../node_modules/sass-loader/lib/loader.js!./CollapsibleInfoBox.scss\", function() {\n\t\tvar newContent = require(\"!!../../../../node_modules/typings-for-css-modules-loader/lib/index.js??ref--7-1!../../../../node_modules/postcss-loader/src/index.js!../../../../node_modules/sass-loader/lib/loader.js!./CollapsibleInfoBox.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}"],"sourceRoot":""}