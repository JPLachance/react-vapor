{"version":3,"sources":["webpack:///./src/components/validation/ValidationSelectors.ts?9b15","webpack:///./src/components/validation/hoc/WithDirtySaveButtonHOC.tsx?d9e2","webpack:///./src/components/button/examples/ButtonExamples.tsx?1f81","webpack:///./src/components/button/Button.tsx?06fe","webpack:///./src/components/section/Section.tsx?b7b7","webpack:///./src/components/input/Input.tsx?1d15","webpack:///./src/utils/PropsToOmitUtils.ts?e979","webpack:///./src/components/input/Label.tsx?dafb","webpack:///./src/components/checkbox/Checkbox.tsx?f70c","webpack:///./src/components/input/InputDescription.tsx?8553","webpack:///./src/components/input/LabeledInput.tsx?95a1","webpack:///./src/components/checkbox/CheckboxSelectors.ts?36c9","webpack:///./src/components/checkbox/CheckboxConnected.ts?a6f3","webpack:///./src/components/checkbox/GroupableCheckboxConnected.tsx?54dd","webpack:///./src/components/checkbox/index.ts?72d3"],"names":["getErrors","id","state","validation","error","filter","value","getWarnings","warning","getIsDirty","isDirty","getAnyError","ids","reduce","all","concat","getAnyWarning","getAnyDirty","dirty","ValidationSelectors","isInError","length","isInWarning","mapStateToProps","ownProps","validationIds","errors","warnings","Component","SaveButton","Button","enhance","skipDirty","errorMessage","e","warningMessage","w","dirtyMessage","d","enabled","tooltip","hasErrors","hasWarnings","canSaveWhenDirty","generatedTooltip","map","props","render","className","primary","name","small","link","target","onClick","alert","tooltipPlacement","classes","Svg","svgName","style","background","color","border","borderRadius","Section","level","title","DirtyCheckboxesForSaveButton","description","dispatch","setDirty","ValidationActions","setWarning","setError","LabeledInput","label","handleOnClick","checked","clearSides","Label","ButtonPropsToOmit","this","getTemplate","buttonClass","buttonElement","buttonAttrs","disabled","rel","href","children","placement","getClasses","defaultProps","mods","titleProps","H","validatedInputTypes","inputPropsToOmit","valid","componentWillMount","onRender","validOnMount","validateOnMount","validate","defaultValue","disabledOnMount","componentWillUnmount","onDestroy","componentDidUpdate","prevProps","innerInput","reset","getInnerValue","setState","handleBlur","onBlur","handleChange","onChange","validOnChange","validateOnChange","handleClick","handleKeyUp","event","onKeyUp","getLabel","labelProps","labelTitle","key","htmlFor","type","innerInputClasses","invalid","inputElements","ref","min","minimum","max","maximum","input","disabledTooltip","Right","required","internalComponentPropsToOmit","PropsToOmitUtils","internal","validMessage","invalidMessage","attributes","componentDidMount","updateIndeterminate","getElementsByTagName","indeterminate","preventDefault","stopPropagation","readOnly","InputDescription","message","helpText","headerClassName","optionalInformation","header","information","Top","svgClass","CheckboxSelectors","getIsSelected","checkboxes","checkbox","CheckboxConnected","defaultChecked","mergeProps","GroupableCheckboxConnected","groupableCheckboxesState","groupableCheckboxes","parentId","isParent","parent","defaultDisabled","nbChecked","total"],"mappings":"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","file":"assets/1008.bundle.js","sourcesContent":["import {IReactVaporState} from '../../ReactVapor';\nimport {ValidationState} from './ValidationState';\n\nconst getErrors = (id: string) => (state: IReactVaporState) =>\n    state.validation?.[id]?.error?.filter((error) => !!error.value) || [];\nconst getWarnings = (id: string) => (state: IReactVaporState) =>\n    state.validation?.[id]?.warning?.filter((warning) => !!warning.value) || [];\nconst getIsDirty = (id: string) => (state: IReactVaporState) => state.validation?.[id]?.isDirty || [];\n\nconst getAnyError = (ids: string[]) => (state: IReactVaporState) =>\n    ids\n        .reduce((all, id) => all.concat(getErrors(id)(state)), [] as ValidationState['error'])\n        .filter((error) => !!error.value);\nconst getAnyWarning = (ids: string[]) => (state: IReactVaporState) =>\n    ids\n        .reduce((all, id) => all.concat(getWarnings(id)(state)), [] as ValidationState['warning'])\n        .filter((warning) => !!warning.value);\nconst getAnyDirty = (ids: string[]) => (state: IReactVaporState) =>\n    ids\n        .reduce((all, id) => all.concat(getIsDirty(id)(state)), [] as ValidationState['isDirty'])\n        .filter((dirty) => dirty.value);\n\nconst isInError = (ids: string[]) => (state: IReactVaporState) => getAnyError(ids)(state).length > 0;\nconst isInWarning = (ids: string[]) => (state: IReactVaporState) => getAnyWarning(ids)(state).length > 0;\nconst isDirty = (ids: string[]) => (state: IReactVaporState) => getAnyDirty(ids)(state).length > 0;\n\nexport const ValidationSelectors = {\n    getErrors,\n    getWarnings,\n    getIsDirty,\n    getAnyError,\n    getAnyWarning,\n    getAnyDirty,\n    isInError,\n    isInWarning,\n    isDirty,\n};\n","import * as React from 'react';\nimport {connect} from 'react-redux';\nimport {IReactVaporState} from '../../../ReactVapor';\nimport {IButtonProps} from '../../button/Button';\nimport {ValidationSelectors} from '../ValidationSelectors';\nimport {InferableComponentEnhancer} from './connectHOC';\n\nexport interface IWithDirtySaveButtonHOCProps {\n    validationIds: string[];\n    skipDirty?: boolean;\n    errorMessage?: (errors: string[]) => string | undefined;\n    warningMessage?: (warnings: string[]) => string | undefined;\n    dirtyMessage?: (dirty: boolean[]) => string | undefined;\n}\n\nconst mapStateToProps = (state: IReactVaporState, ownProps: IWithDirtySaveButtonHOCProps) => ({\n    dirty: ValidationSelectors.getAnyDirty(ownProps.validationIds)(state),\n    errors: ValidationSelectors.getAnyError(ownProps.validationIds)(state),\n    warnings: ValidationSelectors.getAnyWarning(ownProps.validationIds)(state),\n});\n\nexport const withDirtySaveButtonHOC = <T extends IButtonProps>(Component: React.ComponentType<T>) => {\n    type StateProps = ReturnType<typeof mapStateToProps>;\n    const WrappedButton = ({\n        dirty,\n        errors,\n        warnings,\n        validationIds,\n        skipDirty,\n        errorMessage = (e) => `Cannot save because of the following errors: ${e.join('\\n')}`,\n        warningMessage = (w) => `Can save but with warnings: ${w.join('\\n')}`,\n        dirtyMessage = (d) => d.length === 0 && `Cannot save when there are no changes`,\n        enabled,\n        tooltip,\n        ...props\n    }: T & IWithDirtySaveButtonHOCProps & StateProps) => {\n        const hasErrors = errors.length > 0;\n        const hasWarnings = warnings.length > 0;\n        const isDirty = dirty.length > 0;\n        const canSaveWhenDirty = skipDirty ? true : isDirty;\n        const generatedTooltip = hasErrors\n            ? errorMessage(errors.map((error) => error.value))\n            : hasWarnings && canSaveWhenDirty\n            ? warningMessage(warnings.map((warning) => warning.value))\n            : dirtyMessage(dirty.map((d) => d.value));\n\n        return (\n            <Component\n                {...((props as unknown) as T)}\n                enabled={canSaveWhenDirty && !hasErrors && enabled}\n                tooltip={generatedTooltip || tooltip}\n            />\n        );\n    };\n    const enhance = connect(mapStateToProps) as InferableComponentEnhancer<StateProps>;\n    return enhance(WrappedButton);\n};\n","import * as React from 'react';\nimport {connect} from 'react-redux';\nimport {IDispatch} from '../../../utils';\nimport {CheckboxConnected} from '../../checkbox';\nimport {Label} from '../../input/Label';\nimport {LabeledInput} from '../../input/LabeledInput';\nimport {Section} from '../../section/Section';\nimport {Svg} from '../../svg/Svg';\nimport {withDirtySaveButtonHOC} from '../../validation/hoc/WithDirtySaveButtonHOC';\nimport {ValidationActions} from '../../validation/ValidationActions';\nimport {Button} from '../Button';\n\n// start-print\n\nconst SaveButton = withDirtySaveButtonHOC(Button);\n\nexport class ButtonExamples extends React.Component<any, any> {\n    static description = 'Buttons communicate actions, and, when clicked, initialize those actions.';\n    render() {\n        return (\n            <div className=\"mt2\">\n                <div className=\"form-group\">\n                    <label className=\"form-control-label\">Default Button</label>\n                    <div className=\"form-control\">\n                        <Button enabled={true} />\n                    </div>\n                </div>\n                <div className=\"form-group\">\n                    <label className=\"form-control-label\">Primary Button</label>\n                    <div className=\"form-control\">\n                        <Button enabled={true} primary={true} name=\"Primary Button\" />\n                    </div>\n                </div>\n                <div className=\"form-group\">\n                    <label className=\"form-control-label\">Small Button</label>\n                    <div className=\"form-control\">\n                        <Button enabled={true} small={true} name=\"Small Button\" />\n                    </div>\n                </div>\n                <div className=\"form-group\">\n                    <label className=\"form-control-label\">Link Button</label>\n                    <div className=\"form-control\">\n                        <Button enabled={true} name=\"Link Button\" link=\"http://perdu.com/\" target=\"_blank\" />\n                    </div>\n                </div>\n                <div className=\"form-group\">\n                    <label className=\"form-control-label\">Button with a callback on click</label>\n                    <div className=\"form-control\">\n                        <Button enabled={true} name=\"Button click me!\" onClick={() => alert('Hello')} />\n                    </div>\n                </div>\n                <div className=\"form-group\">\n                    <label className=\"form-control-label\">Button with tooltip</label>\n                    <div className=\"form-control\">\n                        <Button enabled={true} name=\"Button with tooltip\" tooltip=\"Tooltip test\" />\n                    </div>\n                </div>\n                <div className=\"form-group\">\n                    <label className=\"form-control-label\">Button with tooltip and placement</label>\n                    <div className=\"form-control\">\n                        <Button\n                            enabled={true}\n                            name=\"Button with tooltip top\"\n                            tooltip=\"Tooltip test\"\n                            tooltipPlacement=\"top\"\n                        />\n                    </div>\n                </div>\n                <div className=\"form-group\">\n                    <label className=\"form-control-label\">Button link with tooltip</label>\n                    <div className=\"form-control\">\n                        <Button\n                            enabled={true}\n                            name=\"Button link with tooltip\"\n                            link=\"http://perdu.com/\"\n                            target=\"_blank\"\n                            tooltip=\"Tooltip test\"\n                        />\n                    </div>\n                </div>\n                <div className=\"form-group\">\n                    <label className=\"form-control-label\">Button link with a callback on click</label>\n                    <div className=\"form-control\">\n                        <Button\n                            enabled={true}\n                            name=\"Link Button click me!\"\n                            link=\"http://perdu.com/\"\n                            target=\"_blank\"\n                            onClick={() => alert('Hello')}\n                        />\n                    </div>\n                </div>\n\n                <div className=\"form-group\">\n                    <label className=\"form-control-label\">Disabled Button</label>\n                    <div className=\"form-control\">\n                        <Button enabled={false} name=\"Disabled Button\" />\n                    </div>\n                </div>\n                <div className=\"form-group\">\n                    <label className=\"form-control-label\">Disabled Primary Button</label>\n                    <div className=\"form-control\">\n                        <Button enabled={false} name=\"Disabled Button\" primary />\n                    </div>\n                </div>\n                <div className=\"form-group\">\n                    <label className=\"form-control-label\">Disabled Button with tooltip</label>\n                    <div className=\"form-control\">\n                        <Button enabled={false} name=\"Disabled Button with tooltip\" tooltip=\"Tooltip test\" />\n                    </div>\n                </div>\n                <div className=\"form-group\">\n                    <label className=\"form-control-label\">Disabled Button link</label>\n                    <div className=\"form-control\">\n                        <Button enabled={false} name=\"Disabled Button link\" link=\"http://perdu.com/\" target=\"_blank\" />\n                    </div>\n                </div>\n                <div className=\"form-group\">\n                    <label className=\"form-control-label\">Disabled Button link with tooltip</label>\n                    <div className=\"form-control\">\n                        <Button\n                            enabled={false}\n                            name=\"Disabled Button link with tooltip\"\n                            tooltip=\"Tooltip test\"\n                            link=\"http://perdu.com/\"\n                            target=\"_blank\"\n                        />\n                    </div>\n                </div>\n                <div className=\"form-group\">\n                    <label className=\"form-control-label\">Disabled Button link with tooltip placement top</label>\n                    <div className=\"form-control\">\n                        <Button\n                            enabled={false}\n                            name=\"Disabled Button link with tooltip top\"\n                            tooltip=\"Tooltip test\"\n                            tooltipPlacement=\"top\"\n                            link=\"http://perdu.com/\"\n                            target=\"_blank\"\n                        />\n                    </div>\n                </div>\n                <div className=\"form-group\">\n                    <label className=\"form-control-label\">Disabled Button link with onClick</label>\n                    <div className=\"form-control\">\n                        <Button\n                            enabled={false}\n                            name=\"Disabled Button link with onClick\"\n                            link=\"http://perdu.com/\"\n                            target=\"_blank\"\n                            onClick={() => alert('Hello')}\n                        />\n                    </div>\n                </div>\n                <div className=\"form-group\">\n                    <label className=\"form-control-label\">Button with children Svg</label>\n                    <div className=\"form-control\">\n                        <Button classes={['p1', 'full-content-y']} enabled>\n                            <Svg svgName={'add'} className=\"icon mod-2x\" />\n                        </Button>\n                    </div>\n                </div>\n                <div className=\"form-group\">\n                    <label className=\"form-control-label\">Button with children name and Svg</label>\n                    <div className=\"form-control\">\n                        <Button classes={['p1', 'full-content-y']} name={'Button'} enabled>\n                            <Svg svgName={'add'} className=\"ml1 icon mod-2x\" />\n                        </Button>\n                    </div>\n                </div>\n\n                <div className=\"form-group mb5\">\n                    <label className=\"form-control-label\">Button with custom style</label>\n                    <div className=\"form-control\">\n                        <Button\n                            enabled\n                            style={{\n                                background: 'linear-gradient(to right, blue, black)',\n                                color: 'white',\n                                border: 'none',\n                                borderRadius: 5,\n                            }}\n                        >\n                            I Rock\n                        </Button>\n                    </div>\n                </div>\n\n                <div className=\"form-group mb5\">\n                    <Section level={2} title=\"Save button with validation\">\n                        <DirtyCheckboxesForSaveButton />\n                        <SaveButton\n                            enabled\n                            name=\"Save Button\"\n                            validationIds={['inputId']}\n                            onClick={() => alert('Saving!')}\n                        ></SaveButton>\n                    </Section>\n                </div>\n            </div>\n        );\n    }\n}\n\n// stop-print\n\nconst StatefulCheckboxesForSaveButtonDisconnect: React.FunctionComponent<ReturnType<typeof mapDispatchToProps>> = ({\n    setDirty,\n    setWarning,\n    setError,\n}) => (\n    <LabeledInput label=\"Toggles to test the Save Button\">\n        <CheckboxConnected id=\"saveCheckboxDirty\" handleOnClick={(checked) => setDirty(!checked)} clearSides>\n            <Label>Click on me to set the component as dirty</Label>\n        </CheckboxConnected>\n        <CheckboxConnected\n            id=\"saveCheckboxWarning\"\n            handleOnClick={(checked) => setWarning(!checked ? 'WARNING' : '')}\n            clearSides\n        >\n            <Label>Click on me to set a warning</Label>\n        </CheckboxConnected>\n        <CheckboxConnected\n            id=\"saveCheckboxError\"\n            handleOnClick={(checked) => setError(!checked ? 'ERROR' : '')}\n            clearSides\n        >\n            <Label>Click on me to set an error</Label>\n        </CheckboxConnected>\n    </LabeledInput>\n);\n\nconst mapDispatchToProps = (dispatch: IDispatch) => ({\n    setDirty: (value: boolean) => dispatch(ValidationActions.setDirty('inputId', value)),\n    setWarning: (value: string) => dispatch(ValidationActions.setWarning('inputId', value)),\n    setError: (value: string) => dispatch(ValidationActions.setError('inputId', value)),\n});\nconst DirtyCheckboxesForSaveButton = connect(null, mapDispatchToProps)(StatefulCheckboxesForSaveButtonDisconnect);\n","import * as classNames from 'classnames';\r\nimport * as React from 'react';\r\nimport {keys} from 'ts-transformer-keys';\r\nimport * as _ from 'underscore';\r\n\r\nimport {IBaseActionOptions} from '../actions/Action';\r\nimport {Tooltip} from '../tooltip/Tooltip';\r\n\r\nexport interface IButtonProps extends IBaseActionOptions {\r\n    small?: boolean;\r\n    classes?: string[];\r\n}\r\n\r\nconst ButtonPropsToOmit = keys<IButtonProps>();\r\n\r\nexport class Button extends React.Component<IButtonProps & React.ButtonHTMLAttributes<HTMLButtonElement>> {\r\n    static defaultProps: Partial<IButtonProps> = {\r\n        enabled: true,\r\n        name: '',\r\n        tooltip: '',\r\n        primary: false,\r\n        small: false,\r\n        tooltipPlacement: 'right',\r\n        target: '',\r\n    };\r\n\r\n    private onClick() {\r\n        if (this.props.onClick && this.props.enabled) {\r\n            this.props.onClick();\r\n        }\r\n    }\r\n\r\n    getTemplate(buttonClass: string): JSX.Element {\r\n        let buttonElement: JSX.Element;\r\n\r\n        let buttonAttrs = {\r\n            ..._.omit(this.props, ButtonPropsToOmit),\r\n            disabled: !this.props.enabled,\r\n            onClick: () => this.onClick(),\r\n        };\r\n\r\n        if (this.props.link) {\r\n            buttonAttrs = _.extend(buttonAttrs, {\r\n                target: this.props.target,\r\n                rel: 'noopener noreferrer',\r\n                href: this.props.link,\r\n            });\r\n\r\n            buttonElement = (\r\n                <a className={`${buttonClass} btn-container`} {...buttonAttrs}>\r\n                    {this.props.name}\r\n                    {this.props.children}\r\n                </a>\r\n            );\r\n        } else {\r\n            buttonElement = (\r\n                <button className={buttonClass} {...buttonAttrs}>\r\n                    {this.props.name}\r\n                    {this.props.children}\r\n                </button>\r\n            );\r\n        }\r\n\r\n        return !_.isEmpty(this.props.tooltip) ? (\r\n            <Tooltip title={this.props.tooltip} placement={this.props.tooltipPlacement} className=\"btn-container\">\r\n                {buttonElement}\r\n            </Tooltip>\r\n        ) : (\r\n            buttonElement\r\n        );\r\n    }\r\n\r\n    private getClasses() {\r\n        return classNames(\r\n            'btn',\r\n            {\r\n                'mod-primary': this.props.primary,\r\n                'mod-small': this.props.small,\r\n                'state-disabled disabled': !this.props.enabled,\r\n                'text-medium-grey': !this.props.primary && !this.props.enabled,\r\n            },\r\n            this.props.classes\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return this.getTemplate(this.getClasses());\r\n    }\r\n}\r\n","import * as classNames from 'classnames';\nimport * as React from 'react';\n\ntype SectionMods = 'mod-header-padding' | 'mod-form-top-bottom-padding' | 'material-card';\n\nexport interface ISectionProps {\n    title?: string;\n    description?: React.ReactNode;\n    className?: string;\n    mods?: SectionMods | SectionMods[];\n    level?: 1 | 2 | 3;\n}\n\nexport const Section: React.FunctionComponent<ISectionProps> = ({\n    children,\n    title,\n    description,\n    className,\n    mods,\n    level = 1,\n}) => {\n    const titleProps: React.HTMLProps<HTMLElement> = {\n        className: 'text-medium-blue mb1',\n        children: title,\n    };\n    const H = `h${level + 1}`;\n    return (\n        <fieldset className={classNames(className, mods, `level-${level} form-group mod-padding-children`)}>\n            {title && <H {...titleProps} />}\n            {description && <p className=\"description\">{description}</p>}\n            {children}\n        </fieldset>\n    );\n};\n","import * as classNames from 'classnames';\r\nimport * as React from 'react';\r\nimport {keys} from 'ts-transformer-keys';\r\nimport * as _ from 'underscore';\r\nimport {contains, isUndefined, uniqueId} from 'underscore';\r\nimport {IClassName} from '../../utils/ClassNameUtils';\r\nimport {PropsToOmitUtils} from '../../utils/PropsToOmitUtils';\r\nimport {TooltipPlacement} from '../../utils/TooltipUtils';\r\nimport {Tooltip} from '../tooltip/Tooltip';\r\nimport {IInputState} from './InputReducers';\r\nimport {ILabelProps, Label} from './Label';\r\n\r\nconst validatedInputTypes: string[] = ['number', 'text', 'password'];\r\n\r\ntype IInputNativeTagOwnProps = Omit<\r\n    React.AllHTMLAttributes<HTMLInputElement>,\r\n    'defaultValue' | 'onClick' | 'onChange' | 'onBlur' | 'value'\r\n>;\r\n\r\nexport interface IInputAdditionalOwnProps {\r\n    id?: string;\r\n    classes?: IClassName;\r\n    innerInputClasses?: IClassName;\r\n    validate?: (value: any) => boolean;\r\n    labelTitle?: React.ReactNode;\r\n    labelProps?: ILabelProps;\r\n    validateOnChange?: boolean;\r\n    disabledOnMount?: boolean;\r\n    validateOnMount?: boolean;\r\n    disabledTooltip?: string;\r\n    minimum?: number /* @deprecated use min instead */;\r\n    maximum?: number /* @deprecated use max instead */;\r\n    onBlur?: (value: string) => void;\r\n    defaultValue?: string;\r\n}\r\n\r\nexport interface IInputNativeTagStateProps {\r\n    value?: string;\r\n    checked?: boolean;\r\n    disabled?: boolean;\r\n}\r\n\r\nexport interface IInputAdditionalStateProps {\r\n    valid?: boolean;\r\n    indeterminate?: boolean;\r\n}\r\n\r\nexport interface IInputStateProps extends IInputNativeTagStateProps, IInputAdditionalStateProps {}\r\n\r\nexport interface IInputDispatchProps {\r\n    onDestroy?: () => void;\r\n    onRender?: (value?: string, valid?: boolean, disabled?: boolean) => void;\r\n    onChange?: (value?: string, valid?: boolean) => void;\r\n    onClick?: (e: React.MouseEvent<HTMLElement>) => void;\r\n    changeDirtyState?: (value?: string, valid?: boolean) => void;\r\n}\r\n\r\nconst inputPropsToOmit = keys<IInputAdditionalOwnProps & IInputAdditionalStateProps & IInputDispatchProps>();\r\n\r\nexport interface IInputOwnProps extends IInputAdditionalOwnProps, IInputNativeTagOwnProps {}\r\n\r\nexport interface IInputProps extends IInputOwnProps, Partial<IInputStateProps>, Partial<IInputDispatchProps> {}\r\n\r\nexport interface IInputComponentState {\r\n    valid: boolean;\r\n}\r\n\r\nexport class Input extends React.Component<IInputProps, IInputComponentState> {\r\n    private innerInput: HTMLInputElement;\r\n\r\n    static defaultProps: Partial<IInputProps> = {\r\n        id: uniqueId('input'),\r\n        type: 'text',\r\n        valid: true,\r\n        labelTitle: '',\r\n        required: true,\r\n    };\r\n\r\n    constructor(props: IInputProps, state: IInputState) {\r\n        super(props, state);\r\n        this.state = {\r\n            valid: this.props.valid,\r\n        };\r\n    }\r\n\r\n    componentWillMount() {\r\n        if (this.props.onRender) {\r\n            // undefined validOnMount will default to true in the state\r\n            const validOnMount =\r\n                this.props.validateOnMount && this.props.validate && this.props.validate(this.props.defaultValue || '');\r\n\r\n            this.props.onRender(this.props.defaultValue, validOnMount, this.props.disabledOnMount);\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (this.props.onDestroy) {\r\n            this.props.onDestroy();\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps: IInputProps) {\r\n        if (this.props.valid !== prevProps.valid) {\r\n            this.validate();\r\n        }\r\n\r\n        if (prevProps.value !== this.props.value && this.innerInput) {\r\n            this.innerInput.value = this.props.value;\r\n        }\r\n    }\r\n\r\n    reset() {\r\n        this.innerInput.value = '';\r\n    }\r\n\r\n    getInnerValue(): string {\r\n        return (this.innerInput && this.innerInput.value) || '';\r\n    }\r\n\r\n    validate() {\r\n        this.setState({\r\n            valid: this.props.valid && !(this.props.validate && !this.props.validate(this.getInnerValue())),\r\n        });\r\n    }\r\n\r\n    private handleBlur() {\r\n        if (this.props.onBlur) {\r\n            this.props.onBlur(this.getInnerValue());\r\n        }\r\n    }\r\n\r\n    private handleChange() {\r\n        if (this.props.onChange) {\r\n            const validOnChange =\r\n                this.props.validateOnChange && this.props.validate && this.props.validate(this.getInnerValue());\r\n            this.props.onChange(this.getInnerValue(), validOnChange);\r\n        }\r\n    }\r\n\r\n    private handleClick(e: React.MouseEvent<HTMLElement>) {\r\n        if (this.props.onClick) {\r\n            this.props.onClick(e);\r\n        }\r\n    }\r\n\r\n    private handleKeyUp(event: React.KeyboardEvent<HTMLInputElement>) {\r\n        if (this.props.onKeyUp) {\r\n            this.props.onKeyUp(event);\r\n        }\r\n    }\r\n\r\n    private getLabel(): React.ReactNode {\r\n        const {labelProps, labelTitle} = this.props;\r\n        if (typeof labelTitle === 'string') {\r\n            return labelTitle || this.props.validate ? (\r\n                <Label key={this.props.id + 'label'} htmlFor={this.props.id} {...labelProps}>\r\n                    {labelTitle}\r\n                </Label>\r\n            ) : null;\r\n        } else {\r\n            return labelTitle;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const classes = classNames(\r\n            'input-wrapper validate',\r\n            {\r\n                'input-field': contains(validatedInputTypes, this.props.type),\r\n            },\r\n            this.props.classes\r\n        );\r\n        const innerInputClasses = classNames(\r\n            {\r\n                invalid: !this.state.valid && contains(validatedInputTypes, this.props.type),\r\n            },\r\n            this.props.innerInputClasses\r\n        );\r\n\r\n        const inputElements = [\r\n            <input\r\n                key={this.props.id}\r\n                id={this.props.id}\r\n                className={innerInputClasses}\r\n                defaultValue={!isUndefined(this.props.value) ? this.props.value : this.props.defaultValue}\r\n                ref={(innerInput: HTMLInputElement) => (this.innerInput = innerInput)}\r\n                onBlur={() => this.handleBlur()}\r\n                onChange={() => this.handleChange()}\r\n                onKeyUp={(event: React.KeyboardEvent<HTMLInputElement>) => this.handleKeyUp(event)}\r\n                min={this.props.minimum}\r\n                max={this.props.maximum}\r\n                {..._.omit(this.props, [...PropsToOmitUtils.input, ...inputPropsToOmit])}\r\n            />,\r\n            this.getLabel(),\r\n            this.props.children,\r\n        ];\r\n\r\n        return this.props.disabled && this.props.disabledTooltip ? (\r\n            <div className={classes} onClick={(e: React.MouseEvent<HTMLElement>) => this.handleClick(e)}>\r\n                <Tooltip title={this.props.disabledTooltip} placement={TooltipPlacement.Right}>\r\n                    {inputElements}\r\n                </Tooltip>\r\n            </div>\r\n        ) : (\r\n            <div className={classes} onClick={(e: React.MouseEvent<HTMLElement>) => this.handleClick(e)}>\r\n                {inputElements}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","const internalComponentPropsToOmit: string[] = ['children', 'dangerouslySetInnerHTML'];\r\n\r\n// We omit those props for the input native tag because those props are reserved for the Input component and\r\n// to stay compatible with the old interface\r\nconst inputTagPropsToOmit: string[] = [\r\n    ...internalComponentPropsToOmit,\r\n    'defaultValue',\r\n    'onClick',\r\n    'onChange',\r\n    'onBlur',\r\n    'value',\r\n    'valid',\r\n];\r\n\r\nexport const PropsToOmitUtils = {\r\n    internal: internalComponentPropsToOmit,\r\n    input: inputTagPropsToOmit,\r\n};\r\n","import * as classNames from 'classnames';\r\nimport * as React from 'react';\r\n\r\nexport interface ILabelProps {\r\n    type?: string;\r\n    classes?: string[];\r\n    validMessage?: string;\r\n    invalidMessage?: string;\r\n}\r\n\r\nexport class Label extends React.Component<ILabelProps & React.HTMLProps<HTMLLabelElement>, any> {\r\n    render() {\r\n        const classes = classNames(this.props.classes);\r\n        const {validMessage, invalidMessage, children, ...attributes} = this.props;\r\n        return (\r\n            <label\r\n                className={classes}\r\n                data-valid-message={validMessage}\r\n                data-invalid-message={invalidMessage}\r\n                {...attributes}\r\n            >\r\n                {children}\r\n            </label>\r\n        );\r\n    }\r\n}\r\n","import * as classNames from 'classnames';\r\nimport * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport {IInputProps, Input} from '../input/Input';\r\n\r\nexport interface ICheckboxOwnProps {\r\n    handleOnClick?: (isChecked: boolean) => void;\r\n    clearSides?: boolean;\r\n}\r\n\r\nexport interface ICheckboxStateProps {\r\n    defaultDisabled?: boolean;\r\n}\r\n\r\nexport interface ICheckboxProps extends ICheckboxOwnProps, ICheckboxStateProps, IInputProps {}\r\n\r\nexport class Checkbox extends React.Component<ICheckboxProps> {\r\n    componentDidMount() {\r\n        this.updateIndeterminate();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.updateIndeterminate();\r\n    }\r\n\r\n    private updateIndeterminate() {\r\n        const inputElements = (ReactDOM.findDOMNode(this) as Element).getElementsByTagName('input');\r\n        if (inputElements.length) {\r\n            inputElements[0].indeterminate = !!this.props.indeterminate;\r\n        }\r\n    }\r\n\r\n    private handleOnClick(e: React.MouseEvent<HTMLElement>) {\r\n        if (!this.props.disabled) {\r\n            if (this.props.onClick) {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                this.props.onClick(e);\r\n            }\r\n            if (this.props.handleOnClick) {\r\n                this.props.handleOnClick(this.props.checked);\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const classes: string = classNames(\r\n            'coveo-checkbox-label',\r\n            {disabled: !!this.props.disabled, 'checkbox-clear': this.props.clearSides},\r\n            this.props.classes\r\n        );\r\n        const innerInputClasses: string = classNames(\r\n            'coveo-checkbox',\r\n            'react-vapor-checkbox',\r\n            this.props.innerInputClasses\r\n        );\r\n        return (\r\n            <Input\r\n                {...this.props}\r\n                classes={[classes]}\r\n                innerInputClasses={[innerInputClasses]}\r\n                type=\"checkbox\"\r\n                onClick={(e: React.MouseEvent<HTMLElement>) => this.handleOnClick(e)}\r\n                readOnly\r\n            >\r\n                <button type=\"button\" disabled={!!this.props.disabled}></button>\r\n                {this.props.children}\r\n            </Input>\r\n        );\r\n    }\r\n}\r\n","import * as React from 'react';\n\nexport const InputDescription: React.FunctionComponent = ({children}) => (\n    <section className=\"text-dark-medium-grey help-text\">{children}</section>\n);\n","import * as classNames from 'classnames';\nimport * as React from 'react';\nimport {TooltipPlacement} from '../../utils/TooltipUtils';\nimport {Svg} from '../svg/Svg';\nimport {Tooltip} from '../tooltip/Tooltip';\nimport {InputDescription} from './InputDescription';\n\nexport interface ILabeledInputProps {\n    label?: React.ReactNode;\n    message?: React.ReactNode;\n    helpText?: React.ReactNode;\n    headerClassName?: string;\n    optionalInformation?: string;\n}\n\nexport const LabeledInput: React.FunctionComponent<ILabeledInputProps> = ({\n    children,\n    label,\n    message,\n    helpText: description,\n    headerClassName,\n    optionalInformation: information,\n}) => {\n    const header =\n        !!label || !!information ? (\n            <header className={classNames('label', 'text-light-blue', headerClassName)}>\n                {!!label ? <span>{label}</span> : null}\n                {!!information ? (\n                    <Tooltip title={information} placement={TooltipPlacement.Top} className=\"ml1\">\n                        <Svg svgName=\"info-14\" svgClass=\"icon fill-medium-grey\" />\n                    </Tooltip>\n                ) : null}\n            </header>\n        ) : null;\n\n    return (\n        <div className=\"labeled-input\">\n            {header}\n            {children}\n            {!!message && <InputDescription>{message}</InputDescription>}\n            {!!description && <InputDescription>{description}</InputDescription>}\n        </div>\n    );\n};\n","import {createSelector} from 'reselect';\r\nimport * as _ from 'underscore';\r\n\r\nimport {IReactVaporState} from '../../ReactVapor';\r\nimport {ICheckboxState} from './CheckboxReducers';\r\n\r\nconst get = (state: IReactVaporState, {id}: {id: string}) => {\r\n    return _.findWhere(state.checkboxes, {id});\r\n};\r\n\r\nconst getIsSelected = createSelector(get, (checkbox: ICheckboxState): boolean => checkbox && checkbox.checked);\r\n\r\nexport const CheckboxSelectors = {\r\n    getIsSelected,\r\n};\r\n","import {connect} from 'react-redux';\r\n\r\nimport {IReactVaporState} from '../../ReactVapor';\r\nimport {IReduxAction, ReduxUtils} from '../../utils/ReduxUtils';\r\nimport {IInputDispatchProps, IInputOwnProps, IInputStateProps} from '../input/Input';\r\nimport {Checkbox, ICheckboxProps} from './Checkbox';\r\nimport {addCheckbox, ICheckboxActionPayload, removeCheckbox, toggleCheckbox} from './CheckboxActions';\r\nimport {CheckboxSelectors} from './CheckboxSelectors';\r\n\r\nconst mapStateToProps = (state: IReactVaporState, ownProps: IInputOwnProps): IInputStateProps => ({\r\n    checked: CheckboxSelectors.getIsSelected(state, {id: ownProps.id}),\r\n});\r\n\r\nconst mapDispatchToProps = (\r\n    dispatch: (action: IReduxAction<ICheckboxActionPayload>) => void,\r\n    ownProps: IInputOwnProps\r\n): IInputDispatchProps => {\r\n    return {\r\n        onRender: () => dispatch(addCheckbox(ownProps.id, ownProps.defaultChecked)),\r\n        onDestroy: () => dispatch(removeCheckbox(ownProps.id)),\r\n        onClick: (e: React.MouseEvent<HTMLElement>) => dispatch(toggleCheckbox(ownProps.id)),\r\n    };\r\n};\r\n\r\nexport const CheckboxConnected: React.ComponentClass<ICheckboxProps> = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps,\r\n    ReduxUtils.mergeProps\r\n)(Checkbox);\r\n","import {connect} from 'react-redux';\r\nimport * as _ from 'underscore';\r\nimport {IReactVaporState} from '../../ReactVapor';\r\nimport {IReduxAction, ReduxUtils} from '../../utils/ReduxUtils';\r\nimport {IInputDispatchProps, IInputStateProps} from '../input/Input';\r\nimport {Checkbox, ICheckboxProps} from './Checkbox';\r\nimport {ICheckboxState} from './CheckboxReducers';\r\nimport {\r\n    addGroupedCheckbox,\r\n    IGroupableCheckboxActionPayload,\r\n    removeGroupedCheckbox,\r\n    toggleGroupedCheckbox,\r\n} from './GroupableCheckboxActions';\r\nimport {IGroupableCheckboxesState} from './GroupableCheckboxReducers';\r\n\r\nexport interface IGroupableCheckboxOwnProps extends ICheckboxProps {\r\n    isParent?: boolean;\r\n    parentId?: string;\r\n}\r\n\r\nconst mapStateToProps = (state: IReactVaporState, ownProps: IGroupableCheckboxOwnProps): IInputStateProps => {\r\n    const groupableCheckboxesState: IGroupableCheckboxesState = _.findWhere(state.groupableCheckboxes, {\r\n        parentId: ownProps.parentId || ownProps.id,\r\n    });\r\n    if (groupableCheckboxesState) {\r\n        const checkbox: ICheckboxState = ownProps.isParent\r\n            ? groupableCheckboxesState.parent\r\n            : _.findWhere(groupableCheckboxesState.checkboxes, {id: ownProps.id});\r\n        return {\r\n            checked: checkbox ? checkbox.checked : !!ownProps.defaultChecked,\r\n            disabled: checkbox ? checkbox.disabled : !!ownProps.defaultDisabled,\r\n            indeterminate:\r\n                ownProps.isParent &&\r\n                groupableCheckboxesState.nbChecked > 0 &&\r\n                groupableCheckboxesState.nbChecked < groupableCheckboxesState.total,\r\n        };\r\n    }\r\n\r\n    return {\r\n        checked: !!ownProps.defaultChecked,\r\n        disabled: !!ownProps.defaultDisabled,\r\n        indeterminate: false,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (\r\n    dispatch: (action: IReduxAction<IGroupableCheckboxActionPayload>) => void,\r\n    ownProps: IGroupableCheckboxOwnProps\r\n): IInputDispatchProps => {\r\n    return {\r\n        onRender: () =>\r\n            dispatch(\r\n                addGroupedCheckbox(\r\n                    ownProps.id,\r\n                    ownProps.defaultChecked,\r\n                    !!ownProps.defaultDisabled,\r\n                    ownProps.parentId,\r\n                    !!ownProps.isParent\r\n                )\r\n            ),\r\n        onDestroy: () => dispatch(removeGroupedCheckbox(ownProps.id, ownProps.parentId, !!ownProps.isParent)),\r\n        onClick: () => dispatch(toggleGroupedCheckbox(ownProps.id, ownProps.parentId, !!ownProps.isParent)),\r\n    };\r\n};\r\n\r\nexport const GroupableCheckboxConnected: React.ComponentClass<IGroupableCheckboxOwnProps> = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps,\r\n    ReduxUtils.mergeProps\r\n)(Checkbox);\r\n","export * from './Checkbox';\nexport * from './CheckboxActions';\nexport * from './CheckboxConnected';\nexport * from './CheckboxReducers';\nexport * from './CheckboxSelectors';\nexport * from './GroupableCheckboxActions';\nexport * from './GroupableCheckboxConnected';\nexport * from './GroupableCheckboxReducers';\nexport * from './GroupableCheckboxReducersUtils';\n"],"sourceRoot":""}