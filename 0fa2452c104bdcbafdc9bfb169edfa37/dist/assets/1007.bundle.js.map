{"version":3,"sources":["webpack:///./src/components/headers/examples/ExamplesUtils.ts?f1fa","webpack:///./src/components/headers/examples/HeaderExamples.tsx?f125","webpack:///./src/components/button/Button.tsx?06fe","webpack:///./src/components/section/Section.tsx?b7b7","webpack:///./src/components/breadcrumbs/Breadcrumb.tsx?8ed5","webpack:///./src/components/breadcrumbs/BreadcrumbLink.tsx?71e4","webpack:///./src/components/headers/BreadcrumbHeader.tsx?9707"],"names":["link1","name","link","link2","documentationLink","url","target","svg","svgName","svgClass","defaultTitle","text","actions","content","Button","componentProps","classes","defaultBreadcrumb","title","links","defaultTabs","id","HeaderExamples","Section","SimpleHeader","BreadcrumbHeaders","level","BasicHeader","description","tabs","BreadcrumbHeader","breadcrumb","Svg","className","hasBorderBottom","ButtonPropsToOmit","onClick","this","props","enabled","getTemplate","buttonClass","buttonElement","buttonAttrs","disabled","rel","href","children","tooltip","placement","tooltipPlacement","getClasses","primary","small","render","defaultProps","mods","titleProps","H","getLinks","key","defaultLinkPath","undefined","handleOnClick","e","stopPropagation","nativeEvent","stopImmediatePropagation","preventDefault","linkClasses","TagName"],"mappings":"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","file":"assets/1007.bundle.js","sourcesContent":["import {IBreadcrumbProps} from '../../breadcrumbs/Breadcrumb';\r\nimport {IBreadcrumbLinkProps} from '../../breadcrumbs/BreadcrumbLink';\r\nimport {Button} from '../../button/Button';\r\nimport {IContentProps} from '../../content/Content';\r\nimport {ILinkSvgProps} from '../../svg/LinkSvg';\r\nimport {ITabProps} from '../../tab/Tab';\r\nimport {ITitleProps} from '../../title/Title';\r\n\r\nexport const link1: IBreadcrumbLinkProps = {\r\n    name: 'Pikachu',\r\n    link: 'https://www.google.ca/?q=pikachu',\r\n};\r\n\r\nexport const link2: IBreadcrumbLinkProps = {\r\n    name: 'Squirtle',\r\n    link: 'https://www.google.ca/?q=squirtle',\r\n};\r\n\r\nexport const documentationLink: ILinkSvgProps = {\r\n    url: 'https://www.google.ca',\r\n    target: '_blank',\r\n    svg: {\r\n        svgName: 'help',\r\n        svgClass: 'fill-orange icon mod-20',\r\n    },\r\n};\r\n\r\nexport const defaultTitle: ITitleProps = {\r\n    text: 'Charmeleon title',\r\n    documentationLink,\r\n};\r\n\r\nexport const actions: IContentProps[] = [\r\n    {\r\n        content: Button,\r\n        componentProps: {name: 'Add'},\r\n        classes: ['btn-container'],\r\n    },\r\n    {\r\n        content: Button,\r\n        componentProps: {name: 'Add'},\r\n        classes: ['btn-container'],\r\n    },\r\n];\r\n\r\nexport const defaultBreadcrumb: IBreadcrumbProps = {\r\n    title: defaultTitle,\r\n    links: [link1, link2],\r\n};\r\n\r\nexport const defaultBreadcrumbLongTitle: IBreadcrumbProps = {\r\n    title: {\r\n        text:\r\n            'Pika pika pika pika pika pika pika pika pika pika pika pika pika pika pika pika pika pika pika pika pika pika pika pika ',\r\n        prefix: 'Catch this pokemon:',\r\n        documentationLink,\r\n    },\r\n    links: [link1, link2],\r\n};\r\n\r\nexport const defaultTabs: ITabProps[] = [\r\n    {id: 'tab1', title: 'Digimon'},\r\n    {id: 'tab2', title: 'Beyblade'},\r\n    {id: 'tab3', title: 'Pokemon'},\r\n];\r\n","import * as React from 'react';\r\nimport {ExampleComponent} from '../../../../docs/src/components/ComponentsInterface';\r\nimport {Button} from '../../button/Button';\r\nimport {Section} from '../../section/Section';\r\nimport {Svg} from '../../svg/Svg';\r\nimport {BasicHeader} from '../BasicHeader';\r\nimport {BreadcrumbHeader} from '../BreadcrumbHeader';\r\nimport {actions, defaultBreadcrumb, defaultTabs, defaultTitle, link1, link2} from './ExamplesUtils';\r\n\r\nexport const HeaderExamples: ExampleComponent = () => (\r\n    <Section>\r\n        <SimpleHeader />\r\n        <BreadcrumbHeaders />\r\n    </Section>\r\n);\r\n\r\n// start-print\r\n\r\nconst SimpleHeader: React.FunctionComponent = () => (\r\n    <Section level={2} title=\"Simple Header\">\r\n        <Section level={3} title=\"Basic header with actions and tabs\">\r\n            <BasicHeader\r\n                title={defaultTitle}\r\n                description=\"Simple description for the title\"\r\n                actions={actions}\r\n                tabs={defaultTabs}\r\n            />\r\n        </Section>\r\n    </Section>\r\n);\r\n\r\nconst BreadcrumbHeaders: React.FunctionComponent = () => (\r\n    <Section level={2} title=\"Breadcrumb headers\">\r\n        <Section level={3} title=\"Breadcrumb with a node as action and tabs\">\r\n            <BreadcrumbHeader\r\n                breadcrumb={defaultBreadcrumb}\r\n                description=\"Simple description for the title\"\r\n                tabs={defaultTabs}\r\n                actions={[\r\n                    {\r\n                        content: (\r\n                            <Button>\r\n                                <Svg svgName={'add'} className=\"icon mod-lg mod-align-with-text\" />\r\n                            </Button>\r\n                        ),\r\n                    },\r\n                ]}\r\n            />\r\n        </Section>\r\n        <Section level={3} title=\"Breadcrumb header without border bottom\">\r\n            <BreadcrumbHeader\r\n                breadcrumb={defaultBreadcrumb}\r\n                description=\"Simple description for the title\"\r\n                hasBorderBottom={false}\r\n            />\r\n        </Section>\r\n        <Section level={3} title=\"Breadcrumb header with a section without link\">\r\n            <BreadcrumbHeader\r\n                breadcrumb={{...defaultBreadcrumb, links: [link1, {name: 'not a link'}, link2]}}\r\n                description=\"Simple description for the title\"\r\n                hasBorderBottom={false}\r\n            />\r\n        </Section>\r\n    </Section>\r\n);\r\n","import * as classNames from 'classnames';\r\nimport * as React from 'react';\r\nimport {keys} from 'ts-transformer-keys';\r\nimport * as _ from 'underscore';\r\n\r\nimport {IBaseActionOptions} from '../actions/Action';\r\nimport {Tooltip} from '../tooltip/Tooltip';\r\n\r\nexport interface IButtonProps extends IBaseActionOptions {\r\n    small?: boolean;\r\n    classes?: string[];\r\n}\r\n\r\nconst ButtonPropsToOmit = keys<IButtonProps>();\r\n\r\nexport class Button extends React.Component<IButtonProps & React.ButtonHTMLAttributes<HTMLButtonElement>> {\r\n    static defaultProps: Partial<IButtonProps> = {\r\n        enabled: true,\r\n        name: '',\r\n        tooltip: '',\r\n        primary: false,\r\n        small: false,\r\n        tooltipPlacement: 'right',\r\n        target: '',\r\n    };\r\n\r\n    private onClick() {\r\n        if (this.props.onClick && this.props.enabled) {\r\n            this.props.onClick();\r\n        }\r\n    }\r\n\r\n    getTemplate(buttonClass: string): JSX.Element {\r\n        let buttonElement: JSX.Element;\r\n\r\n        let buttonAttrs = {\r\n            ..._.omit(this.props, ButtonPropsToOmit),\r\n            disabled: !this.props.enabled,\r\n            onClick: () => this.onClick(),\r\n        };\r\n\r\n        if (this.props.link) {\r\n            buttonAttrs = _.extend(buttonAttrs, {\r\n                target: this.props.target,\r\n                rel: 'noopener noreferrer',\r\n                href: this.props.link,\r\n            });\r\n\r\n            buttonElement = (\r\n                <a className={`${buttonClass} btn-container`} {...buttonAttrs}>\r\n                    {this.props.name}\r\n                    {this.props.children}\r\n                </a>\r\n            );\r\n        } else {\r\n            buttonElement = (\r\n                <button className={buttonClass} {...buttonAttrs}>\r\n                    {this.props.name}\r\n                    {this.props.children}\r\n                </button>\r\n            );\r\n        }\r\n\r\n        return !_.isEmpty(this.props.tooltip) ? (\r\n            <Tooltip title={this.props.tooltip} placement={this.props.tooltipPlacement} className=\"btn-container\">\r\n                {buttonElement}\r\n            </Tooltip>\r\n        ) : (\r\n            buttonElement\r\n        );\r\n    }\r\n\r\n    private getClasses() {\r\n        return classNames(\r\n            'btn',\r\n            {\r\n                'mod-primary': this.props.primary,\r\n                'mod-small': this.props.small,\r\n                'state-disabled disabled': !this.props.enabled,\r\n                'text-medium-grey': !this.props.primary && !this.props.enabled,\r\n            },\r\n            this.props.classes\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return this.getTemplate(this.getClasses());\r\n    }\r\n}\r\n","import * as classNames from 'classnames';\nimport * as React from 'react';\n\ntype SectionMods = 'mod-header-padding' | 'mod-form-top-bottom-padding' | 'material-card';\n\nexport interface ISectionProps {\n    title?: string;\n    description?: React.ReactNode;\n    className?: string;\n    mods?: SectionMods | SectionMods[];\n    level?: 1 | 2 | 3;\n}\n\nexport const Section: React.FunctionComponent<ISectionProps> = ({\n    children,\n    title,\n    description,\n    className,\n    mods,\n    level = 1,\n}) => {\n    const titleProps: React.HTMLProps<HTMLElement> = {\n        className: 'text-medium-blue mb1',\n        children: title,\n    };\n    const H = `h${level + 1}`;\n    return (\n        <fieldset className={classNames(className, mods, `level-${level} form-group mod-padding-children`)}>\n            {title && <H {...titleProps} />}\n            {description && <p className=\"description\">{description}</p>}\n            {children}\n        </fieldset>\n    );\n};\n","import * as React from 'react';\r\nimport * as _ from 'underscore';\r\nimport {ITitleProps, Title} from '../title/Title';\r\nimport {BreadcrumbLink, IBreadcrumbLinkProps} from './BreadcrumbLink';\r\n\r\nexport interface IBreadcrumbProps extends React.ClassAttributes<Breadcrumb> {\r\n    links?: IBreadcrumbLinkProps[];\r\n    defaultLinkPath?: string;\r\n    title: ITitleProps;\r\n}\r\n\r\nexport class Breadcrumb extends React.Component<IBreadcrumbProps, {}> {\r\n    static defaultProps: Partial<IBreadcrumbProps> = {\r\n        links: [],\r\n        defaultLinkPath: '',\r\n    };\r\n\r\n    private getLinks(): JSX.Element[] {\r\n        return _.map(this.props.links, (link: IBreadcrumbLinkProps) => (\r\n            <BreadcrumbLink\r\n                key={link.name}\r\n                {..._.extend(link, {\r\n                    link: link?.link ? `${this.props.defaultLinkPath}${link.link}` : undefined,\r\n                })}\r\n            />\r\n        ));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <nav>\r\n                <ul className=\"flex\">\r\n                    {this.getLinks()}\r\n                    <li className=\"breadcrumb-title truncate\">\r\n                        <Title {...this.props.title} />\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n","import * as classNames from 'classnames';\r\nimport * as React from 'react';\r\nimport {Svg} from '../svg/Svg';\r\n\r\nexport interface IBreadcrumbLinkProps {\r\n    name: React.ReactNode;\r\n    link?: string;\r\n    classes?: string;\r\n    onClick?: (props: IBreadcrumbLinkProps) => boolean; // return false to cancel the href event\r\n}\r\n\r\nexport class BreadcrumbLink extends React.Component<IBreadcrumbLinkProps, {}> {\r\n    private handleOnClick(e: React.MouseEvent<HTMLAnchorElement>): boolean {\r\n        if (this.props.onClick && !this.props.onClick(this.props)) {\r\n            e.stopPropagation();\r\n            e.nativeEvent.stopImmediatePropagation();\r\n            e.preventDefault();\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    render() {\r\n        const linkClasses = classNames(\r\n            {\r\n                link: this.props.link,\r\n                'text-blank semi-bold': !this.props.link,\r\n            },\r\n            this.props.classes\r\n        );\r\n        const TagName = this.props.link ? 'a' : 'span';\r\n        return (\r\n            <li className=\"breadcrumb-title\">\r\n                <TagName\r\n                    className={linkClasses}\r\n                    href={this.props.link}\r\n                    onClick={(e: React.MouseEvent<HTMLAnchorElement>) => this.handleOnClick(e)}\r\n                >\r\n                    {this.props.name}\r\n                </TagName>\r\n                <Svg svgName=\"arrow-right-rounded\" className=\"breadcrumb-arrow\" />\r\n            </li>\r\n        );\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as _ from 'underscore';\r\nimport {Breadcrumb, IBreadcrumbProps} from '../breadcrumbs/Breadcrumb';\r\nimport {HeaderWrapper, IHeaderWrapperProps} from './HeaderWrapper';\r\n\r\nexport interface IBreadcrumbHeaderProps extends IHeaderWrapperProps {\r\n    breadcrumb: IBreadcrumbProps;\r\n}\r\n\r\nexport class BreadcrumbHeader extends React.Component<IBreadcrumbHeaderProps, {}> {\r\n    static defaultProps: Partial<IBreadcrumbHeaderProps> = _.extend(\r\n        {\r\n            breadcrumb: {\r\n                title: {\r\n                    text: '',\r\n                },\r\n            },\r\n            classes: [],\r\n        },\r\n        HeaderWrapper.defaultProps\r\n    );\r\n\r\n    render() {\r\n        return (\r\n            <HeaderWrapper {..._.omit(this.props, 'breadcrumb')}>\r\n                <Breadcrumb {...this.props.breadcrumb} />\r\n            </HeaderWrapper>\r\n        );\r\n    }\r\n}\r\n"],"sourceRoot":""}