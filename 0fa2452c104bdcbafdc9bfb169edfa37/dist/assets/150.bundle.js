(window.webpackJsonp=window.webpackJsonp||[]).push([[150],{1263:function(o,e,t){"use strict";t.r(e),e.default="import {IReduxAction} from '../../utils/ReduxUtils';\r\n\r\nexport const AutocompleteActions = {\r\n    add: 'ADD_AUTOCOMPLETE',\r\n    remove: 'REMOVE_AUTOCOMPLETE',\r\n    toggle: 'TOGGLE_AUTOCOMPLETE',\r\n    setValue: 'SET_VALUE_AUTOCOMPLETE',\r\n    setActive: 'SET_ACTIVE_AUTOCOMPLETE',\r\n};\r\n\r\nexport interface IAutocompletePayload {\r\n    id: string;\r\n    open?: boolean;\r\n    value?: string;\r\n    diff?: number;\r\n}\r\n\r\nexport const addAutocomplete = (id: string): IReduxAction<IAutocompletePayload> => ({\r\n    type: AutocompleteActions.add,\r\n    payload: {id},\r\n});\r\n\r\nexport const removeAutocomplete = (id: string): IReduxAction<IAutocompletePayload> => ({\r\n    type: AutocompleteActions.remove,\r\n    payload: {id},\r\n});\r\n\r\nexport const toggleAutocomplete = (id: string, open?: boolean): IReduxAction<IAutocompletePayload> => ({\r\n    type: AutocompleteActions.toggle,\r\n    payload: {id, open},\r\n});\r\n\r\nexport const setAutocompleteValue = (id: string, value: string, open: boolean): IReduxAction<IAutocompletePayload> => ({\r\n    type: AutocompleteActions.setValue,\r\n    payload: {id, value, open},\r\n});\r\n\r\nexport const setAutocompleteActive = (id: string, diff: number): IReduxAction<IAutocompletePayload> => ({\r\n    type: AutocompleteActions.setActive,\r\n    payload: {id, diff},\r\n});\r\n"}}]);
//# sourceMappingURL=150.bundle.js.map