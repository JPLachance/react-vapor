{"version":3,"sources":["webpack:///./src/components/userFeedback/examples/UserFeedbackExample.tsx?1512","webpack:///./src/components/button/Button.tsx?06fe","webpack:///./src/components/section/Section.tsx?b7b7","webpack:///./src/utils/ComponentUtils.ts?4c99","webpack:///./src/components/syncFeedback/SyncFeedback.tsx?5830","webpack:///./src/components/userFeedback/UserFeedback.tsx?8070"],"names":["FeedBackExamples","title","UserFeedBackExamples","SyncFeedBackExamples","level","description","name","enabled","className","extraClasses","state","displayOnShow","feedbackText","NONE","SYNCING","SUCCESS","ERROR","feedback","ButtonPropsToOmit","onClick","this","props","getTemplate","buttonClass","buttonElement","buttonAttrs","disabled","link","target","rel","href","children","tooltip","placement","tooltipPlacement","getClasses","primary","small","classes","render","defaultProps","Section","mods","titleProps","H","DisplayClass","BLOCK","INLINE","INLINE_BLOCK","HIDDEN","TABLE","TABLE_CELL","SyncFeedbackState","push","join","renderIcon","renderContent","svgName","svgClass","UserFeedbackState","VALID","WARNING","TextColorClass","style","getUserFeedbackStyle","displayClassOnShow","renderedDisplayClass","renderedTextColorClass","concat"],"mappings":"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","file":"assets/1008.bundle.js","sourcesContent":["import * as React from 'react';\r\n\r\nimport {ExampleComponent} from '../../../../docs/src/components/ComponentsInterface';\r\nimport {Button} from '../../button/Button';\r\nimport {Section} from '../../section/Section';\r\nimport {SyncFeedback, SyncFeedbackState} from '../../syncFeedback/SyncFeedback';\r\nimport {UserFeedback} from '../UserFeedback';\r\n\r\nexport const FeedBackExamples: ExampleComponent = () => (\r\n    <Section title=\"FeedBack Examples\">\r\n        <UserFeedBackExamples />\r\n        <SyncFeedBackExamples />\r\n    </Section>\r\n);\r\n\r\n// start-print\r\n\r\nconst UserFeedBackExamples: React.FunctionComponent = () => (\r\n    <Section\r\n        level={2}\r\n        title=\"UserFeedBacks\"\r\n        description=\"UserFeedBacks will render with these state but won't render while in 'VALID' state.\"\r\n    >\r\n        <Section level={3}>\r\n            <Button name=\"Warning Feedback\" enabled className=\"btn\" />\r\n            <UserFeedback\r\n                extraClasses={['mt1']}\r\n                state=\"WARNING\"\r\n                displayOnShow=\"block\"\r\n                feedbackText=\"UserFeedback on state WARNING\"\r\n            />\r\n        </Section>\r\n        <Section level={3}>\r\n            <Button name=\"Error FeedBack\" enabled className=\"btn\" />\r\n            <UserFeedback\r\n                extraClasses={['mt1']}\r\n                state=\"ERROR\"\r\n                displayOnShow=\"block\"\r\n                feedbackText=\"UserFeedback on state ERROR\"\r\n            />\r\n        </Section>\r\n        <Section level={3}>\r\n            <Button name=\"Side FeedBack\" enabled className=\"btn\" />\r\n            <UserFeedback\r\n                extraClasses={['ml1']}\r\n                state=\"WARNING\"\r\n                displayOnShow=\"inline-block\"\r\n                feedbackText=\"UserFeedback placed beside its related element\"\r\n            />\r\n        </Section>\r\n        <Section level={3}>\r\n            <Button name=\"styled FeedBack\" enabled className=\"btn\" />\r\n            <UserFeedback\r\n                extraClasses={['ml2', 'bold', 'italic']}\r\n                state=\"WARNING\"\r\n                displayOnShow=\"inline-block\"\r\n                feedbackText=\"extra classes for styling can be passed to the extraClasses prop\"\r\n            />\r\n        </Section>\r\n    </Section>\r\n);\r\n\r\nconst SyncFeedBackExamples: React.FunctionComponent = () => (\r\n    <Section\r\n        level={2}\r\n        title=\"SyncFeedBacks\"\r\n        description=\"SyncFeedBack will render with these states but won't render while in 'NONE' state.\"\r\n    >\r\n        <Section level={3} title=\"An invisible feedback\" className={'mb3'}>\r\n            <SyncFeedback state={SyncFeedbackState.NONE} />\r\n        </Section>\r\n\r\n        <Section level={3} title=\"SyncFeedBacks with their default messages\">\r\n            <SyncFeedback state={SyncFeedbackState.SYNCING} />\r\n            <SyncFeedback state={SyncFeedbackState.SUCCESS} />\r\n            <SyncFeedback state={SyncFeedbackState.ERROR} />\r\n        </Section>\r\n\r\n        <Section level={3} title=\"SyncFeedBack with custom messages\">\r\n            <SyncFeedback\r\n                state={SyncFeedbackState.SYNCING}\r\n                feedback=\"This message is a SyncFeedback component on state SYNCING\"\r\n            />\r\n            <SyncFeedback\r\n                state={SyncFeedbackState.SUCCESS}\r\n                feedback=\"This message is a SyncFeedback component on state SUCCESS\"\r\n            />\r\n            <SyncFeedback\r\n                state={SyncFeedbackState.ERROR}\r\n                feedback=\"This message is a SyncFeedback component on state ERROR\"\r\n            />\r\n        </Section>\r\n    </Section>\r\n);\r\n","import * as classNames from 'classnames';\r\nimport * as React from 'react';\r\nimport {keys} from 'ts-transformer-keys';\r\nimport * as _ from 'underscore';\r\n\r\nimport {IBaseActionOptions} from '../actions/Action';\r\nimport {Tooltip} from '../tooltip/Tooltip';\r\n\r\nexport interface IButtonProps extends IBaseActionOptions {\r\n    small?: boolean;\r\n    classes?: string[];\r\n}\r\n\r\nconst ButtonPropsToOmit = keys<IButtonProps>();\r\n\r\nexport class Button extends React.Component<IButtonProps & React.ButtonHTMLAttributes<HTMLButtonElement>> {\r\n    static defaultProps: Partial<IButtonProps> = {\r\n        enabled: true,\r\n        name: '',\r\n        tooltip: '',\r\n        primary: false,\r\n        small: false,\r\n        tooltipPlacement: 'right',\r\n        target: '',\r\n    };\r\n\r\n    private onClick() {\r\n        if (this.props.onClick && this.props.enabled) {\r\n            this.props.onClick();\r\n        }\r\n    }\r\n\r\n    getTemplate(buttonClass: string): JSX.Element {\r\n        let buttonElement: JSX.Element;\r\n\r\n        let buttonAttrs = {\r\n            ..._.omit(this.props, ButtonPropsToOmit),\r\n            disabled: !this.props.enabled,\r\n            onClick: () => this.onClick(),\r\n        };\r\n\r\n        if (this.props.link) {\r\n            buttonAttrs = _.extend(buttonAttrs, {\r\n                target: this.props.target,\r\n                rel: 'noopener noreferrer',\r\n                href: this.props.link,\r\n            });\r\n\r\n            buttonElement = (\r\n                <a className={`${buttonClass} btn-container`} {...buttonAttrs}>\r\n                    {this.props.name}\r\n                    {this.props.children}\r\n                </a>\r\n            );\r\n        } else {\r\n            buttonElement = (\r\n                <button className={buttonClass} {...buttonAttrs}>\r\n                    {this.props.name}\r\n                    {this.props.children}\r\n                </button>\r\n            );\r\n        }\r\n\r\n        return !_.isEmpty(this.props.tooltip) ? (\r\n            <Tooltip title={this.props.tooltip} placement={this.props.tooltipPlacement} className=\"btn-container\">\r\n                {buttonElement}\r\n            </Tooltip>\r\n        ) : (\r\n            buttonElement\r\n        );\r\n    }\r\n\r\n    private getClasses() {\r\n        return classNames(\r\n            'btn',\r\n            {\r\n                'mod-primary': this.props.primary,\r\n                'mod-small': this.props.small,\r\n                'state-disabled disabled': !this.props.enabled,\r\n                'text-medium-grey': !this.props.primary && !this.props.enabled,\r\n            },\r\n            this.props.classes\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return this.getTemplate(this.getClasses());\r\n    }\r\n}\r\n","import * as classNames from 'classnames';\nimport * as React from 'react';\n\ntype SectionMods = 'mod-header-padding' | 'mod-form-top-bottom-padding' | 'material-card';\n\nexport interface ISectionProps {\n    title?: string;\n    description?: React.ReactNode;\n    className?: string;\n    mods?: SectionMods | SectionMods[];\n    level?: 1 | 2 | 3;\n}\n\nexport const Section: React.FunctionComponent<ISectionProps> = ({\n    children,\n    title,\n    description,\n    className,\n    mods,\n    level = 1,\n}) => {\n    const titleProps: React.HTMLProps<HTMLElement> = {\n        className: 'text-medium-blue mb1',\n        children: title,\n    };\n    const H = `h${level + 1}`;\n    return (\n        <fieldset className={classNames(className, mods, `level-${level} form-group mod-padding-children`)}>\n            {title && <H {...titleProps} />}\n            {description && <p className=\"description\">{description}</p>}\n            {children}\n        </fieldset>\n    );\n};\n","import {ILinkSvgProps} from '../components/svg/LinkSvg';\r\n\r\nexport type ComponentId = string;\r\n\r\n/**\r\n * DisplayClass is a reflection of the atomic display classes available in Vapor\r\n * see https://github.com/coveo/vapor/blob/04372c42cbabb06ddd79130c13902137a7956ad7/scss/utility/layout.scss\r\n * for more details\r\n */\r\nexport const DisplayClass = {\r\n    BLOCK: 'block',\r\n    INLINE: 'inline',\r\n    INLINE_BLOCK: 'inline-block',\r\n    HIDDEN: 'hidden',\r\n    TABLE: 'table',\r\n    TABLE_CELL: 'table-cell',\r\n};\r\n\r\nexport interface IComponentBehaviour {\r\n    isLoading?: boolean;\r\n    disabled?: boolean;\r\n}\r\n\r\nexport const getBasicDocumentLink = (url: string, title: string = ''): ILinkSvgProps => {\r\n    return {\r\n        url,\r\n        target: '_blank',\r\n        svg: {\r\n            svgName: 'help',\r\n            svgClass: 'fill-orange icon mod-20',\r\n        },\r\n        tooltip: {\r\n            title,\r\n            placement: 'bottom',\r\n            container: 'body',\r\n        },\r\n    };\r\n};\r\n","import * as React from 'react';\r\nimport {Svg} from '../svg/Svg';\r\n\r\nexport interface ISyncFeedbackProps {\r\n    feedback?: string;\r\n    state: string;\r\n}\r\n\r\nexport const SyncFeedbackState = {\r\n    SYNCING: 'SYNCING',\r\n    SUCCESS: 'SUCCESS',\r\n    ERROR: 'ERROR',\r\n    NONE: 'NONE',\r\n};\r\n\r\nexport const DEFAULT_SYNC_FEEDBACK_SYNCING_LABEL: string = 'Saving changes...';\r\nexport const DEFAULT_SYNC_FEEDBACK_SUCCESS_LABEL: string = 'Changes saved';\r\nexport const DEFAULT_SYNC_FEEDBACK_ERROR_LABEL: string = 'Changes could not be saved.';\r\n\r\nexport class SyncFeedback extends React.Component<ISyncFeedbackProps, any> {\r\n    render() {\r\n        const classes = ['sync-feedback'];\r\n        if (this.props.state === SyncFeedbackState.ERROR) {\r\n            classes.push('mod-error');\r\n        } else if (this.props.state === SyncFeedbackState.SUCCESS) {\r\n            classes.push('mod-success');\r\n        }\r\n\r\n        return (\r\n            <div className={classes.join(' ')}>\r\n                {this.renderIcon()}\r\n                {this.renderContent()}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private renderIcon() {\r\n        if (this.props.state === SyncFeedbackState.SYNCING) {\r\n            return <span className=\"status-dot syncing sync-feedback-icon\"></span>;\r\n        } else if (this.props.state === SyncFeedbackState.SUCCESS) {\r\n            return <Svg svgName=\"check\" className=\"sync-feedback-icon\" svgClass=\"icon\" />;\r\n        } else if (this.props.state === SyncFeedbackState.ERROR) {\r\n            return <Svg svgName=\"clear\" className=\"sync-feedback-icon\" svgClass=\"icon\" />;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    private renderContent() {\r\n        if (this.props.state === SyncFeedbackState.SYNCING) {\r\n            return (\r\n                <span className=\"sync-feedback-text\">{this.props.feedback || DEFAULT_SYNC_FEEDBACK_SYNCING_LABEL}</span>\r\n            );\r\n        } else if (this.props.state === SyncFeedbackState.SUCCESS) {\r\n            return (\r\n                <span className=\"sync-feedback-text\">{this.props.feedback || DEFAULT_SYNC_FEEDBACK_SUCCESS_LABEL}</span>\r\n            );\r\n        } else if (this.props.state === SyncFeedbackState.ERROR) {\r\n            return (\r\n                <span className=\"sync-feedback-text\">{this.props.feedback || DEFAULT_SYNC_FEEDBACK_ERROR_LABEL}</span>\r\n            );\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {DisplayClass} from '../../utils/ComponentUtils';\r\n\r\nexport interface IUserFeedbackProps {\r\n    feedbackText: string;\r\n    state: string;\r\n    extraClasses?: string[];\r\n    displayOnShow?: string;\r\n}\r\n\r\nexport interface IUserFeedbackStyle {\r\n    classes: string;\r\n}\r\n\r\nexport const UserFeedbackState = {\r\n    VALID: 'VALID',\r\n    WARNING: 'WARNING',\r\n    ERROR: 'ERROR',\r\n};\r\n\r\nexport const TextColorClass = {\r\n    default: 'text-dark-grey',\r\n    error: 'text-red',\r\n};\r\n\r\nexport class UserFeedback extends React.Component<IUserFeedbackProps, any> {\r\n    render() {\r\n        const style = this.getUserFeedbackStyle();\r\n        return <div className={style.classes}>{this.props.feedbackText}</div>;\r\n    }\r\n\r\n    private getUserFeedbackStyle(): IUserFeedbackStyle {\r\n        const state = this.props.state in UserFeedbackState ? this.props.state : UserFeedbackState.VALID;\r\n        const displayClassOnShow = this.props.displayOnShow || DisplayClass.BLOCK;\r\n\r\n        const renderedDisplayClass = state === UserFeedbackState.VALID ? DisplayClass.HIDDEN : displayClassOnShow;\r\n        const renderedTextColorClass =\r\n            state === UserFeedbackState.ERROR ? TextColorClass.error : TextColorClass.default;\r\n        const renderedExtraClasses = this.props.extraClasses || [];\r\n\r\n        return {\r\n            classes: renderedExtraClasses.concat(renderedTextColorClass, renderedDisplayClass).join(' '),\r\n        };\r\n    }\r\n}\r\n"],"sourceRoot":""}