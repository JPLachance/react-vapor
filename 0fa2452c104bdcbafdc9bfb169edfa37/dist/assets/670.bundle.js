(window.webpackJsonp=window.webpackJsonp||[]).push([[670],{1771:function(r,a,e){"use strict";e.r(a),a.default="import * as React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {findWhere} from 'underscore';\r\nimport {IReactVaporState} from '../../ReactVapor';\r\nimport {IDispatch, ReduxUtils} from '../../utils/ReduxUtils';\r\nimport {\r\n    ISearchBarDispatchProps,\r\n    ISearchBarOwnProps,\r\n    ISearchBarProps,\r\n    ISearchBarStateProps,\r\n    SearchBar,\r\n} from './SearchBar';\r\nimport {addSearchBar, removeSearchBar, setSearchBarValue} from './SearchBarActions';\r\n\r\nconst mapStateToProps = (state: IReactVaporState, ownProps: ISearchBarOwnProps): ISearchBarStateProps => {\r\n    const searchBar = findWhere(state.searchBars, {id: ownProps.id});\r\n\r\n    return {\r\n        disabled: searchBar && searchBar.disabled,\r\n        value: searchBar && searchBar.value,\r\n        searching: searchBar && searchBar.searching,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: IDispatch, ownProps: ISearchBarOwnProps): ISearchBarDispatchProps => ({\r\n    onMount: () => dispatch(addSearchBar(ownProps.id, ownProps.disabledOnMount)),\r\n    onUnmount: () => dispatch(removeSearchBar(ownProps.id)),\r\n    onChange: (event: React.ChangeEvent<HTMLInputElement>) =>\r\n        dispatch(setSearchBarValue(ownProps.id, event.target.value)),\r\n});\r\n\r\nexport const SearchBarConnected: React.ComponentClass<ISearchBarProps> = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps,\r\n    ReduxUtils.mergeProps\r\n)(SearchBar);\r\n"}}]);
//# sourceMappingURL=670.bundle.js.map