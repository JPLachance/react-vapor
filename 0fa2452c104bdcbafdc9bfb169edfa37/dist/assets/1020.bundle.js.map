{"version":3,"sources":["webpack:///./src/components/optionsCycle/examples/OptionsCycleExamples.tsx?1798","webpack:///./src/components/section/Section.tsx?b7b7","webpack:///./src/components/optionsCycle/OptionsCycle.tsx?83a4","webpack:///./src/components/optionsCycle/OptionsCycleConnected.tsx?3f1f","webpack:///./src/components/optionsCycle/OptionsCycleSelectors.ts?592f"],"names":["OptionsCycleExamples","OptionsCycles","OPTIONS","level","title","id","options","startAt","previousClassName","buttonClassName","nextClassName","Section","children","description","className","mods","titleProps","H","goToPreviousOption","this","props","onChange","newOptionIndex","currentOption","length","goToNextOption","componentDidMount","onRender","componentWillUnmount","onDestroy","render","isInline","type","onClick","disabled","wrapAround","svgName","svgClass","defaultProps","OptionsCycleConnected","state","ownProps","getCurrentOption","dispatch","index","mergeProps","OptionsCycleSelectors","cycle","optionsCycles"],"mappings":"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","file":"assets/1020.bundle.js","sourcesContent":["import * as React from 'react';\r\n\r\nimport {ExampleComponent} from '../../../../docs/src/components/ComponentsInterface';\r\nimport {Section} from '../../section/Section';\r\nimport {OptionsCycleConnected} from '../OptionsCycleConnected';\r\n\r\nexport const OptionsCycleExamples: ExampleComponent = () => <OptionsCycles />;\r\n\r\nconst OPTIONS = ['Option 1', 'Option 2', 'Option 3', 'Option 4'];\r\n\r\nconst OptionsCycles: React.FunctionComponent = () => (\r\n    <Section>\r\n        <Section level={2} title=\"Option cycle\">\r\n            <OptionsCycleConnected id=\"Cycle-1\" options={OPTIONS} />\r\n        </Section>\r\n\r\n        <Section level={2} title=\"Options Cycle starting at 2 with no wrap around\">\r\n            <OptionsCycleConnected id=\"Cycle-2\" options={OPTIONS} startAt={1} />\r\n        </Section>\r\n\r\n        <Section level={2} title=\"Option cycle with custom styles\">\r\n            <OptionsCycleConnected\r\n                id=\"Cycle-3\"\r\n                options={OPTIONS}\r\n                previousClassName=\"btn mod-border w4\"\r\n                buttonClassName=\"btn ml1\"\r\n                nextClassName=\"btn mod-border ml1 w4\"\r\n            />\r\n        </Section>\r\n    </Section>\r\n);\r\n","import * as classNames from 'classnames';\nimport * as React from 'react';\n\ntype SectionMods = 'mod-header-padding' | 'mod-form-top-bottom-padding' | 'material-card';\n\nexport interface ISectionProps {\n    title?: string;\n    description?: React.ReactNode;\n    className?: string;\n    mods?: SectionMods | SectionMods[];\n    level?: 1 | 2 | 3;\n}\n\nexport const Section: React.FunctionComponent<ISectionProps> = ({\n    children,\n    title,\n    description,\n    className,\n    mods,\n    level = 1,\n}) => {\n    const titleProps: React.HTMLProps<HTMLElement> = {\n        className: 'text-medium-blue mb1',\n        children: title,\n    };\n    const H = `h${level + 1}`;\n    return (\n        <fieldset className={classNames(className, mods, `level-${level} form-group mod-padding-children`)}>\n            {title && <H {...titleProps} />}\n            {description && <p className=\"description\">{description}</p>}\n            {children}\n        </fieldset>\n    );\n};\n","import * as classNames from 'classnames';\r\nimport * as React from 'react';\r\n\r\nimport {Svg} from '../svg/Svg';\r\n\r\nexport interface IOptionsCycleConnectedOwnProps {\r\n    id: string;\r\n    startAt?: number;\r\n}\r\n\r\nexport interface IOptionsCycleOwnProps {\r\n    options: React.ReactNode[];\r\n    isInline?: boolean;\r\n    wrapAround?: boolean;\r\n    className?: string;\r\n    previousClassName?: string;\r\n    nextClassName?: string;\r\n    buttonClassName?: string;\r\n}\r\n\r\nexport interface IOptionsCycleStateProps {\r\n    currentOption: number;\r\n}\r\n\r\nexport interface IOptionsCycleDispatchProps {\r\n    onRender: () => void;\r\n    onDestroy: () => void;\r\n    onChange: (index: number) => void;\r\n}\r\n\r\nexport interface IOptionsCycleProps\r\n    extends IOptionsCycleOwnProps,\r\n        Partial<IOptionsCycleStateProps>,\r\n        Partial<IOptionsCycleDispatchProps> {}\r\n\r\nexport class OptionsCycle extends React.Component<IOptionsCycleProps> {\r\n    static defaultProps: Partial<IOptionsCycleProps> = {\r\n        currentOption: 0,\r\n        wrapAround: true,\r\n    };\r\n\r\n    private goToPreviousOption() {\r\n        if (this.props.onChange) {\r\n            const newOptionIndex = this.props.currentOption\r\n                ? this.props.currentOption - 1\r\n                : this.props.options.length - 1;\r\n            this.props.onChange(newOptionIndex);\r\n        }\r\n    }\r\n\r\n    private goToNextOption() {\r\n        if (this.props.onChange) {\r\n            const newOptionIndex =\r\n                this.props.currentOption === this.props.options.length - 1 ? 0 : this.props.currentOption + 1;\r\n            this.props.onChange(newOptionIndex);\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.onRender?.();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.onDestroy?.();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div\r\n                className={classNames('options-cycle text-medium-blue', this.props.className, {\r\n                    'mod-inline': this.props.isInline,\r\n                })}\r\n            >\r\n                <button\r\n                    type=\"button\"\r\n                    className={classNames('options-cycle-button previous-option', this.props.previousClassName)}\r\n                    onClick={() => this.goToPreviousOption()}\r\n                    disabled={!this.props.wrapAround && this.props.currentOption === 0}\r\n                >\r\n                    <Svg svgName=\"arrow-left-rounded\" svgClass=\"icon fill-dark-blue mod-16\" />\r\n                </button>\r\n                <span className={classNames('options-cycle-option', this.props.buttonClassName)}>\r\n                    {this.props.options[this.props.currentOption]}\r\n                </span>\r\n                <button\r\n                    type=\"button\"\r\n                    className={classNames('options-cycle-button next-option', this.props.nextClassName)}\r\n                    onClick={() => this.goToNextOption()}\r\n                    disabled={!this.props.wrapAround && this.props.currentOption === this.props.options.length - 1}\r\n                >\r\n                    <Svg svgName=\"arrow-right-rounded\" svgClass=\"icon fill-dark-blue mod-16\" />\r\n                </button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport {IReactVaporState, IReduxActionsPayload} from '../../ReactVapor';\r\nimport {IReduxAction, ReduxUtils} from '../../utils/ReduxUtils';\r\nimport {\r\n    IOptionsCycleConnectedOwnProps,\r\n    IOptionsCycleDispatchProps,\r\n    IOptionsCycleProps,\r\n    IOptionsCycleStateProps,\r\n    OptionsCycle,\r\n} from './OptionsCycle';\r\nimport {addOptionsCycle, changeOptionsCycle, removeOptionsCycle} from './OptionsCycleActions';\r\nimport {OptionsCycleSelectors} from './OptionsCycleSelectors';\r\n\r\nconst mapStateToProps = (\r\n    state: IReactVaporState,\r\n    ownProps: IOptionsCycleConnectedOwnProps\r\n): IOptionsCycleStateProps => ({\r\n    currentOption: OptionsCycleSelectors.getCurrentOption(state, {id: ownProps.id, startAt: ownProps.startAt}),\r\n});\r\n\r\nconst mapDispatchToProps = (\r\n    dispatch: (action: IReduxAction<IReduxActionsPayload>) => void,\r\n    ownProps: IOptionsCycleConnectedOwnProps\r\n): IOptionsCycleDispatchProps => ({\r\n    onRender: () => dispatch(addOptionsCycle(ownProps.id, ownProps.startAt)),\r\n    onDestroy: () => dispatch(removeOptionsCycle(ownProps.id)),\r\n    onChange: (index: number) => dispatch(changeOptionsCycle(ownProps.id, index)),\r\n});\r\n\r\nexport const OptionsCycleConnected: React.ComponentClass<IOptionsCycleProps & IOptionsCycleConnectedOwnProps> = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps,\r\n    ReduxUtils.mergeProps\r\n)(OptionsCycle);\r\n","import * as _ from 'underscore';\r\n\r\nimport {IReactVaporState} from '../../ReactVapor';\r\n\r\nconst getCurrentOption = (state: IReactVaporState, props: {id: string; startAt?: number}): number => {\r\n    const cycle = _.findWhere(state.optionsCycles, {id: props.id});\r\n    return _.result(cycle, 'currentOption', props.startAt || 0);\r\n};\r\n\r\nexport const OptionsCycleSelectors = {\r\n    getCurrentOption,\r\n};\r\n"],"sourceRoot":""}