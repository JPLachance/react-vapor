{"version":3,"sources":["webpack:///./src/components/toast/examples/ToastContentExample.tsx?94f5","webpack:///./src/components/toast/examples/ToastConnectedExamples.tsx?c6b6","webpack:///./src/components/toast/ToastContainer.tsx?e74b","webpack:///./src/components/toast/ToastContainerConnected.tsx?ded3"],"names":["render","style","marginBottom","href","className","onClick","props","addToast","type","Warning","Error","dismiss","content","id","ToastConnectedExamples","componentWillMount","this","onRender","componentWillUnmount","onDestroy","onCloseToast","classes","bottom","left","right","toasts","toast","key","onClose","children","ToastContainerConnected","state","ownProps","toastContainers","dispatch","mergeProps"],"mappings":"8dAEA,2B,+CAWA,OAXyC,OACrC,YAAAA,OAAA,WACI,OACI,0BACI,sBAAIC,MAAO,CAACC,aAAc,QACtB,qBAAGC,KAAK,KAAG,cAEf,uDAIhB,EAXA,CAAyC,c,kxBCazC,2B,+CA8EA,OA9E4C,OACxC,YAAAH,OAAA,sBACI,OACI,uBAAKI,UAAU,OACX,uBAAKA,UAAU,cACX,yBAAOA,UAAU,sBAAoB,UACrC,2BACI,0BACIA,UAAU,MACVC,QAAS,WACL,EAAKC,MAAMC,SAbvB,UAa6C,cACpC,SAKL,0BACIH,UAAU,MACVC,QAAS,WACL,EAAKC,MAAMC,SAtBvB,UAsB6C,WAAY,CAACC,KAAM,IAAUC,YACjE,WAKL,0BACIL,UAAU,MACVC,QAAS,WACL,EAAKC,MAAMC,SA/BvB,UA+B6C,SAAU,CAACC,KAAM,IAAUE,UAC/D,SAKL,0BACIN,UAAU,MACVC,QAAS,WACL,EAAKC,MAAMC,SAxCvB,UAwC6C,iBAAkB,CAACI,QAAS,QAChE,SAKL,0BACIP,UAAU,MACVC,QAAS,WACL,EAAKC,MAAMC,SAjDvB,UAiD6C,WAAY,CAACK,QAAS,qBAC1D,kBAKL,0BACIR,UAAU,MACVC,QAAS,WACL,EAAKC,MAAMC,SA1DvB,UA0D6C,WAAY,CACzCK,QAAS,WAAM,4BAAGT,KAAK,KAAG,oBAEjC,eAKL,0BACIC,UAAU,MACVC,QAAS,WACL,EAAKC,MAAMC,SArEvB,UAqE6C,WAAY,CAACK,QAAS,0BAC1D,2BAKL,gBAAC,IAAuB,CAACC,GA3E7B,gBAGPC,EAAsB,GADlC,YAAa,KAAM,CAACP,SAAQ,OAChBO,GAAb,CAA4C,c,0mBCe5C,2B,+CAwCA,OAxCoC,OAChC,YAAAC,mBAAA,WACQC,KAAKV,MAAMW,UACXD,KAAKV,MAAMW,YAInB,YAAAC,qBAAA,WACQF,KAAKV,MAAMa,WACXH,KAAKV,MAAMa,aAIX,YAAAC,aAAR,SAAqBP,GACbG,KAAKV,MAAMc,cACXJ,KAAKV,MAAMc,aAAaP,IAIhC,YAAAb,OAAA,sBACUqB,EAAU,EAAW,kBAAmBL,KAAKV,MAAMe,QAAS,CAC9D,aAAcL,KAAKV,MAAMgB,OACzB,WAAYN,KAAKV,MAAMiB,KACvB,YAAaP,KAAKV,MAAMkB,QAEtBC,EAAST,KAAKV,MAAMmB,OACpB,MAAMT,KAAKV,MAAMmB,QAAQ,SAACC,GAAuB,OAC7C,gBAAC,IAAK,GACFC,IAAKD,EAAMb,IACPa,EAAK,CACTE,QAAS,W,QACL,EAAKR,aAAaM,EAAMb,IACX,QAAb,KAAAa,GAAME,eAAO,wBAIzBZ,KAAKV,MAAMuB,SAEjB,OAAO,uBAAKzB,UAAWiB,GAAUI,IAEzC,EAxCA,CAAoC,c,iCC9BpC,4EA0BaK,EAAsE,aAb3D,SAACC,EAAyBC,GAE9C,MAAO,CACHP,QAFc,YAAYM,EAAME,gBAAiB,CAACpB,GAAImB,EAASnB,MAAQ,CAACA,GAAI,KAAMY,OAAQ,KAExEA,WAIC,SAACS,EAAqBF,GAAoE,OACjHf,SAAU,WAAM,OAAAiB,EAAS,YAAkBF,EAASnB,MACpDM,UAAW,WAAM,OAAAe,EAAS,YAAqBF,EAASnB,MACxDO,aAAc,SAACP,GAAe,OAAAqB,EAAS,YAAYF,EAASnB,GAAIA,QAMhE,IAAWsB,WAHoE,CAIjF","file":"assets/996.bundle.js","sourcesContent":["import * as React from 'react';\r\n\r\nexport class ToastContentExample extends React.Component {\r\n    render() {\r\n        return (\r\n            <ul>\r\n                <li style={{marginBottom: '5px'}}>\r\n                    <a href=\"#\">Some Link</a>\r\n                </li>\r\n                <li>Complex React Component</li>\r\n            </ul>\r\n        );\r\n    }\r\n}\r\n","import * as React from 'react';\r\n\r\nimport {ReduxConnect} from '../../../utils/ReduxUtils';\r\nimport {ToastType} from '../Toast';\r\nimport {addToast} from '../ToastActions';\r\nimport {ToastContainerConnected} from '../ToastContainerConnected';\r\nimport {ToastContentExample} from './ToastContentExample';\r\n\r\nexport interface IToastConnectedExamplesProps {\r\n    addToast: typeof addToast;\r\n}\r\n\r\nconst containerId = 'some-id';\r\n\r\n@ReduxConnect(null, {addToast})\r\nexport class ToastConnectedExamples extends React.Component<IToastConnectedExamplesProps, {}> {\r\n    render() {\r\n        return (\r\n            <div className=\"mt2\">\r\n                <div className=\"form-group\">\r\n                    <label className=\"form-control-label\">Toasts</label>\r\n                    <div>\r\n                        <button\r\n                            className=\"btn\"\r\n                            onClick={() => {\r\n                                this.props.addToast(containerId, 'Success!');\r\n                            }}\r\n                        >\r\n                            Basic\r\n                        </button>\r\n\r\n                        <button\r\n                            className=\"btn\"\r\n                            onClick={() => {\r\n                                this.props.addToast(containerId, 'Warning!', {type: ToastType.Warning});\r\n                            }}\r\n                        >\r\n                            Warning\r\n                        </button>\r\n\r\n                        <button\r\n                            className=\"btn\"\r\n                            onClick={() => {\r\n                                this.props.addToast(containerId, 'Error!', {type: ToastType.Error});\r\n                            }}\r\n                        >\r\n                            Error\r\n                        </button>\r\n\r\n                        <button\r\n                            className=\"btn\"\r\n                            onClick={() => {\r\n                                this.props.addToast(containerId, 'Timed Success!', {dismiss: 1000});\r\n                            }}\r\n                        >\r\n                            Timed\r\n                        </button>\r\n\r\n                        <button\r\n                            className=\"btn\"\r\n                            onClick={() => {\r\n                                this.props.addToast(containerId, 'Success!', {content: 'String content'});\r\n                            }}\r\n                        >\r\n                            String Content\r\n                        </button>\r\n\r\n                        <button\r\n                            className=\"btn\"\r\n                            onClick={() => {\r\n                                this.props.addToast(containerId, 'Success!', {\r\n                                    content: () => <a href=\"#\">JSX Element</a>,\r\n                                });\r\n                            }}\r\n                        >\r\n                            JSX Content\r\n                        </button>\r\n\r\n                        <button\r\n                            className=\"btn\"\r\n                            onClick={() => {\r\n                                this.props.addToast(containerId, 'Success!', {content: ToastContentExample});\r\n                            }}\r\n                        >\r\n                            React Component Content\r\n                        </button>\r\n\r\n                        <ToastContainerConnected id={containerId} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import * as classNames from 'classnames';\r\nimport * as React from 'react';\r\nimport * as _ from 'underscore';\r\n\r\nimport {IToastProps, Toast} from './Toast';\r\nimport {IToastState} from './ToastReducers';\r\n\r\nexport interface IToastContainerOwnProps {\r\n    id?: string;\r\n    classes?: string[];\r\n    bottom?: boolean;\r\n    left?: boolean;\r\n    right?: boolean;\r\n}\r\n\r\nexport interface IToastContainerStateProps {\r\n    toasts?: IToastState[];\r\n}\r\n\r\nexport interface IToastContainerDispatchProps {\r\n    onDestroy?: () => void;\r\n    onRender?: () => void;\r\n    onCloseToast?: (id: string) => void;\r\n}\r\n\r\nexport interface IToastContainerProps\r\n    extends IToastContainerOwnProps,\r\n        IToastContainerStateProps,\r\n        IToastContainerDispatchProps {}\r\n\r\nexport class ToastContainer extends React.Component<IToastContainerProps, {}> {\r\n    componentWillMount() {\r\n        if (this.props.onRender) {\r\n            this.props.onRender();\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (this.props.onDestroy) {\r\n            this.props.onDestroy();\r\n        }\r\n    }\r\n\r\n    private onCloseToast(id: string) {\r\n        if (this.props.onCloseToast) {\r\n            this.props.onCloseToast(id);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const classes = classNames('toast-container', this.props.classes, {\r\n            'mod-bottom': this.props.bottom,\r\n            'mod-left': this.props.left,\r\n            'mod-right': this.props.right,\r\n        });\r\n        const toasts = this.props.toasts\r\n            ? _.map(this.props.toasts, (toast: IToastProps) => (\r\n                  <Toast\r\n                      key={toast.id}\r\n                      {...toast}\r\n                      onClose={() => {\r\n                          this.onCloseToast(toast.id);\r\n                          toast.onClose?.();\r\n                      }}\r\n                  />\r\n              ))\r\n            : this.props.children;\r\n\r\n        return <div className={classes}>{toasts}</div>;\r\n    }\r\n}\r\n","import {connect} from 'react-redux';\r\nimport * as _ from 'underscore';\r\nimport {IReactVaporState} from '../../ReactVapor';\r\nimport {IDispatch, ReduxUtils} from '../../utils/ReduxUtils';\r\nimport {addToastContainer, removeToast, removeToastContainer} from './ToastActions';\r\nimport {\r\n    IToastContainerDispatchProps,\r\n    IToastContainerOwnProps,\r\n    IToastContainerProps,\r\n    IToastContainerStateProps,\r\n    ToastContainer,\r\n} from './ToastContainer';\r\n\r\nconst mapStateToProps = (state: IReactVaporState, ownProps: IToastContainerOwnProps): IToastContainerStateProps => {\r\n    const container = _.findWhere(state.toastContainers, {id: ownProps.id}) || {id: null, toasts: []};\r\n    return {\r\n        toasts: container.toasts,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: IDispatch, ownProps: IToastContainerOwnProps): IToastContainerDispatchProps => ({\r\n    onRender: () => dispatch(addToastContainer(ownProps.id)),\r\n    onDestroy: () => dispatch(removeToastContainer(ownProps.id)),\r\n    onCloseToast: (id: string) => dispatch(removeToast(ownProps.id, id)),\r\n});\r\n\r\nexport const ToastContainerConnected: React.ComponentClass<IToastContainerProps> = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps,\r\n    ReduxUtils.mergeProps\r\n)(ToastContainer);\r\n"],"sourceRoot":""}