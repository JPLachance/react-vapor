(window.webpackJsonp=window.webpackJsonp||[]).push([[811],{1900:function(e,a,t){"use strict";t.r(a),a.default="import {IReduxAction} from '../../utils/ReduxUtils';\r\nimport {IData, ITablePredicate} from './Table';\r\nimport {ITableData, ITableState} from './TableReducers';\r\n\r\nexport type ITableStateModifier = (state: ITableState) => ITableState;\r\n\r\nexport const TableActions = {\r\n    add: 'ADD_TABLE',\r\n    remove: 'REMOVE_TABLE',\r\n    inError: 'IN_ERROR_TABLE',\r\n    modifyState: 'MODIFY_STATE_TABLE',\r\n    updateSelectedIds: 'UPDATE_SELECTED_IDS_TABLE',\r\n    deleteTableDataEntry: 'DELETE_TABLE_DATA_ENTRY',\r\n    addTableDataEntry: 'ADD_TABLE_DATA_ENTRY',\r\n    updateTableDataEntry: 'UPDATE_TABLE_DATA_ENTRY',\r\n};\r\n\r\nexport interface ITableActionPayload {\r\n    id: string;\r\n    isInError?: boolean;\r\n    initialTableData?: ITableData;\r\n    initialPerPage?: number;\r\n    headingAttributeIds?: string[];\r\n    predicates?: ITablePredicate[];\r\n    tableStateModifier?: ITableStateModifier;\r\n    shouldResetPage?: boolean;\r\n    selectedIds?: string[];\r\n    hasMultipleSelectedRow?: boolean;\r\n    dataId?: string;\r\n    data?: IData;\r\n}\r\n\r\nexport const addTable = (\r\n    id: string,\r\n    initialTableData: ITableData,\r\n    predicates: ITablePredicate[]\r\n): IReduxAction<ITableActionPayload> => ({\r\n    type: TableActions.add,\r\n    payload: {id, initialTableData, predicates: predicates || []},\r\n});\r\n\r\nexport const removeTable = (id: string): IReduxAction<ITableActionPayload> => ({\r\n    type: TableActions.remove,\r\n    payload: {id},\r\n});\r\n\r\nexport const setIsInError = (id: string, isInError: boolean): IReduxAction<ITableActionPayload> => ({\r\n    type: TableActions.inError,\r\n    payload: {id, isInError},\r\n});\r\n\r\nexport const modifyState = (\r\n    id: string,\r\n    tableStateModifier: ITableStateModifier,\r\n    shouldResetPage: boolean\r\n): IReduxAction<ITableActionPayload> => ({\r\n    type: TableActions.modifyState,\r\n    payload: {\r\n        id,\r\n        tableStateModifier,\r\n        shouldResetPage,\r\n    },\r\n});\r\n\r\nexport const updateSelectedRows = (\r\n    id: string,\r\n    selectedIds: string[],\r\n    hasMultipleSelectedRow: boolean\r\n): IReduxAction<ITableActionPayload> => ({\r\n    type: TableActions.updateSelectedIds,\r\n    payload: {\r\n        id,\r\n        selectedIds,\r\n        hasMultipleSelectedRow,\r\n    },\r\n});\r\n\r\nexport const deleteTableDataEntry = (id: string, dataId: string): IReduxAction<ITableActionPayload> => ({\r\n    type: TableActions.deleteTableDataEntry,\r\n    payload: {id, dataId},\r\n});\r\n\r\nexport const addTableDataEntry = (id: string, data: IData): IReduxAction<ITableActionPayload> => ({\r\n    type: TableActions.addTableDataEntry,\r\n    payload: {id, data},\r\n});\r\n\r\nexport const updateTableDataEntry = (id: string, data: IData): IReduxAction<ITableActionPayload> => ({\r\n    type: TableActions.updateTableDataEntry,\r\n    payload: {id, data},\r\n});\r\n\r\nexport const TableReduxActions = {\r\n    addTable,\r\n    removeTable,\r\n    setIsInError,\r\n    modifyState,\r\n    updateSelectedRows,\r\n    deleteTableDataEntry,\r\n    addTableDataEntry,\r\n    updateTableDataEntry,\r\n};\r\n"}}]);
//# sourceMappingURL=811.bundle.js.map