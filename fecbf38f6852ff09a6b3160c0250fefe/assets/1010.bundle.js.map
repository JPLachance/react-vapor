{"version":3,"sources":["webpack:///./src/components/chosen/examples/ChosenSelectExamples.tsx?253b","webpack:///./src/components/chosen/ChosenSelect.tsx?f5d6"],"names":["getNumberOfOptions","num","index","indexShow","key","value","render","className","placeholderTextSingle","width","onChosenChange","event","args","console","log","defaultValue","multiple","this","deprecated","chosenSelectPropsToOmit","componentDidMount","select","chosen","allow_single_deselect","props","allowSingleDeselect","case_sensitive_search","caseSensitiveSearch","disable_search","disableSearch","disable_search_threshold","disableSearchThreshold","display_disabled_options","displayDisabledOptions","display_selected_options","displaySelectedOptions","enable_split_word_search","enableSplitWordSearch","include_group_label_in_selected","includeGroupLabelInSelected","inherit_select_classes","inheritSelectClasses","max_selected_options","maxSelectedOptions","max_shown_results","maxShownResults","no_results_text","noResultsText","placeholder_text_multiple","placeholderTextMultiple","placeholder_text_single","search_contains","searchContains","single_backstroke_delete","singleBackstrokeDelete","change","componentWillUnmount","off","selectProps","ref","onChange","children"],"mappings":"2eAIA,2B,+CA+DA,OA/D0C,OAGtC,YAAAA,mBAAA,SAAmBC,GACf,OAAO,QAAQA,GAAK,SAACC,GACjB,IAAMC,EAAYD,EAAQ,EAC1B,OACI,0BAAQE,IAAKF,EAAOG,MAAOF,G,UACfA,OAMxB,YAAAG,OAAA,WACI,OACI,uBAAKC,UAAU,OACX,uBAAKA,UAAU,cACX,yBAAOA,UAAU,sBAAoB,gCACrC,uBAAKA,UAAU,gBACX,gBAAC,IAAY,CACTC,sBAAsB,mBACtBH,MAAM,SACNI,MAAM,QACNC,eAAgB,SAACC,EAA0BC,GAClBC,QAAQC,IAAI,YAAaF,KAGlD,0BAAQP,MAAM,UAAQ,UACtB,0BAAQA,MAAM,UAAQ,UACtB,0BAAQA,MAAM,iBAAe,oBAIzC,uBAAKE,UAAU,cACX,yBAAOA,UAAU,sBAAoB,uBACrC,uBAAKA,UAAU,gBACX,gBAAC,IAAY,CACTC,sBAAsB,mBACtBO,aAAc,CAAC,UACfC,UAAQ,EACRP,MAAM,QACNC,eAAgB,SAACC,EAA0BC,GAClBC,QAAQC,IAAI,YAAaF,KAGlD,0BAAQP,MAAM,UAAQ,UACtB,0BAAQA,MAAM,UAAQ,UACtB,0BAAQA,MAAM,iBAAe,oBAIzC,uBAAKE,UAAU,cACX,yBAAOA,UAAU,sBAAoB,0CACrC,uBAAKA,UAAU,gBACX,gBAAC,IAAY,CAACC,sBAAsB,kBAAkBC,MAAM,SACvDQ,KAAKjB,mBAAmB,UAvD1C,EAAAkB,YAAa,EA8DxB,EA/DA,CAA0C,c,0mBC0BpCC,EAA0B,CAC5B,sBACA,WACA,gBACA,yBACA,yBACA,yBACA,wBACA,uBACA,qBACA,gBACA,iBACA,0BACA,wBACA,iBACA,yBACA,SAMJ,2B,+CAiDA,OAjDkC,OAG9B,YAAAC,kBAAA,sBACIH,KAAKI,OACAC,OAAO,CACJC,sBAAuBN,KAAKO,MAAMC,oBAClCC,sBAAuBT,KAAKO,MAAMG,oBAClCC,eAAgBX,KAAKO,MAAMK,cAC3BC,yBAA0Bb,KAAKO,MAAMO,uBACrCC,yBAA0Bf,KAAKO,MAAMS,uBACrCC,yBAA0BjB,KAAKO,MAAMW,uBACrCC,yBAA0BnB,KAAKO,MAAMa,sBACrCC,gCAAiCrB,KAAKO,MAAMe,4BAC5CC,uBAAwBvB,KAAKO,MAAMiB,qBACnCC,qBAAsBzB,KAAKO,MAAMmB,mBACjCC,kBAAmB3B,KAAKO,MAAMqB,gBAC9BC,gBAAiB7B,KAAKO,MAAMuB,cAC5BC,0BAA2B/B,KAAKO,MAAMyB,wBACtCC,wBAAyBjC,KAAKO,MAAMhB,sBACpC2C,gBAAiBlC,KAAKO,MAAM4B,eAC5BC,yBAA0BpC,KAAKO,MAAM8B,uBACrC7C,MAAOQ,KAAKO,MAAMf,QAErB8C,QACG,SAAC5C,EAA0BC,GACvB,SAAKY,MAAMd,gBAAkB,EAAKc,MAAMd,eAAeC,EAAOC,OAI9E,YAAA4C,qBAAA,WACIvC,KAAKI,OAAOoC,IAAI,UAAUnC,OAAO,YASrC,YAAAhB,OAAA,sBAEUoD,EAAc,SAAS,GAAI,OAAOzC,KAAKO,MAAOL,IACpD,OACI,8BAAYuC,EAAW,CAAEC,IAAK,SAACtC,GAA8B,OAAC,EAAKA,OAAS,EAAEA,IAAUuC,SAAU,SAC7F3C,KAAKO,MAAMqC,WAI5B,EAjDA,CAAkC","file":"assets/1010.bundle.js","sourcesContent":["import * as React from 'react';\r\nimport * as _ from 'underscore';\r\nimport {ChosenSelect} from '../ChosenSelect';\r\n\r\nexport class ChosenSelectExamples extends React.Component<any, any> {\r\n    static deprecated = true;\r\n\r\n    getNumberOfOptions(num: number) {\r\n        return _.times(num, (index: number) => {\r\n            const indexShow = index + 1;\r\n            return (\r\n                <option key={index} value={indexShow}>\r\n                    Option {indexShow}\r\n                </option>\r\n            );\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"mt2\">\r\n                <div className=\"form-group\">\r\n                    <label className=\"form-control-label\">Default Chosen single select</label>\r\n                    <div className=\"form-control\">\r\n                        <ChosenSelect\r\n                            placeholderTextSingle=\"Choose a country\"\r\n                            value=\"France\"\r\n                            width=\"400px\"\r\n                            onChosenChange={(event: JQueryEventObject, args: Chosen.SelectedData) => {\r\n                                /* tslint:disable */ console.log('Changed: ', args); /* tslint:enable */\r\n                            }}\r\n                        >\r\n                            <option value=\"Canada\">Canada</option>\r\n                            <option value=\"France\">France</option>\r\n                            <option value=\"United States\">United States</option>\r\n                        </ChosenSelect>\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label className=\"form-control-label\">Chosen multi select</label>\r\n                    <div className=\"form-control\">\r\n                        <ChosenSelect\r\n                            placeholderTextSingle=\"Choose a country\"\r\n                            defaultValue={['Canada']}\r\n                            multiple\r\n                            width=\"400px\"\r\n                            onChosenChange={(event: JQueryEventObject, args: Chosen.SelectedData) => {\r\n                                /* tslint:disable */ console.log('Changed: ', args); /* tslint:enable */\r\n                            }}\r\n                        >\r\n                            <option value=\"Canada\">Canada</option>\r\n                            <option value=\"France\">France</option>\r\n                            <option value=\"United States\">United States</option>\r\n                        </ChosenSelect>\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label className=\"form-control-label\">Chosen single select with 2000 options</label>\r\n                    <div className=\"form-control\">\r\n                        <ChosenSelect placeholderTextSingle=\"Choose a option\" width=\"400px\">\r\n                            {this.getNumberOfOptions(2000)}\r\n                        </ChosenSelect>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import 'chosen-js'; // Clean way to make Webpack import something that is not a module\r\nimport * as $ from 'jquery';\r\nimport * as React from 'react';\r\nimport * as _ from 'underscore';\r\n\r\nexport interface IChosenSelectProps extends React.HTMLProps<ChosenSelect> {\r\n    allowSingleDeselect?: boolean; // @default: false\r\n    caseSensitiveSearch?: boolean; // @default: false\r\n    disableSearch?: boolean; // @default: false\r\n    disableSearchThreshold?: number; // @default: 0, a.k.a. always enabled\r\n    displayDisabledOptions?: boolean; // @default: true\r\n    displaySelectedOptions?: boolean; // @default: true\r\n    enableSplitWordSearch?: boolean; // @default: true\r\n    includeGroupLabelInSelected?: boolean; // @default: false\r\n    inheritSelectClasses?: boolean; // @default: false\r\n    maxSelectedOptions?: number; // @default: Infinity\r\n    maxShownResults?: number; // @default: Infinity\r\n    noResultsText?: string; // @default: \"No results match\"\r\n    onChosenChange?: (event: JQueryEventObject, args: Chosen.SelectedData) => void;\r\n    placeholderTextMultiple?: string; // @default: \"Select Some Options\"\r\n    placeholderTextSingle?: string; // @default: \"Select an Option\"\r\n    searchContains?: boolean; // @default: false\r\n    singleBackstrokeDelete?: boolean; // @default: true\r\n    width?: string; // @default: the width of the select chosen is replacing\r\n}\r\n\r\n/**\r\n * List of props that were passed to the <ChosenSelect> component but that should not be passed to the <select> element to avoid warnings.\r\n * @type {string[]}\r\n */\r\nconst chosenSelectPropsToOmit = [\r\n    'allowSingleDeselect',\r\n    'children',\r\n    'disableSearch',\r\n    'disableSearchThreshold',\r\n    'displayDisabledOptions',\r\n    'displaySelectedOptions',\r\n    'enableSplitWordSearch',\r\n    'inheritSelectClasses',\r\n    'maxSelectedOptions',\r\n    'noResultsText',\r\n    'onChosenChange',\r\n    'placeholderTextMultiple',\r\n    'placeholderTextSingle',\r\n    'searchContains',\r\n    'singleBackstrokeDelete',\r\n    'width',\r\n];\r\n\r\n/**\r\n * @deprecated use components from SelectComponents instead\r\n */\r\nexport class ChosenSelect extends React.Component<IChosenSelectProps, any> {\r\n    select: JQuery;\r\n\r\n    componentDidMount() {\r\n        this.select\r\n            .chosen({\r\n                allow_single_deselect: this.props.allowSingleDeselect,\r\n                case_sensitive_search: this.props.caseSensitiveSearch,\r\n                disable_search: this.props.disableSearch,\r\n                disable_search_threshold: this.props.disableSearchThreshold,\r\n                display_disabled_options: this.props.displayDisabledOptions,\r\n                display_selected_options: this.props.displaySelectedOptions,\r\n                enable_split_word_search: this.props.enableSplitWordSearch,\r\n                include_group_label_in_selected: this.props.includeGroupLabelInSelected,\r\n                inherit_select_classes: this.props.inheritSelectClasses,\r\n                max_selected_options: this.props.maxSelectedOptions,\r\n                max_shown_results: this.props.maxShownResults,\r\n                no_results_text: this.props.noResultsText,\r\n                placeholder_text_multiple: this.props.placeholderTextMultiple,\r\n                placeholder_text_single: this.props.placeholderTextSingle,\r\n                search_contains: this.props.searchContains,\r\n                single_backstroke_delete: this.props.singleBackstrokeDelete,\r\n                width: this.props.width,\r\n            })\r\n            .change(\r\n                (event: JQueryEventObject, args: Chosen.SelectedData) =>\r\n                    this.props.onChosenChange && this.props.onChosenChange(event, args)\r\n            );\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.select.off('change').chosen('destroy');\r\n    }\r\n\r\n    /**\r\n     * HACK: Since we cannot overrdide onChange method signature (provided by React.HTMLProps<HTMLSelectElement>), since onChange is\r\n     * required by React when a value has been specified (component becomes \"controlled\") and because chosen does not trigger the change\r\n     * event on the <select> and foces us to use jQuery, we added a onChosenChange prop and faked the onChange prop.\r\n     * @returns {JSX.Element | null}\r\n     */\r\n    render() {\r\n        // Omit ChosenSelect props to avoid warnings.\r\n        const selectProps = _.extend({}, _.omit(this.props, chosenSelectPropsToOmit));\r\n        return (\r\n            <select {...selectProps} ref={(select: HTMLSelectElement) => (this.select = $(select))} onChange={_.noop}>\r\n                {this.props.children}\r\n            </select>\r\n        );\r\n    }\r\n}\r\n"],"sourceRoot":""}