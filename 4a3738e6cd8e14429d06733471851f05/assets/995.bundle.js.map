{"version":3,"sources":["webpack:///./src/components/flippable/exemples/FlippableExamples.tsx?7bff","webpack:///./src/utils/BrowserUtils.ts?cd6b","webpack:///./src/components/flippable/Flippable.tsx?7d0d","webpack:///./src/components/flippable/FlippableConnected.tsx?1acf"],"names":["render","className","id","front","back","style","width","height","allowUnflip","target","scope","contains","ref","thisDiv","BrowserUtils","navigator","userAgent","indexOf","appVersion","FlippablePropsToOmit","handleClickOnFront","props","onFlip","isFlipped","handleOutsideClick","e","frontside","backside","handleUnflip","preventDefault","componentWillMount","this","onRender","document","addEventListener","componentWillUnmount","removeEventListener","onDestroy","containerClassName","Flippable","CONTAINER_CLASSNAME","flipperClassName","FLIPPER_CLASSNAME","triggers","BACK","FRONT","sides","onClick","onUnflip","defaults","FlippableConnected","state","ownProps","flippable","flippables","flipped","dispatch","mergeProps"],"mappings":"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","file":"assets/995.bundle.js","sourcesContent":["import * as React from 'react';\r\n\r\nimport {Flippable} from '../Flippable';\r\nimport {FlippableConnected} from '../FlippableConnected';\r\n\r\nexport class FlippableExamples extends React.Component<any, any> {\r\n    private scope: HTMLDivElement;\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"mt2\">\r\n                <div className=\"form-group\">\r\n                    <label className=\"form-control-label\">Default Flippable</label>\r\n                    <div className=\"form-control flex\">\r\n                        <Flippable\r\n                            id=\"flippable-example1\"\r\n                            front={<div className=\"bg-white center bold p2\">Some content on the front.</div>}\r\n                            back={<div className=\"bg-light-grey bold p2\">Some content on the back.</div>}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label className=\"form-control-label\">Flippable with redux state</label>\r\n                    <div className=\"form-control flex\" style={{width: '300px'}}>\r\n                        <FlippableConnected\r\n                            id=\"flippable-example2\"\r\n                            front={\r\n                                <div className=\"bg-white center bold p2\">\r\n                                    <span>\r\n                                        Some content on the front <br />\r\n                                        (Click me)\r\n                                    </span>\r\n                                </div>\r\n                            }\r\n                            back={\r\n                                <div className=\"bg-light-grey bold p2\" style={{width: '300px'}}>\r\n                                    Some content on the back.\r\n                                </div>\r\n                            }\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label className=\"form-control-label\">Flippable with uneven sized sides and redux state</label>\r\n                    <div className=\"form-control flex\">\r\n                        <FlippableConnected\r\n                            id=\"flippable-example3\"\r\n                            front={\r\n                                <div className=\"bg-white center bold p2\">\r\n                                    <span>\r\n                                        Some content on the front <br />\r\n                                        (Click me)\r\n                                    </span>\r\n                                </div>\r\n                            }\r\n                            back={\r\n                                <div className=\"bg-light-grey bold p2\" style={{width: '300px', height: '200px'}}>\r\n                                    Some content on the back.\r\n                                </div>\r\n                            }\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label className=\"form-control-label\">Scoped Flippable with redux state</label>\r\n                    <div className=\"form-control flex\">\r\n                        <FlippableConnected\r\n                            id=\"flippable-example4\"\r\n                            front={\r\n                                <div className=\"bg-white center bold p2\">\r\n                                    <span>\r\n                                        Some content on the front <br />\r\n                                        (Click me)\r\n                                    </span>\r\n                                </div>\r\n                            }\r\n                            back={<div className=\"bg-light-grey bold p2 full-content-x\">Some content on the back.</div>}\r\n                            allowUnflip={(target: EventTarget) => this.scope.contains(target as Node)}\r\n                        />\r\n                        <div\r\n                            style={{width: '200px'}}\r\n                            className=\"ml2 bg-white\"\r\n                            ref={(thisDiv) => (this.scope = thisDiv)}\r\n                        >\r\n                            <p className=\"p2\">\r\n                                Only clicks inside here can unflip the flipped flippable because it's specified as scope\r\n                                by allowUnflip property.\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","// https://stackoverflow.com/questions/21825157/internet-explorer-11-detection#answer-22242528\r\nconst isIE = () => navigator.userAgent.indexOf('MSIE') !== -1 || navigator.appVersion.indexOf('Trident/') > -1;\r\n\r\nexport const BrowserUtils = {\r\n    isIE,\r\n};\r\n","import * as classNames from 'classnames';\r\nimport * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport {keys} from 'ts-transformer-keys';\r\nimport * as _ from 'underscore';\r\n\r\nimport {BrowserUtils} from '../../utils/BrowserUtils';\r\n\r\nexport interface IFlippableOwnProps {\r\n    id?: string;\r\n    front?: React.ReactNode;\r\n    back?: React.ReactNode;\r\n    className?: string;\r\n    allowUnflip?: (e: EventTarget) => boolean;\r\n}\r\n\r\nexport interface IFlippableDispatchProps {\r\n    onRender?: () => void;\r\n    onDestroy?: () => void;\r\n    onFlip?: () => void;\r\n    onUnflip?: () => void;\r\n}\r\n\r\nexport interface IFlippableStateProps {\r\n    isFlipped?: boolean;\r\n}\r\n\r\nexport interface IFlippableProps extends IFlippableOwnProps, IFlippableDispatchProps, IFlippableStateProps {}\r\n\r\nconst FlippablePropsToOmit = keys<IFlippableProps>();\r\n\r\nexport class Flippable extends React.Component<IFlippableProps & React.HTMLProps<HTMLDivElement>, any> {\r\n    static CONTAINER_CLASSNAME: string = 'flippable';\r\n    static FLIPPER_CLASSNAME: string = 'flipper';\r\n    static sides = {\r\n        FRONT: 'flipper-front',\r\n        BACK: 'flipper-back',\r\n    };\r\n    static triggers = {\r\n        FRONT: 'show-front',\r\n        BACK: 'show-back',\r\n    };\r\n    static defaults: Partial<IFlippableProps> = {\r\n        isFlipped: false,\r\n    };\r\n\r\n    private backside: HTMLDivElement;\r\n    private frontside: HTMLDivElement;\r\n\r\n    componentWillMount() {\r\n        if (this.props.onRender) {\r\n            this.props.onRender();\r\n        }\r\n\r\n        document.addEventListener('click', this.handleOutsideClick);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('click', this.handleOutsideClick);\r\n\r\n        if (this.props.onDestroy) {\r\n            this.props.onDestroy();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const containerClassName = classNames(\r\n            BrowserUtils.isIE() ? 'flippable-ie' : Flippable.CONTAINER_CLASSNAME,\r\n            this.props.isFlipped ? 'show-on-top' : '',\r\n            this.props.className\r\n        );\r\n        const flipperClassName = classNames(\r\n            Flippable.FLIPPER_CLASSNAME,\r\n            this.props.isFlipped ? Flippable.triggers.BACK : Flippable.triggers.FRONT\r\n        );\r\n\r\n        return (\r\n            <div className={containerClassName} {..._.omit(this.props, FlippablePropsToOmit)}>\r\n                <div className={flipperClassName}>\r\n                    <div\r\n                        className={Flippable.sides.FRONT}\r\n                        onClick={this.handleClickOnFront}\r\n                        ref={(frontside: HTMLDivElement) => (this.frontside = frontside)}\r\n                    >\r\n                        {this.props.front}\r\n                    </div>\r\n                    <div\r\n                        className={Flippable.sides.BACK}\r\n                        ref={(backside: HTMLDivElement) => (this.backside = backside)}\r\n                    >\r\n                        {this.props.back}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private handleClickOnFront = () => {\r\n        if (this.props.onFlip && !this.props.isFlipped) {\r\n            this.props.onFlip();\r\n        }\r\n    };\r\n\r\n    private handleOutsideClick = (e: MouseEvent) => {\r\n        if (this.props.isFlipped) {\r\n            const frontside: Element | Text = ReactDOM.findDOMNode(this.frontside);\r\n            const backside: Element | Text = ReactDOM.findDOMNode(this.backside);\r\n            const target: Node = e.target as Node;\r\n\r\n            if (\r\n                !backside.contains(target) &&\r\n                !frontside.contains(target) &&\r\n                (!this.props.allowUnflip || this.props.allowUnflip(target))\r\n            ) {\r\n                this.handleUnflip();\r\n                e.preventDefault();\r\n            }\r\n        }\r\n    };\r\n\r\n    private handleUnflip() {\r\n        if (this.props.onUnflip) {\r\n            this.props.onUnflip();\r\n        }\r\n    }\r\n}\r\n","import {connect} from 'react-redux';\r\nimport * as _ from 'underscore';\r\n\r\nimport {IReactVaporState} from '../../ReactVapor';\r\nimport {IDispatch, ReduxUtils} from '../../utils/ReduxUtils';\r\nimport {\r\n    Flippable,\r\n    IFlippableDispatchProps,\r\n    IFlippableOwnProps,\r\n    IFlippableProps,\r\n    IFlippableStateProps,\r\n} from './Flippable';\r\nimport {addFlippable, changeFlippableSide, removeFlippable} from './FlippableActions';\r\nimport {IFlippableState} from './FlippableReducers';\r\n\r\nconst mapStateToProps = (state: IReactVaporState, ownProps: IFlippableOwnProps): IFlippableStateProps => {\r\n    const flippable: IFlippableState = _.findWhere(state.flippables, {id: ownProps.id});\r\n    return {\r\n        isFlipped: flippable && flippable.flipped,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: IDispatch, ownProps: IFlippableOwnProps): IFlippableDispatchProps => ({\r\n    onRender: () => dispatch(addFlippable(ownProps.id)),\r\n    onDestroy: () => dispatch(removeFlippable(ownProps.id)),\r\n    onFlip: () => dispatch(changeFlippableSide(ownProps.id, true)),\r\n    onUnflip: () => dispatch(changeFlippableSide(ownProps.id, false)),\r\n});\r\n\r\nexport const FlippableConnected: React.ComponentClass<IFlippableProps> = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps,\r\n    ReduxUtils.mergeProps\r\n)(Flippable);\r\n"],"sourceRoot":""}