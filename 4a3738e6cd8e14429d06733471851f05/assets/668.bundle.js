(window.webpackJsonp=window.webpackJsonp||[]).push([[668],{1754:function(e,r,t){"use strict";t.r(r),r.default="import * as React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport * as _ from 'underscore';\r\n\r\nimport {IReactVaporExampleState} from '../../../../docs/Reducers';\r\nimport {withServerSideProcessing} from '../../../hoc/withServerSideProcessing/withServerSideProcessing';\r\nimport {FilterBoxSelectors} from '../../filterBox/FilterBoxSelectors';\r\nimport {IItemBoxProps} from '../../itemBox/ItemBox';\r\nimport {selectWithFilter} from '../hoc/SelectWithFilter';\r\nimport {selectWithInfiniteScroll, SelectWithInfiniteScrollProps} from '../hoc/SelectWithInfiniteScroll';\r\nimport {ISingleSelectOwnProps, SingleSelectConnected} from '../SingleSelectConnected';\r\nimport {PhotoItem, PhotoProps, usePhotosAPIMock} from './ServerSideSelectExampleUtils';\r\n\r\nconst PER_PAGE = 10;\r\n\r\nconst mapStateToProps = (state: IReactVaporExampleState, props: {id: string}) => ({\r\n    filterValue: FilterBoxSelectors.getFilterText(state, props),\r\n});\r\n\r\nconst ServerSideSingleSelect: React.ComponentType<ISingleSelectOwnProps & SelectWithInfiniteScrollProps> = _.compose(\r\n    withServerSideProcessing,\r\n    selectWithFilter,\r\n    selectWithInfiniteScroll\r\n)(SingleSelectConnected);\r\n\r\nconst ServerSideSingleSelectExampleDisconnected: React.FunctionComponent<{id: string} & ReturnType<\r\n    typeof mapStateToProps\r\n>> = ({filterValue, id}) => {\r\n    const [photos, totalEntries, fetchPhotos] = usePhotosAPIMock();\r\n    const [pageNbr, setPage] = React.useState(1);\r\n\r\n    React.useEffect(() => {\r\n        fetchPhotos({_page: 1, _limit: PER_PAGE});\r\n    }, []);\r\n\r\n    function fetchNextPage() {\r\n        fetchPhotos({_page: pageNbr + 1, _limit: PER_PAGE, q: filterValue}, false);\r\n        setPage(pageNbr + 1);\r\n    }\r\n\r\n    function applyFilter() {\r\n        fetchPhotos({_page: 1, _limit: PER_PAGE, q: filterValue});\r\n        setPage(1);\r\n    }\r\n\r\n    return (\r\n        <div className=\"form-group\">\r\n            <p className=\"form-control-label\">\r\n                SingleSelect using server-side filtering and pagination with infinite scroll\r\n            </p>\r\n            <div className=\"form-control\">\r\n                <ServerSideSingleSelect\r\n                    id={id}\r\n                    items={photos.map(\r\n                        (photo: PhotoProps): IItemBoxProps => ({\r\n                            value: photo.id,\r\n                            displayValue: <PhotoItem {...photo} />,\r\n                        })\r\n                    )}\r\n                    totalEntries={totalEntries}\r\n                    next={fetchNextPage}\r\n                    onUpdate={applyFilter}\r\n                    canClear\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst ServerSideSingleSelectExample = connect(mapStateToProps)(ServerSideSingleSelectExampleDisconnected);\r\n\r\nexport function ServerSideSelectExamples() {\r\n    return (\r\n        <div className=\"mod-form-top-bottom-padding\">\r\n            <h1 className=\"mb2\">Server-side selects</h1>\r\n            <ServerSideSingleSelectExample id=\"server-side-single-select\" />\r\n        </div>\r\n    );\r\n}\r\n"}}]);
//# sourceMappingURL=668.bundle.js.map