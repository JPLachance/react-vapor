(window.webpackJsonp=window.webpackJsonp||[]).push([[247],{1341:function(r,n,s){"use strict";s.r(n),n.default="import * as classNames from 'classnames';\r\nimport * as React from 'react';\r\n\r\nimport {IClassName} from '../../utils/ClassNameUtils';\r\nimport {JSXRenderable} from '../../utils/JSXUtils';\r\nimport {LinkSvg} from '../svg/LinkSvg';\r\nimport {Svg} from '../svg/Svg';\r\nimport {ITooltipProps, Tooltip} from '../tooltip/Tooltip';\r\nimport {CollapsibleConnected} from './CollapsibleConnected';\r\nimport * as styles from './styles/CollapsibleContainer.scss';\r\n\r\nexport interface ICollapsibleContainerOwnProps {\r\n    id: string;\r\n    title: JSXRenderable;\r\n    expandedOnMount?: boolean;\r\n    informationUrl?: string;\r\n    informationTooltip?: ITooltipProps;\r\n    className?: IClassName;\r\n    collapsibleHeaderClassName?: IClassName;\r\n    collapsibleBodyClassName?: IClassName;\r\n    withoutContentPadding?: boolean;\r\n}\r\n\r\nexport interface ICollapsibleContainerStateProps {\r\n    expanded?: boolean;\r\n}\r\n\r\nexport interface ICollapsibleContainerProps extends ICollapsibleContainerOwnProps, ICollapsibleContainerStateProps {}\r\n\r\nexport class CollapsibleContainer extends React.Component<ICollapsibleContainerProps> {\r\n    render() {\r\n        const contentClasses = classNames(\r\n            {[styles.content]: !this.props.withoutContentPadding},\r\n            this.props.collapsibleBodyClassName,\r\n            'mod-border-bottom'\r\n        );\r\n\r\n        return (\r\n            <CollapsibleConnected\r\n                id={this.props.id}\r\n                className={classNames(this.props.className, styles.collapsible)}\r\n                headerContent={this.getHeader()}\r\n                expandedOnMount={this.props.expandedOnMount}\r\n                headerClasses={classNames(styles.header, this.props.expanded ? 'bg-light-grey' : 'bg-white')}\r\n                toggleIconClassName=\"fill-medium-blue mr4\"\r\n                withBorders\r\n            >\r\n                <div className={contentClasses}>{this.props.children}</div>\r\n            </CollapsibleConnected>\r\n        );\r\n    }\r\n\r\n    private getHeader = (): React.ReactNode => {\r\n        const headerClasses = classNames(\r\n            'inline-flex flex-center text-medium-blue caps p2 bold ml3',\r\n            this.props.collapsibleHeaderClassName\r\n        );\r\n        return (\r\n            <div className={headerClasses}>\r\n                <div>{this.props.title}</div>\r\n                {this.getCollapsibleHeaderIcon()}\r\n            </div>\r\n        );\r\n    };\r\n\r\n    private getSvgClass(): string {\r\n        return classNames('icon mod-lg ml1', {\r\n            'fill-orange': !!this.props.informationUrl,\r\n            'fill-medium-grey': !this.props.informationUrl,\r\n        });\r\n    }\r\n\r\n    private getCollapsibleHeaderIcon(): JSX.Element {\r\n        if (!this.props.informationUrl && !this.props.informationTooltip) {\r\n            return null;\r\n        }\r\n\r\n        const tooltipProps = {placement: 'right', ...this.props.informationTooltip};\r\n        const svgProps = {svgName: this.props.informationUrl ? 'help' : 'info', svgClass: this.getSvgClass()};\r\n\r\n        const collapsibleHeaderIcon = this.props.informationUrl ? (\r\n            <LinkSvg url={this.props.informationUrl} target=\"_blank\" tooltip={tooltipProps} svg={svgProps} />\r\n        ) : (\r\n            <Tooltip {...tooltipProps}>\r\n                <Svg {...svgProps} />\r\n            </Tooltip>\r\n        );\r\n\r\n        return <span className=\"round-contextual-help\">{collapsibleHeaderIcon}</span>;\r\n    }\r\n}\r\n"}}]);
//# sourceMappingURL=247.bundle.js.map