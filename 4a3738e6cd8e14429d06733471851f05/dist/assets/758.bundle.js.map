{"version":3,"sources":["webpack:///./src/components/tab/tests/TabPane.spec.tsx"],"names":[],"mappings":"6FAAA,OAAe","file":"assets/758.bundle.js","sourcesContent":["export default \"import {mount, ReactWrapper, shallow} from 'enzyme';\\r\\n// tslint:disable-next-line:no-unused-variable\\r\\nimport * as React from 'react';\\r\\nimport {ITabPaneProps, TabPane} from '../TabPane';\\r\\n\\r\\ndescribe('TabPane', () => {\\r\\n    const id: string = 'tab';\\r\\n\\r\\n    describe('<TabPane />', () => {\\r\\n        it('should render without errors', () => {\\r\\n            expect(() => {\\r\\n                shallow(<TabPane id={id} />);\\r\\n            }).not.toThrow();\\r\\n        });\\r\\n    });\\r\\n\\r\\n    describe('<Tab />', () => {\\r\\n        let tab: ReactWrapper<ITabPaneProps, any>;\\r\\n\\r\\n        beforeEach(() => {\\r\\n            tab = mount(<TabPane id={id} />, {attachTo: document.getElementById('App')});\\r\\n        });\\r\\n\\r\\n        afterEach(() => {\\r\\n            tab.detach();\\r\\n        });\\r\\n\\r\\n        it('should set active class on container when isActive is true', () => {\\r\\n            expect(\\r\\n                tab\\r\\n                    .find('div')\\r\\n                    .first()\\r\\n                    .hasClass('active')\\r\\n            ).toBe(false);\\r\\n\\r\\n            tab.setProps({id, isActive: true});\\r\\n            tab.mount();\\r\\n            expect(\\r\\n                tab\\r\\n                    .find('div')\\r\\n                    .first()\\r\\n                    .hasClass('active')\\r\\n            ).toBe(true);\\r\\n        });\\r\\n\\r\\n        it('should add classNames when className prop set', () => {\\r\\n            tab.setProps({id, className: 'hello'}).mount();\\r\\n            expect(\\r\\n                tab\\r\\n                    .find('div')\\r\\n                    .first()\\r\\n                    .hasClass('hello')\\r\\n            ).toBe(true);\\r\\n        });\\r\\n    });\\r\\n});\\r\\n\""],"sourceRoot":""}