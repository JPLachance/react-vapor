{"version":3,"sources":["webpack:///./src/components/syncFeedback/examples/SyncFeedbackExample.tsx?5d31","webpack:///./src/components/syncFeedback/SyncFeedback.tsx?5830"],"names":["render","className","state","NONE","SYNCING","SUCCESS","ERROR","feedback","SyncFeedbackState","classes","this","props","push","join","renderIcon","renderContent","svgName","svgClass"],"mappings":"meAGA,2B,+CAmCA,OAnCyC,OACrC,YAAAA,OAAA,WACI,OACI,uBAAKC,UAAU,OACX,yBAAOA,UAAU,sBAAoB,gBACrC,uBAAKA,UAAU,gBACX,uBAAKA,UAAU,O,uDAEX,gBAAC,IAAY,CAACC,MAAO,IAAkBC,QAE3C,uBAAKF,UAAU,O,qDAEX,gBAAC,IAAY,CAACC,MAAO,IAAkBE,UACvC,gBAAC,IAAY,CAACF,MAAO,IAAkBG,UACvC,gBAAC,IAAY,CAACH,MAAO,IAAkBI,SAE3C,uBAAKL,UAAU,O,yCAEX,gBAAC,IAAY,CACTC,MAAO,IAAkBE,QACzBG,SAAS,8DAEb,gBAAC,IAAY,CACTL,MAAO,IAAkBG,QACzBE,SAAS,8DAEb,gBAAC,IAAY,CACTL,MAAO,IAAkBI,MACzBC,SAAS,gEAOrC,EAnCA,CAAyC,c,8aCK5BC,EAAoB,CAC7BJ,QAAS,UACTC,QAAS,UACTC,MAAO,QACPH,KAAM,QAOV,2B,+CA8CA,OA9CkC,OAC9B,YAAAH,OAAA,WACI,IAAMS,EAAU,CAAC,iBAOjB,OANIC,KAAKC,MAAMT,QAAUM,EAAkBF,MACvCG,EAAQG,KAAK,aACNF,KAAKC,MAAMT,QAAUM,EAAkBH,SAC9CI,EAAQG,KAAK,eAIb,uBAAKX,UAAWQ,EAAQI,KAAK,MACxBH,KAAKI,aACLJ,KAAKK,kBAKV,YAAAD,WAAR,WACI,OAAIJ,KAAKC,MAAMT,QAAUM,EAAkBJ,QAChC,wBAAMH,UAAU,0CAChBS,KAAKC,MAAMT,QAAUM,EAAkBH,QACvC,gBAAC,IAAG,CAACW,QAAQ,QAAQf,UAAU,qBAAqBgB,SAAS,SAC7DP,KAAKC,MAAMT,QAAUM,EAAkBF,MACvC,gBAAC,IAAG,CAACU,QAAQ,QAAQf,UAAU,qBAAqBgB,SAAS,SAE7D,MAIP,YAAAF,cAAR,WACI,OAAIL,KAAKC,MAAMT,QAAUM,EAAkBJ,QAEnC,wBAAMH,UAAU,sBAAsBS,KAAKC,MAAMJ,UApCN,qBAsCxCG,KAAKC,MAAMT,QAAUM,EAAkBH,QAE1C,wBAAMJ,UAAU,sBAAsBS,KAAKC,MAAMJ,UAvCN,iBAyCxCG,KAAKC,MAAMT,QAAUM,EAAkBF,MAE1C,wBAAML,UAAU,sBAAsBS,KAAKC,MAAMJ,UA1CR,+BA6CtC,MAGnB,EA9CA,CAAkC","file":"assets/1009.bundle.js","sourcesContent":["import * as React from 'react';\r\nimport {SyncFeedback, SyncFeedbackState} from '../SyncFeedback';\r\n\r\nexport class SyncFeedbackExample extends React.Component<any, any> {\r\n    render() {\r\n        return (\r\n            <div className=\"mt2\">\r\n                <label className=\"form-control-label\">SyncFeedback</label>\r\n                <div className=\"form-control\">\r\n                    <div className=\"mb2\">\r\n                        A SyncFeedback component on state NONE is invisible.\r\n                        <SyncFeedback state={SyncFeedbackState.NONE} />\r\n                    </div>\r\n                    <div className=\"mb2\">\r\n                        There is a default feedback message for each state\r\n                        <SyncFeedback state={SyncFeedbackState.SYNCING} />\r\n                        <SyncFeedback state={SyncFeedbackState.SUCCESS} />\r\n                        <SyncFeedback state={SyncFeedbackState.ERROR} />\r\n                    </div>\r\n                    <div className=\"mb2\">\r\n                        You can pass a custom feedback message\r\n                        <SyncFeedback\r\n                            state={SyncFeedbackState.SYNCING}\r\n                            feedback=\"This message is a SyncFeedback component on state SYNCING\"\r\n                        />\r\n                        <SyncFeedback\r\n                            state={SyncFeedbackState.SUCCESS}\r\n                            feedback=\"This message is a SyncFeedback component on state SUCCESS\"\r\n                        />\r\n                        <SyncFeedback\r\n                            state={SyncFeedbackState.ERROR}\r\n                            feedback=\"This message is a SyncFeedback component on state ERROR\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {Svg} from '../svg/Svg';\r\n\r\nexport interface ISyncFeedbackProps {\r\n    feedback?: string;\r\n    state: string;\r\n}\r\n\r\nexport const SyncFeedbackState = {\r\n    SYNCING: 'SYNCING',\r\n    SUCCESS: 'SUCCESS',\r\n    ERROR: 'ERROR',\r\n    NONE: 'NONE',\r\n};\r\n\r\nexport const DEFAULT_SYNC_FEEDBACK_SYNCING_LABEL: string = 'Saving changes...';\r\nexport const DEFAULT_SYNC_FEEDBACK_SUCCESS_LABEL: string = 'Changes saved';\r\nexport const DEFAULT_SYNC_FEEDBACK_ERROR_LABEL: string = 'Changes could not be saved.';\r\n\r\nexport class SyncFeedback extends React.Component<ISyncFeedbackProps, any> {\r\n    render() {\r\n        const classes = ['sync-feedback'];\r\n        if (this.props.state === SyncFeedbackState.ERROR) {\r\n            classes.push('mod-error');\r\n        } else if (this.props.state === SyncFeedbackState.SUCCESS) {\r\n            classes.push('mod-success');\r\n        }\r\n\r\n        return (\r\n            <div className={classes.join(' ')}>\r\n                {this.renderIcon()}\r\n                {this.renderContent()}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private renderIcon() {\r\n        if (this.props.state === SyncFeedbackState.SYNCING) {\r\n            return <span className=\"status-dot syncing sync-feedback-icon\"></span>;\r\n        } else if (this.props.state === SyncFeedbackState.SUCCESS) {\r\n            return <Svg svgName=\"check\" className=\"sync-feedback-icon\" svgClass=\"icon\" />;\r\n        } else if (this.props.state === SyncFeedbackState.ERROR) {\r\n            return <Svg svgName=\"clear\" className=\"sync-feedback-icon\" svgClass=\"icon\" />;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    private renderContent() {\r\n        if (this.props.state === SyncFeedbackState.SYNCING) {\r\n            return (\r\n                <span className=\"sync-feedback-text\">{this.props.feedback || DEFAULT_SYNC_FEEDBACK_SYNCING_LABEL}</span>\r\n            );\r\n        } else if (this.props.state === SyncFeedbackState.SUCCESS) {\r\n            return (\r\n                <span className=\"sync-feedback-text\">{this.props.feedback || DEFAULT_SYNC_FEEDBACK_SUCCESS_LABEL}</span>\r\n            );\r\n        } else if (this.props.state === SyncFeedbackState.ERROR) {\r\n            return (\r\n                <span className=\"sync-feedback-text\">{this.props.feedback || DEFAULT_SYNC_FEEDBACK_ERROR_LABEL}</span>\r\n            );\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n"],"sourceRoot":""}