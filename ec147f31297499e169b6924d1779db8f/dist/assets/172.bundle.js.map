{"version":3,"sources":["webpack:///./src/components/examples/ServerSideSelectExampleUtils.tsx","webpack:///./src/components/examples/SingleSelectExamples.tsx"],"names":["usePhotosAPIMock","photos","setPhotos","totalEntries","setTotalEntries","params","overwrite","object","cleanParams","queryString","URLSearchParams","Object","entries","toString","fetch","then","response","parseInt","headers","get","json","newPhotos","PhotoItem","id","url","title","thumbnailUrl","className","href","target","src","alt","width","height","SingleSelectExample","SingleSelectConnectedExamples","ServerSideSingleSelectExample","description","defaultItems","displayValue","value","disabled","selectedDisplayValue","itemsWithAppendedValue","item","append","content","defaultFlatSelectOptions","generate","option","selected","matchPredicate","predicate","level","items","placeholder","canClear","buttonPrepend","toggleClasses","options","p","i","matchFilter","filter","indexOf","dropClasses","customValues","footer","ServerSideSingleSelect","state","props","filterValue","getFilterText","fetchPhotos","pageNbr","setPage","_page","_limit","map","photo","next","q","onUpdate","noFixedWidth"],"mappings":"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","file":"assets/172.bundle.js","sourcesContent":["import * as React from 'react';\nimport * as _ from 'underscore';\n\nexport interface PhotoProps {\n    albumId: string;\n    id: string;\n    title: string;\n    url: string;\n    thumbnailUrl: string;\n}\n\nconst IMG_SIZE = 50;\n\nconst clean = <T extends object>(object: T) => _.pick(object, _.identity);\n\nexport function usePhotosAPIMock(): [any[], number, (params?: any, overwrite?: boolean) => void] {\n    const [photos, setPhotos] = React.useState([]);\n    const [totalEntries, setTotalEntries] = React.useState(0);\n\n    function fetchPhotos(params?: any, overwrite = true) {\n        const cleanParams = clean(params);\n        const queryString = !_.isEmpty(cleanParams)\n            ? `?${new URLSearchParams(Object.entries(cleanParams)).toString()}`\n            : '';\n\n        return fetch(`https://jsonplaceholder.typicode.com/photos${queryString}`)\n            .then((response) => {\n                setTotalEntries(parseInt(response.headers.get('x-total-count'), 10));\n                return response.json();\n            })\n            .then((newPhotos) => {\n                if (overwrite) {\n                    setPhotos(newPhotos);\n                } else {\n                    setPhotos([...photos, ...newPhotos]);\n                }\n            });\n    }\n\n    return [photos, totalEntries, fetchPhotos];\n}\n\nexport const PhotoItem: React.FunctionComponent<PhotoProps> = ({id, url, title, thumbnailUrl}) => {\n    return (\n        <div className=\"flex flex-center\">\n            <a href={url} target=\"__blank\" className=\"mr2\">\n                <img src={thumbnailUrl} alt={title} width={IMG_SIZE} height={IMG_SIZE} />\n            </a>\n            <span>{title}</span>\n        </div>\n    );\n};\n","import * as React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {\r\n    FilterBoxSelectors,\r\n    IFlatSelectOptionProps,\r\n    IItemBoxProps,\r\n    ISingleSelectOwnProps,\r\n    Section,\r\n    selectWithFilter,\r\n    selectWithInfiniteScroll,\r\n    SelectWithInfiniteScrollProps,\r\n    SingleSelectConnected,\r\n    SingleSelectWithFilter,\r\n    SingleSelectWithPredicate,\r\n    SingleSelectWithPredicateAndFilter,\r\n    UUID,\r\n    withServerSideProcessing,\r\n} from 'react-vapor';\r\nimport * as _ from 'underscore';\r\n\r\nimport {IReactVaporExampleState} from '../../Reducers';\r\nimport {ExampleComponent} from '../ComponentsInterface';\r\nimport {PhotoItem, PhotoProps, usePhotosAPIMock} from './ServerSideSelectExampleUtils';\r\n\r\nexport const SingleSelectExample: ExampleComponent = () => (\r\n    <Section>\r\n        <SingleSelectConnectedExamples />\r\n        <ServerSideSingleSelectExample id=\"ServerSideSingleSelect\" />\r\n    </Section>\r\n);\r\n\r\nSingleSelectExample.description =\r\n    'A Single Select component allows users to choose a single option from a list or, if relevant, to create and select their own custom option.';\r\n\r\nconst defaultItems: IItemBoxProps[] = [\r\n    {displayValue: 'Test', value: '0'},\r\n    {displayValue: 'Test One', value: '1'},\r\n    {displayValue: 'Disabled', value: 'disabled', disabled: true},\r\n    {displayValue: 'Three', value: '3'},\r\n    {displayValue: 'Four', value: '4'},\r\n    {displayValue: 'Five', value: '5'},\r\n    {displayValue: 'Six', value: '6'},\r\n    {displayValue: 'Seven', value: '7', selectedDisplayValue: '007 Bond, James'},\r\n];\r\n\r\nconst itemsWithAppendedValue = _.map(defaultItems, (item) =>\r\n    _.extend({}, item, {append: {content: () => <span className=\"text-red ml3\">{item.value}</span>}})\r\n);\r\n\r\nconst defaultFlatSelectOptions: IFlatSelectOptionProps[] = [\r\n    {id: UUID.generate(), option: {content: 'All'}, selected: true},\r\n    {id: UUID.generate(), option: {content: 'even'}},\r\n    {id: UUID.generate(), option: {content: 'odd'}},\r\n];\r\n\r\nconst matchPredicate = (predicate: string, item: IItemBoxProps) => {\r\n    const value = parseInt(item.value, 10);\r\n    if (predicate === defaultFlatSelectOptions[0].id) {\r\n        return true;\r\n    } else if (predicate === defaultFlatSelectOptions[1].id) {\r\n        return value % 2 === 0;\r\n    } else if (predicate === defaultFlatSelectOptions[2].id) {\r\n        return value % 2 === 1;\r\n    } else {\r\n        return true;\r\n    }\r\n};\r\n\r\nconst SingleSelectConnectedExamples: React.ComponentType = () => (\r\n    <Section level={2} title=\"Single selects connected to store\">\r\n        <Section level={3} className=\"form-group\" title=\"A single select with some implementation props\">\r\n            <SingleSelectConnected\r\n                id={UUID.generate()}\r\n                items={defaultItems}\r\n                placeholder=\"Select something\"\r\n                canClear\r\n                buttonPrepend={<span>ðŸ‘‰ </span>}\r\n            />\r\n        </Section>\r\n        <Section level={3} title=\"A single select with some implementation props\">\r\n            <SingleSelectConnected\r\n                id={UUID.generate()}\r\n                items={defaultItems}\r\n                toggleClasses=\"mod-right\"\r\n                placeholder=\"Select something\"\r\n                canClear\r\n            />\r\n        </Section>\r\n        <Section level={3} title=\"A single select with predicates\">\r\n            <SingleSelectWithPredicate\r\n                id={UUID.generate()}\r\n                items={itemsWithAppendedValue}\r\n                options={defaultFlatSelectOptions}\r\n                matchPredicate={(p: string, i: IItemBoxProps) => matchPredicate(p, i)}\r\n            />\r\n        </Section>\r\n        <Section level={3} title=\"A single select with filter\">\r\n            <SingleSelectWithFilter id={UUID.generate()} items={itemsWithAppendedValue} />\r\n        </Section>\r\n        <Section level={3} title=\"A single select with a custom match filter that matches the exact value\">\r\n            <SingleSelectWithFilter\r\n                id={UUID.generate()}\r\n                items={itemsWithAppendedValue}\r\n                matchFilter={(filter: string, item: IItemBoxProps) =>\r\n                    _.isString(item.displayValue) ? item.displayValue.indexOf(filter) !== -1 : false\r\n                }\r\n            />\r\n        </Section>\r\n        <Section level={3} title=\"A single select with a filter, predicates, a lots of values and a footer\">\r\n            <SingleSelectWithPredicateAndFilter\r\n                id={UUID.generate()}\r\n                items={itemsWithAppendedValue}\r\n                options={defaultFlatSelectOptions}\r\n                matchPredicate={(p: string, i: IItemBoxProps) => matchPredicate(p, i)}\r\n                dropClasses=\"drop-this\"\r\n                customValues\r\n                footer={<div className=\"select-footer\">The single select footer</div>}\r\n            />\r\n        </Section>\r\n    </Section>\r\n);\r\n\r\nconst PER_PAGE = 10;\r\n\r\nconst mapStateToProps = (state: IReactVaporExampleState, props: {id: string}) => ({\r\n    filterValue: FilterBoxSelectors.getFilterText(state, props),\r\n});\r\n\r\nconst ServerSideSingleSelectExampleDisconnected: React.FunctionComponent<{id: string} & ReturnType<\r\n    typeof mapStateToProps\r\n>> = ({filterValue, id}) => {\r\n    const [photos, totalEntries, fetchPhotos] = usePhotosAPIMock();\r\n    const [pageNbr, setPage] = React.useState(1);\r\n\r\n    React.useEffect(() => {\r\n        fetchPhotos({_page: 1, _limit: PER_PAGE});\r\n    }, [PER_PAGE]);\r\n\r\n    function fetchNextPage() {\r\n        fetchPhotos({_page: pageNbr + 1, _limit: PER_PAGE, q: filterValue}, false);\r\n        setPage(pageNbr + 1);\r\n    }\r\n\r\n    function applyFilter() {\r\n        fetchPhotos({_page: 1, _limit: PER_PAGE, q: filterValue});\r\n        setPage(1);\r\n    }\r\n\r\n    return (\r\n        <Section level={2} title=\"Server side single select\">\r\n            <Section level={3} title=\"A single select using server-side filtering and pagination with infinite scroll\">\r\n                <ServerSideSingleSelect\r\n                    id={id}\r\n                    items={photos.map(\r\n                        (photo: PhotoProps): IItemBoxProps => ({\r\n                            value: photo.id,\r\n                            displayValue: <PhotoItem {...photo} />,\r\n                        })\r\n                    )}\r\n                    totalEntries={totalEntries}\r\n                    next={fetchNextPage}\r\n                    onUpdate={applyFilter}\r\n                    canClear\r\n                    noFixedWidth\r\n                />\r\n            </Section>\r\n        </Section>\r\n    );\r\n};\r\n\r\nconst ServerSideSingleSelect: React.ComponentType<ISingleSelectOwnProps & SelectWithInfiniteScrollProps> = _.compose(\r\n    withServerSideProcessing,\r\n    selectWithFilter,\r\n    selectWithInfiniteScroll\r\n)(SingleSelectConnected);\r\n\r\nconst ServerSideSingleSelectExample = connect(mapStateToProps)(ServerSideSingleSelectExampleDisconnected);\r\n"],"sourceRoot":""}