{"version":3,"sources":["webpack:///./src/components/examples/RefreshExamples.tsx"],"names":["RefreshExamples","undefined","dispatch","start","id","stop","props","level","title","label","name","className","onClick","callback","alert","delay","button","enabled","buttonContainerProps"],"mappings":"4FAAA,iFAuDaA,EAAkB,uBAAQC,GA1CZ,SAACC,GAAwB,OAChDC,MAAO,SAACC,GAAe,OAAAF,EAAS,yBAAuBC,MAAMC,KAC7DC,KAAM,SAACD,GAAe,OAAAF,EAAS,yBAAuBG,KAAKD,QAwChC,EArCK,SAACE,GAAiD,OAClF,gCACI,gBAAC,UAAO,CAACC,MAAO,EAAGC,MAAM,+BACrB,gBAAC,eAAY,CAACC,MAAM,mBAChB,gBAAC,SAAM,CAACC,KAAK,QAAQC,UAAU,UAAUC,QAAS,WAAM,OAAAN,EAAMH,MAAM,gBACpE,gBAAC,SAAM,CAACO,KAAK,OAAOC,UAAU,MAAMC,QAAS,WAAM,OAAAN,EAAMD,KAAK,gBAC9D,2BACI,gBAAC,kBAAe,CAACD,GAAG,YAAYS,SAAU,WAAM,OAAAC,MAAM,qBAIlE,gBAAC,UAAO,CAACP,MAAO,EAAGC,MAAM,uDACrB,gBAAC,eAAY,CAACC,MAAM,mBAChB,gBAAC,SAAM,CAACC,KAAK,QAAQC,UAAU,UAAUC,QAAS,WAAM,OAAAN,EAAMH,MAAM,gBACpE,gBAAC,SAAM,CAACO,KAAK,OAAOC,UAAU,MAAMC,QAAS,WAAM,OAAAN,EAAMD,KAAK,gBAC9D,2BACI,gBAAC,4BAAyB,CACtBD,GAAG,YACHW,MAAO,GACPF,SAAU,SAACV,GACPW,MAAM,eACNX,KAEJa,OAAQ,CACJN,KAAM,UACNO,SAAS,GAEbC,qBAAsB,CAClBP,UAAW","file":"assets/167.bundle.js","sourcesContent":["import * as React from 'react';\nimport {connect} from 'react-redux';\nimport {\n    Button,\n    ButtonWithRefreshCallback,\n    IDispatch,\n    LabeledInput,\n    RefreshCallback,\n    RefreshCallBackActions,\n    Section,\n} from 'react-vapor';\n\n// start-print\nconst mapDispatchToProps = (dispatch: IDispatch) => ({\n    start: (id: string) => dispatch(RefreshCallBackActions.start(id)),\n    stop: (id: string) => dispatch(RefreshCallBackActions.stop(id)),\n});\n\nconst RefreshExamplesDisconnected = (props: ReturnType<typeof mapDispatchToProps>) => (\n    <>\n        <Section level={2} title=\"Component to handle Refresh\">\n            <LabeledInput label=\"Refresh counter\">\n                <Button name=\"Start\" className=\"btn mr2\" onClick={() => props.start('refresh-1')} />\n                <Button name=\"Stop\" className=\"btn\" onClick={() => props.stop('refresh-1')} />\n                <div>\n                    <RefreshCallback id=\"refresh-1\" callback={() => alert('refresh end')} />\n                </div>\n            </LabeledInput>\n        </Section>\n        <Section level={2} title=\"Component with a button to call the refreshCallback\">\n            <LabeledInput label=\"Refresh counter\">\n                <Button name=\"Start\" className=\"btn mr2\" onClick={() => props.start('refresh-2')} />\n                <Button name=\"Stop\" className=\"btn\" onClick={() => props.stop('refresh-2')} />\n                <div>\n                    <ButtonWithRefreshCallback\n                        id=\"refresh-2\"\n                        delay={20}\n                        callback={(start) => {\n                            alert('refresh end');\n                            start();\n                        }}\n                        button={{\n                            name: 'Refresh',\n                            enabled: true,\n                        }}\n                        buttonContainerProps={{\n                            className: 'mb2',\n                        }}\n                    />\n                </div>\n            </LabeledInput>\n        </Section>\n    </>\n);\n\nexport const RefreshExamples = connect(undefined, mapDispatchToProps)(RefreshExamplesDisconnected);\n// stop-print\n"],"sourceRoot":""}