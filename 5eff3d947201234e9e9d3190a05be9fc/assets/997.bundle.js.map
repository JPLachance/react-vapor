{"version":3,"sources":["webpack:///./src/components/table-hoc/examples/TableHOCExamples.tsx?2428","webpack:///./src/components/table-hoc/examples/TableHOCLoadingExamples.tsx?bd4e","webpack:///./src/utils/HocUtils.ts?58b1","webpack:///./src/components/table-hoc/TableSelectors.ts?4528","webpack:///./src/utils/UUID.ts?611d","webpack:///./src/components/filterBox/FilterBox.tsx?d7c0","webpack:///./src/components/blankSlate/BlankSlate.tsx?79f5","webpack:///./src/utils/PropsToOmitUtils.ts?e979","webpack:///./src/components/filterBox/FilterBoxConnected.tsx?7041","webpack:///./src/components/blankSlate/BlankSlatesHOC.tsx?a4e2","webpack:///./src/components/blankSlate/BlankSlateWithError.tsx?f438","webpack:///./src/components/blankSlate/BlankSlateWithTable.tsx?5bb7","webpack:///./src/components/navigation/pagination/NavigationPagination.tsx?54ce","webpack:///./src/components/select/SingleSelectConnected.tsx?7086","webpack:///./src/components/table-hoc/styles/TableWithPredicates.scss?9cba","webpack:///./src/utils/FalsyValuesUtils.ts?347a","webpack:///./src/utils/BrowserUtils.ts?cd6b","webpack:///./src/utils/ComponentUtils.ts?4c99","webpack:///./src/utils/JSONUtils.ts?2cdd","webpack:///./src/utils/ValidComponentChildren.ts?995c","webpack:///./src/components/filterBox/index.ts?45c4","webpack:///./src/utils/ClassNameUtils.ts?6c45","webpack:///./src/components/navigation/NavigationConnected.tsx?152a","webpack:///./src/components/navigation/NavigationSelectors.ts?90e7","webpack:///./src/components/section/index.ts?360e","webpack:///./src/components/loading/LoadingConnected.tsx?2c73","webpack:///./src/components/navigation/Navigation.tsx?cb6a","webpack:///./src/components/pagination/index.ts?4130","webpack:///./src/components/navigation/pagination/NavigationPaginationConnected.tsx?e5e9","webpack:///./src/components/navigation/perPage/NavigationPerPageConnected.tsx?c59a","webpack:///./src/utils/index.ts?fdf4","webpack:///./src/components/blankSlate/index.ts?d15a","webpack:///./src/components/table-hoc/TableHOC.tsx?4df5","webpack:///./src/components/table-hoc/TableWithBlankSlate.tsx?41ac","webpack:///./src/components/table-hoc/TableWithFilter.tsx?b1b3","webpack:///./src/components/table-hoc/TableHeaderWithSort.tsx?5c33","webpack:///./src/components/table-hoc/TableRowConnected.tsx?a2e7","webpack:///./src/utils/EventUtils.ts?7b38","webpack:///./src/components/table-hoc/TableWithActions.tsx?7897","webpack:///./src/components/table-hoc/TableWithDatePicker.tsx?825f","webpack:///./src/components/table-hoc/TableWithPredicate.tsx?0ea2","webpack:///./src/components/table-hoc/TableWithSort.tsx?06cf","webpack:///./src/components/table-hoc/TableWithPagination.tsx?37fc","webpack:///./src/components/table-hoc/styles/TableWithPredicates.scss?c027"],"names":["TableHOCExamples","title","level","TableWithActionsAndDataFiltering","id","data","twoHundredRowsOfData","generateDataWithFacker","length","i","fakedData","contextualCard","city","address","email","username","dateOfBirth","dob","generate","rowActions","primary","icon","name","enabled","trigger","alert","callOnDoubleClick","unrepeatable","requiresConfirmation","confirmLabel","confirmType","buttonLabels","confirm","cancel","generateTableRow","allData","tableId","map","key","actions","toLowerCase","toLocaleDateString","tableDatePickerConfig","datesSelectionBoxes","matchDates","lowerLimit","upperLimit","years","getPreviousYears","currentYear","toString","initialDateRange","subtract","toDate","matchPredicate","predicate","rowData","matchCity","matchEmail","sort","isAsc","a","b","Date","dateCompare","compare","localeCompare","predicateSetup","prepend","className","values","displayValue","value","selected","undefined","dispatch","resetFilter","TableWithActionsAndDataFilteringComposed","description","buttons","onClick","perPageNumbers","renderBody","Alldata","tableHeader","showBorderTop","TableHocLoadingExamples","TableLoadingExamplesWithDataNull","TableLoadingExamplesWithData","BigTableLoadingExample","fiveDataRows","TableLoadingComposed","isLoading","matchFilter","filter","indexOf","HocUtils","supplyConfig","supplier","initialTableSort","TableSelectors","getIsEmpty","state","props","getDataCount","tablePaginationState","tableHOCPagination","isServer","count","getSort","tableHOCHeader","v","getTableRow","tableHOCRow","getSelectedRows","d","now","replace","c","r","Math","random","floor","handleChange","nextInputValue","filterInput","nextElementSibling","setAttribute","onFilterCallback","onFilter","clearValue","focus","handleOnBlur","this","onBlur","handleOnKeyDown","e","onKeyDown","handleOnKeyUp","onKeyUp","placeCursorAtEndOfInputValue","input","target","temp","componentWillMount","onRender","componentWillUnmount","onDestroy","componentWillReceiveProps","nextProps","filterText","render","inputMaxWidth","maxWidth","filterPlaceholder","filterBoxContainerClasses","containerClasses","filterInputClasses","truncate","svgClearClasses","hidden","style","withTitleOnInput","ref","type","placeholder","onChange","currentTarget","onFocus","autoFocus","isAutoFocus","svgName","svgClass","children","defaultProps","getSvgTemplate","getDescriptionTemplate","descriptionClassName","getButtonsTemplate","buttonProps","blankSlateClasses","withModal","classes","join","modalClasses","additionalSection","internalComponentPropsToOmit","PropsToOmitUtils","internal","debouncedFilterThrough","FilterBoxConnected","ownProps","getFilterText","mergeProps","BlankSlateWithTable","BlankSlateWithTableInError","BlankSlateWithError","blankSlateWithError","Component","info","blankSlateWithTable","numberOfColumn","colSpan","componentProps","handlePageClick","pageNb","currentPage","onPageClick","componentDidUpdate","totalPages","componentDidMount","showXPages","abs","numberOfPagesToShow","previousLabel","nextLabel","start","end","lastPage","previousClasses","nextClasses","pageSelects","hidePages","max","min","p","push","selectPropsKeys","mapStateToProps","customSelected","getListState","selectedOption","getListBoxSelected","mapDispatchToProps","deselect","getButton","option","items","showClear","canClear","disabled","buttonClasses","toggleClasses","noFixedWidth","buttonPrepend","getSelectedOptionElement","append","getDeselectOptionButton","handleDeselect","prevProps","onSelectOptionCallback","button","selectedDisplayValue","deselectTooltipText","placement","noSpanWrapper","clear","SingleSelectConnected","exports","module","locals","convertUndefinedAndNullToEmptyString","BrowserUtils","isIE","navigator","userAgent","appVersion","DisplayClass","BLOCK","INLINE","INLINE_BLOCK","HIDDEN","TABLE","TABLE_CELL","fakeJSON","_id","index","guid","isActive","balance","picture","age","eyeColor","first","last","company","phone","about","registered","latitude","longitude","tags","range","friends","greeting","favoriteFruit","fakeJSONCopy","otherThing","fakeJSON1","JSONToString","json","JSON","stringify","func","context","child","call","getAdditionalClasses","additionalClasses","dataToUse","additionalClass","condition","NavigationConnected","item","loadings","isOn","withReduxState","NavigationSelectors","getPaginationPage","pagination","paginationComposite","getPerPage","perPageComposite","perPage","LoadingConnected","paginationProps","loadingIds","paginationClass","perPageProps","label","perPageLabel","totalEntries","initialPosition","currentPerPage","onPerPageClick","perPageClass","navigationClasses","loading","NavigationPaginationConnected","NavigationPerPageConnected","perPageNumber","defaultInitialPosition","ceil","perPageNb","oldPerPageNb","table","Body","numberOfRow","defaultLoadingRow","numberOfColumns","containerClassName","renderActions","hasActionButtons","removeDefaultContainerClasses","extraContainerClasses","split","TableWithBlankSlatePropsToOmit","tableWithBlankSlate","isEmpty","newProps","TableWithBlankSlate","TableWithFilterPropsToOmit","defaultMatchFilter","datum","tableWithFilter","blankSlate","config","urlFilter","onUpdate","filterAction","newActions","withFilter","urlParams","getSearchParams","TableWithFilter","tableSort","sorted","onMount","addTableHeader","isDefault","onSort","sortTable","onUnmount","removeTableHeader","headerCellClasses","small","TableHeaderWithSort","TableRowPropsToOmit","isCollapsible","collapsible","content","opened","refreshActionBarActions","isMulti","select","add","expandOnMount","toggleCollapsible","isSelected","remove","handleClick","onCollapsibleClick","isOpened","onToggleCollapsible","onUpdateToCollapsibleRow","onActionBarActionsChanged","isClickingInsideElementWithClassname","metaKey","ctrlKey","isMultiselect","handleDoubleClick","action","forEach","link","window","location","href","preventDefault","stopPropagation","rowIsCollapsible","collapsibleContentRow","in","columnCount","timeout","TIMEOUT","duration","collapsibleRowToggle","customToggle","renderCustomToggleCell","expanded","svgClassName","onDoubleClick","toArray","TableRowConnected","classname","isClickingInside","classList","contains","parentElement","tableWithActions","handleDocumentClick","hasSelectedRow","document","body","closest","deselectRows","addEventListener","removeEventListener","deselectAll","TableWithActions","defaultMatchDates","tableWithDatePicker","lowerDateLimitFromUrl","lowerDateLimit","upperDateLimitFromUrl","upperDateLimit","valueOf","datePickerAction","onRight","TableWithDatePicker","TableWithPredicatePropsToOmit","defaultMatchPredicate","tableWithPredicate","getPredicateId","possiblePredicates","getPredicateIds","urlPredicate","Object","keys","includes","predicateAction","TableWithPredicate","TableWithSortPropsToOmit","defaultSort","tableWithSort","sortKey","TableWithSort","TableWithPaginationProps","sliceData","startingIndex","endingIndex","slice","tableWithPagination","getPaginationId","TableWithPagination","options","transform","update","hot","accept","newContent","idx","Error","dispose"],"mappings":"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","file":"assets/997.bundle.js","sourcesContent":["import {helpers, seed} from 'faker/locale/en';\r\nimport * as moment from 'moment';\r\nimport * as React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport * as _ from 'underscore';\r\n\r\nimport {IDispatch} from '../../../utils';\r\nimport {DateUtils} from '../../../utils/DateUtils';\r\nimport {UUID} from '../../../utils/UUID';\r\nimport {SELECTION_BOXES_LONG} from '../../datePicker/examples/DatePickerExamplesCommon';\r\nimport {filterThrough} from '../../filterBox';\r\nimport {Section} from '../../section';\r\nimport {TableHeaderWithSort} from '../TableHeaderWithSort';\r\nimport {TableHOC} from '../TableHOC';\r\nimport {TableRowConnected} from '../TableRowConnected';\r\nimport {tableWithActions} from '../TableWithActions';\r\nimport {tableWithBlankSlate} from '../TableWithBlankSlate';\r\nimport {tableWithDatePicker} from '../TableWithDatePicker';\r\nimport {tableWithFilter} from '../TableWithFilter';\r\nimport {tableWithPagination} from '../TableWithPagination';\r\nimport {tableWithPredicate} from '../TableWithPredicate';\r\nimport {tableWithSort} from '../TableWithSort';\r\n\r\nexport interface IExampleRowData {\r\n    city: string;\r\n    email: string;\r\n    username: string;\r\n    dateOfBirth: Date;\r\n    id: string;\r\n}\r\n\r\nexport const TableHOCExamples = () => (\r\n    <Section title=\"Table HOC\">\r\n        <Section level={2} title=\"Table with Data\">\r\n            <TableWithActionsAndDataFiltering id=\"TableWithActionsAndDataFiltering\" data={twoHundredRowsOfData} />\r\n        </Section>\r\n        <Section level={2} title=\"Table without data\">\r\n            <TableWithActionsAndDataFiltering id=\"TableWithActionsAndDataFiltering2\" data={[]} />\r\n        </Section>\r\n    </Section>\r\n);\r\n\r\n// https://github.com/marak/Faker.js/\r\nexport const generateDataWithFacker = (length: number) =>\r\n    _.map(_.range(length), (i: number) => {\r\n        seed(i + 1);\r\n        const fakedData = helpers.contextualCard();\r\n        return {\r\n            city: fakedData.address.city,\r\n            email: fakedData.email,\r\n            username: fakedData.username,\r\n            dateOfBirth: fakedData.dob,\r\n            id: UUID.generate(),\r\n        };\r\n    });\r\nconst twoHundredRowsOfData = generateDataWithFacker(200);\r\n\r\n// start-print\r\n\r\nconst rowActions = [\r\n    {\r\n        primary: true,\r\n        icon: 'edit',\r\n        name: 'edit',\r\n        enabled: true,\r\n        trigger: () => alert('trigger on action'),\r\n        callOnDoubleClick: true,\r\n    },\r\n    {primary: false, icon: 'view', name: 'view', enabled: true},\r\n    {primary: false, icon: 'copy', name: 'copy', enabled: true},\r\n    {\r\n        primary: false,\r\n        icon: 'delete',\r\n        name: 'delete',\r\n        enabled: true,\r\n        unrepeatable: true,\r\n        requiresConfirmation: {\r\n            confirmLabel: 'wanna do it ?',\r\n            confirmType: 'danger',\r\n            buttonLabels: {\r\n                confirm: 'Confirm',\r\n                cancel: 'Cancel',\r\n            },\r\n        },\r\n    },\r\n];\r\n\r\nconst renderHeader = (tableId: string) => (\r\n    <thead>\r\n        <tr>\r\n            <TableHeaderWithSort id=\"city\" tableId={tableId}>\r\n                City\r\n            </TableHeaderWithSort>\r\n            <TableHeaderWithSort id=\"email\" tableId={tableId}>\r\n                Email\r\n            </TableHeaderWithSort>\r\n            <TableHeaderWithSort id=\"username\" tableId={tableId}>\r\n                Username\r\n            </TableHeaderWithSort>\r\n            <th>Date of birth</th>\r\n        </tr>\r\n    </thead>\r\n);\r\n\r\nexport const generateTableRow = (allData: IExampleRowData[], tableId: string) =>\r\n    allData.map((data: IExampleRowData) => (\r\n        <TableRowConnected id={data.id} tableId={tableId} key={data.id} actions={rowActions}>\r\n            <td key=\"city\">{data.city}</td>\r\n            <td key=\"email\">{data.email.toLowerCase()}</td>\r\n            <td key=\"username\">{data.username.toLowerCase()}</td>\r\n            <td key=\"date-of-birth\">{data.dateOfBirth.toLocaleDateString()}</td>\r\n        </TableRowConnected>\r\n    ));\r\n\r\nconst tableDatePickerConfig = () => ({\r\n    datesSelectionBoxes: SELECTION_BOXES_LONG,\r\n    matchDates: (data: IExampleRowData, lowerLimit: Date, upperLimit?: Date) =>\r\n        _.isUndefined(upperLimit) || (lowerLimit <= data.dateOfBirth && data.dateOfBirth <= upperLimit),\r\n    years: [...DateUtils.getPreviousYears(100), DateUtils.currentYear.toString()],\r\n    initialDateRange: [\r\n        moment()\r\n            .subtract(75, 'years')\r\n            .toDate(),\r\n        moment().toDate(),\r\n    ],\r\n});\r\n\r\nconst matchPredicate = (predicate: string, rowData: IExampleRowData) => {\r\n    const matchCity = predicate === rowData.city;\r\n    const matchEmail = predicate === rowData.email;\r\n    return !predicate || matchCity || matchEmail;\r\n};\r\n\r\nconst sort = (key: keyof IExampleRowData, isAsc: boolean, a: IExampleRowData, b: IExampleRowData) => {\r\n    if (key) {\r\n        if (a[key] instanceof Date) {\r\n            const dateCompare = (a[key] as any) - (b[key] as any);\r\n            return isAsc ? dateCompare : -1 * dateCompare;\r\n        }\r\n        const compare = (a[key] as string).toLowerCase().localeCompare((b[key] as string).toLowerCase());\r\n\r\n        return isAsc ? compare : -1 * compare;\r\n    }\r\n    return 0;\r\n};\r\n\r\nconst predicateSetup = {\r\n    id: 'firstPredicate',\r\n    prepend: <span className=\"mr1 text-medium-grey\">prepend:</span>,\r\n    values: [\r\n        {displayValue: 'All', value: '', selected: true},\r\n        {displayValue: twoHundredRowsOfData[2].city, value: twoHundredRowsOfData[2].city},\r\n        {displayValue: twoHundredRowsOfData[1].email, value: twoHundredRowsOfData[1].email},\r\n    ],\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: IDispatch) => ({\r\n    resetFilter: (id: string) => dispatch(filterThrough(id, '')),\r\n});\r\n\r\ntype TableWithActionsAndDataFilteringProps = ReturnType<typeof mapDispatchToProps>;\r\n\r\nconst TableWithActionsAndDataFilteringDisconnected: React.FunctionComponent<{\r\n    data: any[];\r\n    id: string;\r\n} & TableWithActionsAndDataFilteringProps> = ({id, data, resetFilter}) => {\r\n    const TableWithActionsAndDataFilteringComposed = _.compose(\r\n        tableWithBlankSlate({\r\n            title: 'No data',\r\n        }),\r\n        tableWithPredicate({\r\n            ...predicateSetup,\r\n            matchPredicate,\r\n        }),\r\n        tableWithFilter(), // using the default matchfilter\r\n        tableWithBlankSlate({\r\n            title: 'No results',\r\n            description: 'Try reviewing the specified filters above or clearing all filters.',\r\n            buttons: [\r\n                {\r\n                    name: 'Clear filter',\r\n                    enabled: true,\r\n                    onClick: () => resetFilter(id),\r\n                },\r\n            ],\r\n        }),\r\n        tableWithSort({sort}),\r\n        tableWithDatePicker(...(tableDatePickerConfig as any)),\r\n        tableWithPagination({perPageNumbers: [3, 5, 10]}),\r\n        tableWithActions()\r\n    )(TableHOC);\r\n\r\n    return (\r\n        <TableWithActionsAndDataFilteringComposed\r\n            id={id}\r\n            className=\"table\"\r\n            data={data}\r\n            renderBody={(Alldata: IExampleRowData[]) => generateTableRow(Alldata, id)}\r\n            tableHeader={renderHeader(id)}\r\n            showBorderTop\r\n        />\r\n    );\r\n};\r\n\r\nconst TableWithActionsAndDataFiltering = connect(\r\n    undefined,\r\n    mapDispatchToProps\r\n)(TableWithActionsAndDataFilteringDisconnected);\r\n","import * as React from 'react';\nimport * as _ from 'underscore';\nimport {ExampleComponent} from '../../../../docs/src/components/ComponentsInterface';\nimport {Section} from '../../section/Section';\nimport {TableHOC} from '../TableHOC';\nimport {tableWithBlankSlate} from '../TableWithBlankSlate';\nimport {tableWithFilter} from '../TableWithFilter';\nimport {generateDataWithFacker, generateTableRow} from './TableHOCExamples';\n\nexport const TableHocLoadingExamples: ExampleComponent = () => (\n    <Section level={1} title=\"Table loading examples\">\n        <Section level={2} title=\"Table loading with the default number of row\">\n            <TableLoadingExamplesWithDataNull />\n        </Section>\n        <Section level={2} title=\"Table loading with the number of row equal to the number of data\">\n            <TableLoadingExamplesWithData />\n        </Section>\n        <Section level={2} title=\"Big table loading\">\n            <BigTableLoadingExample />\n        </Section>\n    </Section>\n);\nTableHocLoadingExamples.title = 'TableHOC loading';\n\nconst fiveDataRows = generateDataWithFacker(10);\n\n// start-print\n\nconst tableId = 'TableLoadingExamples';\nconst TableLoadingExamplesWithDataNull: React.FunctionComponent = () => (\n    <Section>\n        <TableLoadingComposed id={tableId} className=\"table\" data={null} renderBody={generateTableRow} isLoading />\n    </Section>\n);\n\nconst TableLoadingExamplesWithData: React.FunctionComponent = () => (\n    <Section>\n        <TableLoadingComposed\n            id={tableId}\n            className=\"table\"\n            data={fiveDataRows}\n            renderBody={generateTableRow}\n            isLoading\n        />\n    </Section>\n);\n\nconst BigTableLoadingExample: React.FunctionComponent = () => (\n    <Section>\n        <TableLoadingComposed\n            id={tableId}\n            className=\"table big-table\"\n            data={fiveDataRows}\n            renderBody={generateTableRow}\n            isLoading\n        />\n    </Section>\n);\n\nconst TableLoadingComposed = _.compose(\n    tableWithBlankSlate({title: 'No data caused the table to be empty'}),\n    tableWithFilter({\n        matchFilter: (filter: string, data: any) => data.username.toLowerCase().indexOf(filter.toLowerCase()) !== -1,\n    }),\n    tableWithBlankSlate({title: 'Filter caused the table to be empty'})\n)(TableHOC);\n","import * as _ from 'underscore';\r\n\r\nexport type ConfigSupplier<C = {}> = C | ((...args: any[]) => C);\r\n\r\nexport const HocUtils = {\r\n    supplyConfig: <C>(supplier: ConfigSupplier<C>): C => (_.isFunction(supplier) ? supplier() : supplier),\r\n};\r\n","import * as _ from 'underscore';\r\n\r\nimport {IReactVaporState} from '../../ReactVapor';\r\nimport {HOCTableRowState} from './reducers/TableRowReducers';\r\nimport {ITableWithSortState} from './reducers/TableWithSortReducers';\r\n\r\nexport interface TableSelectorsProps {\r\n    id: string;\r\n    data: any[];\r\n    isServer?: boolean;\r\n}\r\n\r\nconst initialTableSort: ITableWithSortState = {\r\n    id: '',\r\n    tableId: '',\r\n    isAsc: true,\r\n};\r\n\r\nconst getIsEmpty = (state: IReactVaporState, props: TableSelectorsProps): boolean =>\r\n    props.data !== null && (!props.data || props.data.length === 0);\r\n\r\nconst getDataCount = (state: IReactVaporState, props: TableSelectorsProps): number => {\r\n    const tablePaginationState = _.findWhere(state.tableHOCPagination, {id: props.id});\r\n    return props.isServer\r\n        ? (tablePaginationState && tablePaginationState.count) || 0\r\n        : (props.data && props.data.length) || 0;\r\n};\r\n\r\nconst getSort = (state: IReactVaporState, props: TableSelectorsProps): ITableWithSortState =>\r\n    _.find(state.tableHOCHeader, (v: ITableWithSortState) => v.tableId === props.id && _.isBoolean(v.isAsc)) ||\r\n    initialTableSort;\r\n\r\nconst getTableRow = (state: IReactVaporState, {id}: {id: string}): HOCTableRowState =>\r\n    _.findWhere(state.tableHOCRow, {id});\r\n\r\nconst getSelectedRows = (state: IReactVaporState, {id}: {id: string}): HOCTableRowState[] =>\r\n    _.where(state.tableHOCRow, {tableId: id, selected: true});\r\n\r\nexport const TableSelectors = {\r\n    getIsEmpty,\r\n    getDataCount,\r\n    getSort,\r\n    getTableRow,\r\n    getSelectedRows,\r\n};\r\n","// tslint:disable\r\nexport class UUID {\r\n    // TODO: replace for https://www.npmjs.com/package/uuid\r\n    static generate() {\r\n        // Source: https://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\r\n        let d = Date.now();\r\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c: string) => {\r\n            const r = (d + Math.random() * 16) % 16 | 0;\r\n            d = Math.floor(d / 16);\r\n            return (c === 'x' ? r : (r & 0x3) | 0x8).toString(16);\r\n        });\r\n    }\r\n}\r\n// tslint:enable\r\n","import * as classNames from 'classnames';\r\nimport * as React from 'react';\r\nimport {Svg} from '../svg/Svg';\r\n\r\nexport interface IFilterBoxOwnProps extends React.ClassAttributes<FilterBox> {\r\n    id?: string;\r\n    containerClasses?: string[];\r\n    filterPlaceholder?: string;\r\n    onBlur?: () => void;\r\n    onKeyDown?: (e: React.KeyboardEvent<HTMLInputElement>) => void;\r\n    onKeyUp?: (e: React.KeyboardEvent<HTMLInputElement>) => void;\r\n    isAutoFocus?: boolean;\r\n    maxWidth?: number;\r\n    withTitleOnInput?: boolean;\r\n    truncate?: boolean;\r\n    onFilterCallback?: (id: string, filterText: string) => void;\r\n    className?: string;\r\n}\r\n\r\nexport interface IFilterBoxStateProps {\r\n    filterText?: string;\r\n}\r\n\r\nexport interface IFilterBoxDispatchProps {\r\n    onRender?: (id: string) => void;\r\n    onDestroy?: (id: string) => void;\r\n    onFilter?: (id: string, filterText: string) => void;\r\n}\r\n\r\nexport interface IFilterBoxProps extends IFilterBoxOwnProps, IFilterBoxStateProps, IFilterBoxDispatchProps {}\r\n\r\nexport const FILTER_PLACEHOLDER: string = 'Filter';\r\n\r\nexport class FilterBox extends React.Component<IFilterBoxProps, any> {\r\n    filterInput: HTMLInputElement;\r\n\r\n    constructor(props: IFilterBoxProps) {\r\n        super(props);\r\n    }\r\n\r\n    static defaultProps: Partial<IFilterBoxProps> = {\r\n        isAutoFocus: false,\r\n    };\r\n\r\n    private handleChange = (nextInputValue: string) => {\r\n        this.filterInput.value = nextInputValue;\r\n        this.filterInput.nextElementSibling.setAttribute('class', this.filterInput.value.length ? '' : 'hidden');\r\n\r\n        if (this.props.onFilterCallback) {\r\n            this.props.onFilterCallback(this.props.id, this.filterInput.value);\r\n        }\r\n\r\n        if (this.props.onFilter) {\r\n            this.props.onFilter(this.props.id, this.filterInput.value);\r\n        }\r\n    };\r\n\r\n    private handleOnBlur() {\r\n        if (this.props.onBlur) {\r\n            this.props.onBlur();\r\n        }\r\n    }\r\n\r\n    private handleOnKeyDown(e: React.KeyboardEvent<HTMLInputElement>) {\r\n        if (this.props.onKeyDown) {\r\n            this.props.onKeyDown(e);\r\n        }\r\n    }\r\n\r\n    private handleOnKeyUp(e: React.KeyboardEvent<HTMLInputElement>) {\r\n        if (this.props.onKeyUp) {\r\n            this.props.onKeyUp(e);\r\n        }\r\n    }\r\n\r\n    private clearValue = () => {\r\n        this.filterInput.focus();\r\n        this.handleChange('');\r\n    };\r\n\r\n    placeCursorAtEndOfInputValue(e: React.FocusEvent<any>) {\r\n        const input = e.target as HTMLInputElement;\r\n        const temp = input.value;\r\n        input.value = '';\r\n        input.value = temp;\r\n    }\r\n\r\n    componentWillMount() {\r\n        if (this.props.onRender) {\r\n            this.props.onRender(this.props.id);\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (this.props.onDestroy) {\r\n            this.props.onDestroy(this.props.id);\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps: IFilterBoxProps) {\r\n        if (this.props.filterText !== nextProps.filterText && this.filterInput.value !== nextProps.filterText) {\r\n            this.handleChange(nextProps.filterText);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const inputMaxWidth = {maxWidth: `${this.props.maxWidth}px`};\r\n        const filterPlaceholder = this.props.filterPlaceholder || FILTER_PLACEHOLDER;\r\n        const filterBoxContainerClasses = classNames('filter-container', this.props.containerClasses);\r\n        const filterInputClasses = classNames('filter-box', {truncate: this.props.truncate});\r\n        const svgClearClasses = classNames({hidden: !(this.filterInput && this.filterInput.value)});\r\n\r\n        return (\r\n            <div className={this.props.className}>\r\n                <div\r\n                    id={this.props.id}\r\n                    className={filterBoxContainerClasses}\r\n                    style={inputMaxWidth}\r\n                    title={this.filterInput && this.props.withTitleOnInput ? this.filterInput.value : undefined}\r\n                >\r\n                    <input\r\n                        ref={(filterInput: HTMLInputElement) => (this.filterInput = filterInput)}\r\n                        type=\"text\"\r\n                        className={filterInputClasses}\r\n                        placeholder={filterPlaceholder}\r\n                        onChange={(e: React.FormEvent<HTMLInputElement>) => this.handleChange(e.currentTarget.value)}\r\n                        onBlur={() => this.handleOnBlur()}\r\n                        onFocus={(e: React.FocusEvent<HTMLInputElement>) => {\r\n                            this.placeCursorAtEndOfInputValue(e);\r\n                        }}\r\n                        onKeyDown={(e) => this.handleOnKeyDown(e)}\r\n                        onKeyUp={(e) => this.handleOnKeyUp(e)}\r\n                        style={inputMaxWidth}\r\n                        autoFocus={this.props.isAutoFocus}\r\n                    />\r\n                    <Svg\r\n                        svgName=\"clear\"\r\n                        className={svgClearClasses}\r\n                        svgClass=\"icon mod-lg fill-medium-grey\"\r\n                        onClick={() => this.clearValue()}\r\n                    />\r\n                    <Svg svgName=\"filter\" className=\"filter-icon\" svgClass=\"icon fill-medium-grey mod-lg\" />\r\n                </div>\r\n                {this.props.children}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import * as classNames from 'classnames';\r\nimport * as React from 'react';\r\nimport * as _ from 'underscore';\r\nimport {IBaseActionOptions} from '../actions/Action';\r\nimport {Button} from '../button/Button';\r\nimport {Svg} from '../svg/Svg';\r\n\r\nexport interface IBlankSlateProps extends React.ClassAttributes<BlankSlate> {\r\n    title?: React.ReactNode;\r\n    description?: React.ReactNode;\r\n    additionalSection?: React.ReactNode;\r\n    buttons?: IBaseActionOptions[];\r\n    withModal?: boolean;\r\n    classes?: string[];\r\n    containerClasses?: string[];\r\n    descriptionClassName?: string;\r\n    svgName?: string;\r\n    svgClass?: string;\r\n}\r\n\r\nexport class BlankSlate extends React.Component<IBlankSlateProps, {}> {\r\n    static defaultProps: Partial<IBlankSlateProps> = {\r\n        title: null,\r\n        description: null,\r\n        additionalSection: null,\r\n        buttons: [],\r\n        withModal: false,\r\n        classes: [],\r\n        containerClasses: [],\r\n        descriptionClassName: '',\r\n        svgName: '',\r\n        svgClass: '',\r\n    };\r\n\r\n    private getSvgTemplate() {\r\n        return this.props.svgName ? (\r\n            <Svg svgName={this.props.svgName} svgClass={`icon mod-4x ${this.props.svgClass}`} />\r\n        ) : null;\r\n    }\r\n\r\n    private getDescriptionTemplate(): JSX.Element {\r\n        return this.props.description ? (\r\n            <p className={this.props.descriptionClassName}>{this.props.description}</p>\r\n        ) : null;\r\n    }\r\n\r\n    private getButtonsTemplate(): JSX.Element[] {\r\n        return _.map(this.props.buttons, (buttonProps: IBaseActionOptions) => {\r\n            return <Button key={buttonProps.name} {...buttonProps} />;\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const marginClasses: string = this.props.withModal ? 'mt2 mb2' : 'm2';\r\n        const blankSlateClasses: string = `blankslate ${marginClasses} ${this.props.classes.join(' ')}`;\r\n        const modalClasses: string = classNames(\r\n            {'mod-header-padding': this.props.withModal},\r\n            this.props.containerClasses\r\n        );\r\n\r\n        return (\r\n            <div className={modalClasses}>\r\n                <div className={blankSlateClasses}>\r\n                    {this.getSvgTemplate()}\r\n                    <h1>{this.props.title}</h1>\r\n                    {this.getDescriptionTemplate()}\r\n                    {this.getButtonsTemplate()}\r\n                    {this.props.additionalSection}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","const internalComponentPropsToOmit: string[] = ['children', 'dangerouslySetInnerHTML'];\r\n\r\n// We omit those props for the input native tag because those props are reserved for the Input component and\r\n// to stay compatible with the old interface\r\nconst inputTagPropsToOmit: string[] = [\r\n    ...internalComponentPropsToOmit,\r\n    'defaultValue',\r\n    'onClick',\r\n    'onChange',\r\n    'onBlur',\r\n    'value',\r\n    'valid',\r\n    'changeDirtyState',\r\n];\r\n\r\nexport const PropsToOmitUtils = {\r\n    internal: internalComponentPropsToOmit,\r\n    input: inputTagPropsToOmit,\r\n};\r\n","import * as React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport * as _ from 'underscore';\r\nimport {IReactVaporState} from '../../ReactVapor';\r\nimport {IDispatch, ReduxUtils} from '../../utils/ReduxUtils';\r\nimport {\r\n    FilterBox,\r\n    IFilterBoxDispatchProps,\r\n    IFilterBoxOwnProps,\r\n    IFilterBoxProps,\r\n    IFilterBoxStateProps,\r\n} from './FilterBox';\r\nimport {addFilter, filterThrough, removeFilter} from './FilterBoxActions';\r\nimport {FilterBoxSelectors} from './FilterBoxSelectors';\r\n\r\nconst FILTER_THROUGH_DEBOUNCE = 400;\r\nexport const debouncedFilterThrough = _.debounce(\r\n    (dispatch: IDispatch, id: string, filterText: string) => dispatch(filterThrough(id, filterText)),\r\n    FILTER_THROUGH_DEBOUNCE\r\n);\r\n\r\nconst mapStateToProps = (state: IReactVaporState, ownProps: IFilterBoxOwnProps): IFilterBoxStateProps => ({\r\n    filterText: FilterBoxSelectors.getFilterText(state, {id: ownProps.id}),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: IDispatch): IFilterBoxDispatchProps => ({\r\n    onRender: (id: string) => dispatch(addFilter(id)),\r\n    onDestroy: (id: string) => dispatch(removeFilter(id)),\r\n    onFilter: (id: string, filterText: string) => debouncedFilterThrough(dispatch, id, filterText),\r\n});\r\n\r\nexport const FilterBoxConnected: React.ComponentClass<IFilterBoxProps> = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps,\r\n    ReduxUtils.mergeProps\r\n)(FilterBox);\r\n","import {FunctionComponent} from 'react';\nimport * as _ from 'underscore';\nimport {BlankSlate, IBlankSlateProps} from './BlankSlate';\nimport {blankSlateWithError} from './BlankSlateWithError';\nimport {blankSlateWithTable, IBlankSlateWithTableProps} from './BlankSlateWithTable';\n\nexport interface IBlankSlateWithTable extends IBlankSlateWithTableProps, IBlankSlateProps {}\n\nexport const BlankSlateWithTable: FunctionComponent<IBlankSlateWithTable> = _.compose(blankSlateWithTable)(BlankSlate);\n\nexport const BlankSlateWithTableInError: FunctionComponent<IBlankSlateWithTable> = _.compose(\n    blankSlateWithTable,\n    blankSlateWithError\n)(BlankSlate);\n\nexport const BlankSlateWithError: FunctionComponent<IBlankSlateWithTable> = _.compose(blankSlateWithError)(BlankSlate);\n","import * as VaporSVG from 'coveo-styleguide';\nimport * as React from 'react';\nimport {Svg} from '../svg/Svg';\nimport {IBlankSlateProps} from './BlankSlate';\n\nexport const blankSlateWithError = (\n    Component: React.ComponentClass<IBlankSlateProps>\n): React.ComponentClass<IBlankSlateProps> => {\n    class BlankSlateWithErrorComponent extends React.PureComponent<IBlankSlateProps> {\n        render() {\n            return (\n                <Component\n                    {...this.props}\n                    title={\n                        <div className=\"text-orange-8 flex center-align\">\n                            <Svg\n                                svgName={VaporSVG.svg.info.name}\n                                className=\"icon mr1 fill-orange-8 flex center-align\"\n                            />\n                            {this.props.title}\n                        </div>\n                    }\n                    description={<span className=\"text-black semibold\">{this.props.description}</span>}\n                    classes={['border-color-orange-8 mod-error']}\n                >\n                    {this.props.children}\n                </Component>\n            );\n        }\n    }\n\n    return BlankSlateWithErrorComponent;\n};\n","import {ComponentClass} from 'react';\nimport * as React from 'react';\nimport {IBlankSlateProps} from './BlankSlate';\n\nexport interface IBlankSlateWithTableProps extends IBlankSlateProps {\n    numberOfColumn?: number;\n}\n\nexport const blankSlateWithTable = <P extends IBlankSlateProps>(\n    Component: React.ComponentType<P>\n): ComponentClass<IBlankSlateWithTableProps & P> => {\n    class ComponentBlankSlateWithTable extends React.PureComponent<IBlankSlateWithTableProps & P> {\n        static defaultProps: Partial<IBlankSlateWithTableProps & P> = {\n            numberOfColumn: 20,\n        } as Partial<IBlankSlateWithTableProps & P>;\n\n        render() {\n            const {numberOfColumn, ...componentProps} = this.props;\n            return (\n                <tr className=\"blankslate-row no-hover\">\n                    <td colSpan={numberOfColumn}>\n                        <Component {...(componentProps as P)}>{this.props.children}</Component>\n                    </td>\n                </tr>\n            );\n        }\n    }\n\n    return ComponentBlankSlateWithTable;\n};\n","import * as React from 'react';\r\nimport * as _ from 'underscore';\r\nimport {PaginationSelect} from '../../pagination';\r\nimport {Svg} from '../../svg/Svg';\r\n\r\nexport interface INavigationPaginationOwnProps extends React.ClassAttributes<NavigationPagination> {\r\n    id?: string;\r\n    totalPages: number;\r\n    numberOfPagesToShow?: number;\r\n    previousLabel?: string;\r\n    nextLabel?: string;\r\n    loadingIds?: string[];\r\n    hidePages?: boolean;\r\n}\r\n\r\nexport interface INavigationPaginationStateProps {\r\n    currentPage?: number;\r\n}\r\n\r\nexport interface INavigationPaginationDispatchProps {\r\n    onRender?: () => void;\r\n    onDestroy?: () => void;\r\n    onPageClick?: (pageNb: number) => void;\r\n}\r\n\r\nexport interface INavigationPaginationProps\r\n    extends INavigationPaginationOwnProps,\r\n        INavigationPaginationStateProps,\r\n        INavigationPaginationDispatchProps {}\r\n\r\nexport const NUMBER_OF_PAGES_SHOWING: number = 7;\r\nexport const PREVIOUS_LABEL: string = 'Previous';\r\nexport const NEXT_LABEL: string = 'Next';\r\n\r\nexport class NavigationPagination extends React.Component<INavigationPaginationProps, any> {\r\n    private handlePageClick = (pageNb: number) => {\r\n        if (pageNb >= 0 && this.props.currentPage !== pageNb) {\r\n            this.props.onPageClick?.(pageNb);\r\n        }\r\n    };\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.currentPage > this.props.totalPages - 1) {\r\n            this.handlePageClick(this.props.totalPages - 1);\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.onRender?.();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.onDestroy?.();\r\n    }\r\n\r\n    render() {\r\n        const currentPage: number = this.props.currentPage || 0;\r\n        const showXPages: number = Math.abs((this.props.numberOfPagesToShow || NUMBER_OF_PAGES_SHOWING) - 1);\r\n        const previousLabel: string = this.props.previousLabel || PREVIOUS_LABEL;\r\n        const nextLabel: string = this.props.nextLabel || NEXT_LABEL;\r\n        let start: number = 0;\r\n        let end: number = showXPages;\r\n        const lastPage: number = this.props.totalPages - 1;\r\n        const previousClasses: string =\r\n            'flat-select-option mod-link ' + (currentPage === 0 ? 'disabled' : 'selectable');\r\n        const nextClasses: string =\r\n            'flat-select-option mod-link ' + (currentPage === lastPage ? 'disabled' : 'selectable');\r\n        const pageSelects: JSX.Element[] = [];\r\n\r\n        if (!this.props.hidePages) {\r\n            if (currentPage + showXPages / 2 > lastPage) {\r\n                end = lastPage;\r\n                start = Math.max(lastPage - showXPages, 0);\r\n            } else {\r\n                start = Math.max(Math.floor(currentPage - showXPages / 2), 0);\r\n                end = Math.min(start + showXPages, lastPage);\r\n            }\r\n\r\n            _.each(_.range(start, end + 1), (p: number): void => {\r\n                pageSelects.push(\r\n                    <PaginationSelect\r\n                        key={'page-' + p}\r\n                        onPageClick={this.handlePageClick}\r\n                        pageNb={p}\r\n                        selected={p === currentPage}\r\n                    />\r\n                );\r\n            });\r\n        }\r\n\r\n        return (\r\n            <div className=\"pagination\">\r\n                <div className=\"flat-select\">\r\n                    <a\r\n                        className={previousClasses}\r\n                        data-page={currentPage - 1}\r\n                        onClick={() => this.handlePageClick(currentPage - 1)}\r\n                    >\r\n                        <Svg\r\n                            svgName=\"arrow-left-rounded\"\r\n                            className=\"pagination-icon\"\r\n                            svgClass=\"icon icon-small mod-lg\"\r\n                        />\r\n                        {previousLabel}\r\n                    </a>\r\n                    {pageSelects}\r\n                    <a\r\n                        className={nextClasses}\r\n                        data-page={currentPage + 1}\r\n                        onClick={() => this.handlePageClick(currentPage + 1)}\r\n                    >\r\n                        {nextLabel}\r\n                        <Svg\r\n                            svgName=\"arrow-right-rounded\"\r\n                            className=\"pagination-icon\"\r\n                            svgClass=\"icon icon-small mod-lg\"\r\n                        />\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import * as classNames from 'classnames';\r\nimport * as VaporSVG from 'coveo-styleguide';\r\nimport * as React from 'react';\r\nimport {keys} from 'ts-transformer-keys';\r\nimport * as _ from 'underscore';\r\n\r\nimport {IReactVaporState} from '../../ReactVapor';\r\nimport {IComponentBehaviour} from '../../utils/ComponentUtils';\r\nimport {getReactNodeTextContent} from '../../utils/JSXUtils';\r\nimport {IDispatch, ReduxConnect} from '../../utils/ReduxUtils';\r\nimport {Content} from '../content/Content';\r\nimport {IItemBoxProps} from '../itemBox/ItemBox';\r\nimport {clearListBoxOption} from '../listBox/ListBoxActions';\r\nimport {Svg} from '../svg/Svg';\r\nimport {Tooltip} from '../tooltip/Tooltip';\r\nimport {ISelectButtonProps, ISelectOwnProps, ISelectProps, SelectConnected} from './SelectConnected';\r\nimport {SelectSelector} from './SelectSelector';\r\nimport * as styles from './styles/SingleSelect.scss';\r\n\r\nexport interface ISingleSelectOwnProps extends ISelectProps, IComponentBehaviour {\r\n    placeholder?: string;\r\n    toggleClasses?: string;\r\n    onSelectOptionCallback?: (option: string) => void;\r\n    items?: IItemBoxProps[];\r\n    buttonPrepend?: React.ReactNode;\r\n    noFixedWidth?: boolean;\r\n    canClear?: boolean;\r\n    deselectTooltipText?: string;\r\n    footer?: React.ReactNode;\r\n}\r\n\r\nconst selectPropsKeys = keys<ISelectOwnProps>();\r\n\r\nexport interface ISingleSelectStateProps {\r\n    selectedOption: string;\r\n}\r\n\r\nexport interface ISingleSelectDispatchProps {\r\n    deselect: () => void;\r\n}\r\n\r\nexport interface ISingleSelectProps\r\n    extends ISingleSelectOwnProps,\r\n        Partial<ISingleSelectStateProps>,\r\n        Partial<ISingleSelectDispatchProps> {}\r\n\r\nconst mapStateToProps = (state: IReactVaporState, ownProps: ISingleSelectOwnProps): ISingleSelectStateProps => {\r\n    const customSelected: string[] = SelectSelector.getListState(state, ownProps);\r\n    return {\r\n        selectedOption: customSelected.length\r\n            ? customSelected[customSelected.length - 1]\r\n            : SelectSelector.getListBoxSelected(state, ownProps)[0],\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: IDispatch, ownProps: ISingleSelectOwnProps): ISingleSelectDispatchProps => ({\r\n    deselect: () => dispatch(clearListBoxOption(ownProps.id)),\r\n});\r\n\r\n@ReduxConnect(mapStateToProps, mapDispatchToProps)\r\nexport class SingleSelectConnected extends React.PureComponent<\r\n    ISingleSelectProps & React.ButtonHTMLAttributes<HTMLButtonElement>\r\n> {\r\n    static defaultProps: Partial<ISingleSelectOwnProps>;\r\n\r\n    componentDidUpdate(prevProps: ISingleSelectProps) {\r\n        if (prevProps.selectedOption !== this.props.selectedOption) {\r\n            this.props.onSelectOptionCallback?.(this.props.selectedOption);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <SelectConnected\r\n                {..._.pick(this.props, selectPropsKeys)}\r\n                button={this.getButton}\r\n                isLoading={this.props.isLoading}\r\n            >\r\n                {this.props.children}\r\n            </SelectConnected>\r\n        );\r\n    }\r\n\r\n    private getButton = (props: ISelectButtonProps): JSX.Element => {\r\n        const option = _.findWhere(this.props.items, {value: this.props.selectedOption});\r\n        const showClear = !!option && this.props.canClear && !this.props.disabled;\r\n        const buttonClasses = classNames('btn dropdown-toggle', this.props.toggleClasses, {\r\n            'dropdown-toggle-placeholder': !option,\r\n            [styles.singleSelectFixedWidth]: !this.props.noFixedWidth,\r\n            'mod-append': showClear,\r\n        });\r\n\r\n        return (\r\n            <button\r\n                className={buttonClasses}\r\n                type=\"button\"\r\n                onClick={props.onClick}\r\n                onKeyDown={props.onKeyDown}\r\n                onKeyUp={props.onKeyUp}\r\n                disabled={this.props.disabled}\r\n            >\r\n                {this.props.buttonPrepend}\r\n                {option && option.prepend ? <Content {...option.prepend} /> : null}\r\n                {this.getSelectedOptionElement(option)}\r\n                {option && option.append ? <Content {...option.append} /> : null}\r\n                <span className=\"dropdown-toggle-arrow\" />\r\n                {showClear && this.getDeselectOptionButton()}\r\n            </button>\r\n        );\r\n    };\r\n\r\n    private getSelectedOptionElement(option: IItemBoxProps): JSX.Element {\r\n        if (option) {\r\n            const displayValue =\r\n                option.selectedDisplayValue || getReactNodeTextContent(option.displayValue) || option.value;\r\n            return (\r\n                <span\r\n                    key={option.value}\r\n                    className=\"dropdown-selected-value flex-auto left-align\"\r\n                    data-value={option.value}\r\n                    title={displayValue}\r\n                >\r\n                    {displayValue}\r\n                </span>\r\n            );\r\n        }\r\n\r\n        return <span className=\"dropdown-no-value\">{this.props.placeholder}</span>;\r\n    }\r\n\r\n    private getDeselectOptionButton(): React.ReactNode {\r\n        return (\r\n            <Tooltip title={this.props.deselectTooltipText} placement=\"top\" noSpanWrapper onClick={this.handleDeselect}>\r\n                <Svg svgName={VaporSVG.svg.clear.name} svgClass=\"icon mod-12\" className=\"btn-append center-align\" />\r\n            </Tooltip>\r\n        );\r\n    }\r\n\r\n    private handleDeselect = () => {\r\n        if (!this.props.disabled) {\r\n            this.props.deselect();\r\n        }\r\n    };\r\n}\r\n\r\nSingleSelectConnected.defaultProps = {\r\n    placeholder: 'Select an option',\r\n    deselectTooltipText: 'Deselect',\r\n};\r\n","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".TableWithPredicates-tablePredicateFilters-S-LhV1ShhGj64WiZ2N3Zw + .TableWithPredicates-tablePredicateFilters-S-LhV1ShhGj64WiZ2N3Zw {\\n  padding-left: 0;\\n  border-left: none; }\\n\", \"\"]);\n\n// exports\nexports.locals = {\n\t\"tablePredicateFilters\": \"TableWithPredicates-tablePredicateFilters-S-LhV1ShhGj64WiZ2N3Zw\"\n};","import * as _ from 'underscore';\r\n\r\nexport const convertUndefinedAndNullToEmptyString = (value: any) =>\r\n    _.isUndefined(value) || _.isNull(value) ? '' : value;\r\n\r\n/**\r\n * @deprecated Typescript 3.7 now has built-in optional function calls.\r\n *\r\n * ```\r\n * callIfDefined(myfunction, arg1, arg2);\r\n *\r\n * // can be replaced with\r\n * myFunction?.(arg1, arg2);\r\n * ```\r\n */\r\nexport const callIfDefined = <T>(callback?: ((...params: any[]) => T) | null, ...args: any[]): T | undefined => {\r\n    if (_.isFunction(callback)) {\r\n        return callback(...args);\r\n    }\r\n};\r\n","// https://stackoverflow.com/questions/21825157/internet-explorer-11-detection#answer-22242528\r\nconst isIE = () => navigator.userAgent.indexOf('MSIE') !== -1 || navigator.appVersion.indexOf('Trident/') > -1;\r\n\r\nexport const BrowserUtils = {\r\n    isIE,\r\n};\r\n","import {ILinkSvgProps} from '../components/svg/LinkSvg';\r\n\r\nexport type ComponentId = string;\r\n\r\n/**\r\n * DisplayClass is a reflection of the atomic display classes available in Vapor\r\n * see https://github.com/coveo/vapor/blob/04372c42cbabb06ddd79130c13902137a7956ad7/scss/utility/layout.scss\r\n * for more details\r\n */\r\nexport const DisplayClass = {\r\n    BLOCK: 'block',\r\n    INLINE: 'inline',\r\n    INLINE_BLOCK: 'inline-block',\r\n    HIDDEN: 'hidden',\r\n    TABLE: 'table',\r\n    TABLE_CELL: 'table-cell',\r\n};\r\n\r\nexport interface IComponentBehaviour {\r\n    isLoading?: boolean;\r\n    disabled?: boolean;\r\n}\r\n\r\nexport const getBasicDocumentLink = (url: string, title: string = ''): ILinkSvgProps => {\r\n    return {\r\n        url,\r\n        target: '_blank',\r\n        svg: {\r\n            svgName: 'help',\r\n            svgClass: 'fill-orange icon mod-20',\r\n        },\r\n        tooltip: {\r\n            title,\r\n            placement: 'bottom',\r\n            container: 'body',\r\n        },\r\n    };\r\n};\r\n","export const fakeJSON = {\r\n    _id: '5aa97c3a188912df4047d157',\r\n    index: 0,\r\n    guid: 'a77733c5-01ea-4d3d-9f22-9ec4d06c2da6',\r\n    isActive: false,\r\n    balance: '$3,307.29',\r\n    picture: 'http://placehold.it/32x32',\r\n    age: 33,\r\n    eyeColor: 'green',\r\n    name: {\r\n        first: 'Natasha',\r\n        last: 'Jenkins',\r\n    },\r\n    company: 'ZANYMAX',\r\n    email: 'natasha.jenkins@zanymax.net',\r\n    phone: '+1 (917) 404-3066',\r\n    address: '555 Linden Boulevard, Stonybrook, Wisconsin, 2342',\r\n    about: 'Nulla sunt excepteur veniam elit laboris pariatur. Occaecat aliquip magna aliqua sunt tempor sunt id.',\r\n    registered: 'Sunday, January 31, 2016 2:37 AM',\r\n    latitude: '-11.761137',\r\n    longitude: '-23.176443',\r\n    tags: ['voluptate', 'et', 'sunt', 'sunt', 'cupidatat'],\r\n    range: [0, 1, 2],\r\n    friends: [\r\n        {\r\n            id: 0,\r\n            name: 'Mccray Kerr',\r\n        },\r\n        {\r\n            id: 1,\r\n            name: 'Cristina Osborn',\r\n        },\r\n    ],\r\n    greeting: 'Hello, Natasha! You have 8 unread messages.',\r\n    favoriteFruit: 'apple',\r\n};\r\n\r\nconst fakeJSONCopy: {[key: string]: any} = {\r\n    ...fakeJSON,\r\n    range: [5, 6],\r\n    friends: [\r\n        ...fakeJSON.friends,\r\n        {\r\n            id: 4,\r\n            name: 'Someone New',\r\n        },\r\n    ],\r\n    otherThing: 'This is a new property',\r\n};\r\ndelete fakeJSONCopy.isActive;\r\n\r\nexport const fakeJSON1 = fakeJSONCopy;\r\n\r\nexport const JSONToString = (json: {[key: string]: any}) => JSON.stringify(json, undefined, 2);\r\n","import * as React from 'react';\r\n\r\n// https://github.com/react-bootstrap/react-bootstrap/blob/master/src/utils/ValidComponentChildren.js\r\nexport class ValidComponentChildren {\r\n    static map(children: React.ReactNode, func: (child: React.ReactChild) => any, context: any): any[] {\r\n        return React.Children.map(children, (child) =>\r\n            React.isValidElement(child) ? func.call(context, child) : child\r\n        );\r\n    }\r\n}\r\n","export * from './FilterBox';\nexport * from './FilterBoxActions';\nexport * from './FilterBoxConnected';\nexport * from './FilterBoxReducers';\nexport * from './FilterBoxSelectors';\nexport * from './FilterBoxUtils';\n","import * as _ from 'underscore';\r\nexport type ClassNameTypes = string | string[] | {[key: string]: boolean};\r\n\r\n/**\r\n * Type to use when typing a property or variable that will be used with\r\n * the \"classname\" library (https://www.npmjs.com/package/classnames)\r\n */\r\nexport type IClassName = ClassNameTypes | ClassNameTypes[];\r\n\r\nexport interface IAdditionalClass {\r\n    className: string;\r\n    condition?: (data: any) => boolean;\r\n}\r\n\r\nexport const getAdditionalClasses = (additionalClasses: IAdditionalClass[], dataToUse: any): IClassName => {\r\n    return _.map(additionalClasses, (additionalClass: IAdditionalClass) =>\r\n        additionalClass.condition\r\n            ? {\r\n                  [additionalClass.className]: additionalClass.condition(dataToUse),\r\n              }\r\n            : additionalClass.className\r\n    );\r\n};\r\n","import * as React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport * as _ from 'underscore';\r\nimport {IReactVaporState} from '../../ReactVapor';\r\nimport {ReduxUtils} from '../../utils/ReduxUtils';\r\nimport {ILoadingState} from '../loading/LoadingReducers';\r\nimport {INavigationOwnProps, INavigationProps, INavigationStateProps, Navigation} from './Navigation';\r\n\r\nconst mapStateToProps = (state: IReactVaporState, ownProps: INavigationOwnProps): INavigationStateProps => {\r\n    const item: ILoadingState = _.findWhere(state.loadings, {id: 'loading-' + ownProps.id});\r\n\r\n    return {\r\n        isLoading: (item && item.isOn) || false,\r\n        withReduxState: true,\r\n    };\r\n};\r\n\r\nexport const NavigationConnected: React.ComponentClass<INavigationProps> = connect(\r\n    mapStateToProps,\r\n    undefined,\r\n    ReduxUtils.mergeProps\r\n)(Navigation);\r\n","import * as _ from 'underscore';\r\nimport {IReactVaporState} from '../../ReactVapor';\r\nimport {PER_PAGE_NUMBERS} from './perPage/NavigationPerPage';\r\n\r\nexport interface GetPaginationProps {\r\n    id: string;\r\n}\r\n\r\nconst getPaginationPage = (state: IReactVaporState, props: GetPaginationProps): number => {\r\n    const pagination = _.findWhere(state.paginationComposite, {id: props.id});\r\n    return (pagination && pagination.pageNb) || 0;\r\n};\r\n\r\nconst getPerPage = (state: IReactVaporState, props: GetPaginationProps): number => {\r\n    const pagination = _.findWhere(state.perPageComposite, {id: props.id});\r\n    return (pagination && pagination.perPage) || PER_PAGE_NUMBERS[1];\r\n};\r\n\r\nexport const NavigationSelectors = {\r\n    getPaginationPage,\r\n    getPerPage,\r\n};\r\n","export * from './Section';\n","import * as React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {IReduxActionsPayload} from '../../ReactVapor';\r\nimport {IReduxAction, ReduxUtils} from '../../utils/ReduxUtils';\r\nimport {ILoadingDispatchProps, ILoadingOwnProps, ILoadingProps, Loading} from './Loading';\r\nimport {addLoading, removeLoading} from './LoadingActions';\r\n\r\nconst mapStateToProps = () => ({});\r\n\r\nconst mapDispatchToProps = (\r\n    dispatch: (action: IReduxAction<IReduxActionsPayload>) => void,\r\n    ownProps: ILoadingOwnProps\r\n): ILoadingDispatchProps => ({\r\n    onRender: () => dispatch(addLoading(ownProps.id)),\r\n    onDestroy: () => dispatch(removeLoading(ownProps.id)),\r\n});\r\n\r\nexport const LoadingConnected: React.ComponentClass<ILoadingProps> = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps,\r\n    ReduxUtils.mergeProps\r\n)(Loading);\r\n","import * as React from 'react';\r\nimport {IReduxStatePossibleProps} from '../../utils/ReduxUtils';\r\nimport {Loading} from '../loading/Loading';\r\nimport {LoadingConnected} from '../loading/LoadingConnected';\r\nimport {INavigationPaginationProps, NavigationPagination} from './pagination/NavigationPagination';\r\nimport {NavigationPaginationConnected} from './pagination/NavigationPaginationConnected';\r\nimport {INavigationPerPageProps, NavigationPerPage, PER_PAGE_NUMBERS} from './perPage/NavigationPerPage';\r\nimport {NavigationPerPageConnected} from './perPage/NavigationPerPageConnected';\r\n\r\nexport interface INavigationOwnProps extends React.ClassAttributes<Navigation> {\r\n    id?: string;\r\n    totalPages: number;\r\n    totalEntries: number;\r\n    loadingIds?: string[];\r\n}\r\n\r\nexport interface INavigationChildrenProps {\r\n    numberOfPagesToShow?: number;\r\n    previousLabel?: string;\r\n    nextLabel?: string;\r\n    onPageClick?: (pageNb: number) => void;\r\n    perPageLabel?: string;\r\n    perPageNumbers?: number[];\r\n    onPerPageClick?: (newPerPage: number, currentPerPage?: number, currentPage?: number) => void;\r\n    hidePages?: boolean;\r\n    currentPerPage?: number;\r\n    currentPage?: number;\r\n    initialPosition?: number;\r\n}\r\n\r\nexport interface INavigationStateProps extends IReduxStatePossibleProps {\r\n    isLoading?: boolean;\r\n}\r\n\r\nexport interface INavigationProps extends INavigationOwnProps, INavigationChildrenProps, INavigationStateProps {}\r\n\r\nexport class Navigation extends React.Component<INavigationProps, any> {\r\n    static defaultProps: Partial<INavigationProps> = {\r\n        perPageNumbers: PER_PAGE_NUMBERS,\r\n    };\r\n\r\n    render() {\r\n        const paginationProps: INavigationPaginationProps = {\r\n            totalPages: this.props.totalPages,\r\n            numberOfPagesToShow: this.props.numberOfPagesToShow,\r\n            previousLabel: this.props.previousLabel,\r\n            nextLabel: this.props.nextLabel,\r\n            hidePages: this.props.hidePages || !this.props.totalPages || this.props.totalPages === 1,\r\n        };\r\n\r\n        const pagination: JSX.Element = this.props.withReduxState ? (\r\n            <NavigationPaginationConnected\r\n                id={`pagination-${this.props.id}`}\r\n                loadingIds={this.props.loadingIds}\r\n                {...paginationProps}\r\n            />\r\n        ) : (\r\n            <NavigationPagination\r\n                currentPage={this.props.currentPage}\r\n                onPageClick={this.props.onPageClick}\r\n                {...paginationProps}\r\n            />\r\n        );\r\n        const paginationClass: string = this.props.totalPages > 1 ? '' : 'hidden';\r\n\r\n        const perPageProps: INavigationPerPageProps = {\r\n            label: this.props.perPageLabel,\r\n            perPageNumbers: this.props.perPageNumbers,\r\n            totalEntries: this.props.totalEntries,\r\n            initialPosition: this.props.initialPosition,\r\n        };\r\n        if (this.props.currentPerPage) {\r\n            perPageProps.currentPerPage = this.props.currentPerPage;\r\n        }\r\n        const perPage: JSX.Element = this.props.withReduxState ? (\r\n            <NavigationPerPageConnected id={this.props.id} loadingIds={this.props.loadingIds} {...perPageProps} />\r\n        ) : (\r\n            <NavigationPerPage onPerPageClick={this.props.onPerPageClick} {...perPageProps} />\r\n        );\r\n        const perPageClass =\r\n            this.props.perPageNumbers.length && this.props.totalEntries > this.props.perPageNumbers[0] ? '' : 'hidden';\r\n\r\n        const navigationClasses: string = `pagination-container${this.props.isLoading ? ' loading-view' : ''}`;\r\n        const loading: JSX.Element = this.props.withReduxState ? (\r\n            <LoadingConnected id={`loading-${this.props.id}`} />\r\n        ) : (\r\n            <Loading />\r\n        );\r\n\r\n        return (\r\n            <div className={navigationClasses}>\r\n                <div className={perPageClass}>{perPage}</div>\r\n                <div className=\"flex-auto\">{loading}</div>\r\n                <div className={paginationClass}>{pagination}</div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","export * from './PaginationPagesNumber';\nexport * from './PaginationPerPage';\nexport * from './PaginationSelect';\nexport * from './PaginationUtils';\nexport * from './PaginationSelectors';\nexport * from './TablePagination';\n","import * as React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport * as _ from 'underscore';\r\nimport {IReactVaporState, IReduxActionsPayload} from '../../../ReactVapor';\r\nimport {IReduxAction, ReduxUtils} from '../../../utils/ReduxUtils';\r\nimport {\r\n    INavigationPaginationDispatchProps,\r\n    INavigationPaginationOwnProps,\r\n    INavigationPaginationProps,\r\n    INavigationPaginationStateProps,\r\n    NavigationPagination,\r\n} from './NavigationPagination';\r\nimport {addPagination, changePage, removePagination} from './NavigationPaginationActions';\r\nimport {IPaginationState} from './NavigationPaginationReducers';\r\n\r\nconst mapStateToProps = (\r\n    state: IReactVaporState,\r\n    ownProps: INavigationPaginationOwnProps\r\n): INavigationPaginationStateProps => {\r\n    const item: IPaginationState = _.findWhere(state.paginationComposite, {id: ownProps.id});\r\n\r\n    return {\r\n        currentPage: item ? item.pageNb : 0,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (\r\n    dispatch: (action: IReduxAction<IReduxActionsPayload>) => void,\r\n    ownProps: INavigationPaginationOwnProps\r\n): INavigationPaginationDispatchProps => ({\r\n    onRender: () => dispatch(addPagination(ownProps.id)),\r\n    onDestroy: () => dispatch(removePagination(ownProps.id)),\r\n    onPageClick: (pageNb: number) => dispatch(changePage(ownProps.id, pageNb)),\r\n});\r\n\r\nexport const NavigationPaginationConnected: React.ComponentClass<INavigationPaginationProps> = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps,\r\n    ReduxUtils.mergeProps\r\n)(NavigationPagination);\r\n","import * as React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport * as _ from 'underscore';\r\n\r\nimport {IReactVaporState} from '../../../ReactVapor';\r\nimport {IDispatch, ReduxUtils} from '../../../utils/ReduxUtils';\r\nimport {changePage} from '../pagination/NavigationPaginationActions';\r\nimport {IPaginationState} from '../pagination/NavigationPaginationReducers';\r\nimport {\r\n    INavigationPerPageDispatchProps,\r\n    INavigationPerPageOwnProps,\r\n    INavigationPerPageProps,\r\n    INavigationPerPageStateProps,\r\n    NavigationPerPage,\r\n    PER_PAGE_NUMBERS,\r\n} from './NavigationPerPage';\r\nimport {addPerPage, changePerPage, removePerPage} from './NavigationPerPageActions';\r\nimport {IPerPageState} from './NavigationPerPageReducers';\r\n\r\nconst mapStateToProps = (\r\n    state: IReactVaporState,\r\n    ownProps: INavigationPerPageOwnProps\r\n): INavigationPerPageStateProps => {\r\n    const perPageNumber: number[] = ownProps.perPageNumbers || PER_PAGE_NUMBERS;\r\n    const defaultInitialPosition: number = Math.ceil(perPageNumber.length / 2) - 1;\r\n    const item: IPerPageState = _.findWhere(state.perPageComposite, {id: ownProps.id});\r\n    const pagination: IPaginationState = _.findWhere(state.paginationComposite, {id: `pagination-${ownProps.id}`});\r\n    const initialPosition: number = !_.isUndefined(ownProps.initialPosition)\r\n        ? ownProps.initialPosition\r\n        : defaultInitialPosition;\r\n\r\n    return {\r\n        currentPerPage: item ? item.perPage : perPageNumber[initialPosition],\r\n        currentPage: pagination ? pagination.pageNb : 0,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (\r\n    dispatch: IDispatch,\r\n    ownProps: INavigationPerPageOwnProps\r\n): INavigationPerPageDispatchProps => ({\r\n    onRender: (perPageNb: number) => dispatch(addPerPage(ownProps.id, perPageNb)),\r\n    onDestroy: () => dispatch(removePerPage(ownProps.id)),\r\n    onPerPageClick: (perPageNb: number, oldPerPageNb: number, currentPage: number) => {\r\n        dispatch(changePerPage(ownProps.id, perPageNb));\r\n        dispatch(changePage(`pagination-${ownProps.id}`, Math.floor((currentPage * oldPerPageNb) / perPageNb)));\r\n    },\r\n});\r\n\r\nexport const NavigationPerPageConnected: React.ComponentClass<INavigationPerPageProps> = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps,\r\n    ReduxUtils.mergeProps\r\n)(NavigationPerPage);\r\n","export * from './BrowserUtils';\nexport * from './ClassNameUtils';\nexport * from './CloneUtils';\nexport * from './ComponentUtils';\nexport * from './DataStructuresUtils';\nexport * from './DateUtils';\nexport * from './FalsyValuesUtils';\nexport * from './FilterUtils';\nexport * from './HocUtils';\nexport * from './InputUtils';\nexport * from './JSONUtils';\nexport * from './JSXUtils';\nexport * from './ReduxUtils';\nexport * from './TooltipUtils';\nexport * from './UUID';\nexport * from './UrlUtils';\nexport * from './ValidComponentChildren';\nexport * from './PropsToOmitUtils';\n","export * from './BlankSlate';\nexport * from './BlankSlateWithError';\nexport * from './BlankSlateWithTable';\nexport * from './BlankSlatesHOC';\n","import * as classNames from 'classnames';\r\nimport * as React from 'react';\r\nimport * as _ from 'underscore';\r\n\r\nimport {WithServerSideProcessingProps} from '../../hoc/withServerSideProcessing/withServerSideProcessing';\r\nimport {ActionBarConnected} from '../actions/ActionBar';\r\nimport {TableLoading} from '../loading/components/TableLoading';\r\nimport {PER_PAGE_NUMBERS} from '../navigation/perPage/NavigationPerPage';\r\n\r\n/**\r\n * @deprecated Use WithServerSideProcessingProps directly instead\r\n */\r\nexport type IMaybeServerConfig = WithServerSideProcessingProps;\r\n\r\nexport interface ITableHOCOwnProps {\r\n    id: string;\r\n    isLoading?: boolean;\r\n    hasActionButtons?: boolean;\r\n    data: any[];\r\n    renderBody: (data: any[]) => React.ReactNode;\r\n    actions?: React.ReactNode[];\r\n    tableHeader?: React.ReactNode;\r\n    onUpdate?: () => void;\r\n    containerClassName?: string;\r\n    showBorderTop?: boolean;\r\n    loading?: {\r\n        numberOfColumns?: number;\r\n        defaultLoadingRow?: number;\r\n    };\r\n}\r\n\r\nexport interface ITableHOCProps extends ITableHOCOwnProps {}\r\n\r\nexport class TableHOC extends React.PureComponent<ITableHOCProps & React.HTMLAttributes<HTMLTableElement>> {\r\n    static defaultProps: Partial<ITableHOCOwnProps> = {\r\n        isLoading: false,\r\n        hasActionButtons: false,\r\n        actions: [],\r\n        showBorderTop: false,\r\n        loading: {\r\n            numberOfColumns: 5,\r\n            defaultLoadingRow: PER_PAGE_NUMBERS[1],\r\n        },\r\n    };\r\n\r\n    render() {\r\n        const table = (\r\n            <table className={classNames(this.props.className)}>\r\n                {this.props.tableHeader}\r\n                <tbody key={`table-body-${this.props.id}`} className={classNames({hidden: this.props.isLoading})}>\r\n                    {this.props.renderBody(this.props.data || [])}\r\n                </tbody>\r\n                {this.props.isLoading && (\r\n                    <TableLoading.Body\r\n                        key={`table-loading-${this.props.id}`}\r\n                        numberOfRow={\r\n                            _.size(this.props.data) || (this.props?.loading?.defaultLoadingRow ?? PER_PAGE_NUMBERS[1])\r\n                        }\r\n                        numberOfColumns={this.props?.loading?.numberOfColumns ?? 5}\r\n                    />\r\n                )}\r\n            </table>\r\n        );\r\n\r\n        return (\r\n            <div className={classNames('table-container', this.props.containerClassName)}>\r\n                {this.renderActions()}\r\n                {table}\r\n                {this.props.children}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private renderActions() {\r\n        if (this.props.hasActionButtons || this.props.actions.length) {\r\n            return (\r\n                <ActionBarConnected\r\n                    id={this.props.id}\r\n                    removeDefaultContainerClasses\r\n                    extraContainerClasses={classNames(\r\n                        'coveo-table-actions-container',\r\n                        'mod-cancel-header-padding',\r\n                        'mod-align-header',\r\n                        {\r\n                            'mod-border-top': this.props.showBorderTop,\r\n                        }\r\n                    ).split(' ')}\r\n                    disabled={this.props.isLoading}\r\n                >\r\n                    {this.props.actions}\r\n                </ActionBarConnected>\r\n            );\r\n        }\r\n        return null;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {keys} from 'ts-transformer-keys';\r\nimport * as _ from 'underscore';\r\nimport {IReactVaporState} from '../../ReactVapor';\r\nimport {ReduxConnect} from '../../utils';\r\nimport {ConfigSupplier, HocUtils} from '../../utils/HocUtils';\r\nimport {IBlankSlateProps} from '../blankSlate/BlankSlate';\r\nimport {BlankSlateWithTable} from '../blankSlate/BlankSlatesHOC';\r\nimport {ITableHOCOwnProps} from './TableHOC';\r\nimport {TableSelectors} from './TableSelectors';\r\n\r\nexport interface ITableWithBlankSlateStateProps {\r\n    isEmpty: boolean;\r\n}\r\n\r\nexport interface ITableWithBlankSlateProps extends Partial<ITableWithBlankSlateStateProps> {}\r\n\r\nconst TableWithBlankSlatePropsToOmit = keys<ITableWithBlankSlateStateProps>();\r\n\r\nexport const tableWithBlankSlate = (supplier: ConfigSupplier<IBlankSlateProps> = {}) => (\r\n    Component: React.ComponentClass<ITableHOCOwnProps>\r\n): React.ComponentClass<ITableHOCOwnProps & React.HTMLAttributes<HTMLTableElement>> => {\r\n    const mapStateToProps = (\r\n        state: IReactVaporState,\r\n        ownProps: ITableHOCOwnProps\r\n    ): ITableWithBlankSlateStateProps | ITableHOCOwnProps => {\r\n        const isEmpty = TableSelectors.getIsEmpty(state, ownProps);\r\n        return {\r\n            isEmpty,\r\n            data: isEmpty ? null : ownProps.data,\r\n        };\r\n    };\r\n\r\n    @ReduxConnect(mapStateToProps)\r\n    class TableWithBlankSlate extends React.Component<ITableHOCOwnProps & ITableWithBlankSlateProps> {\r\n        render() {\r\n            const newProps = {\r\n                ..._.omit(this.props, [...TableWithBlankSlatePropsToOmit]),\r\n                renderBody: this.props.isEmpty\r\n                    ? () => <BlankSlateWithTable {...HocUtils.supplyConfig(supplier)} />\r\n                    : this.props.renderBody,\r\n            };\r\n\r\n            return <Component {...newProps}>{this.props.children}</Component>;\r\n        }\r\n    }\r\n\r\n    return TableWithBlankSlate;\r\n};\r\n","import * as React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {keys} from 'ts-transformer-keys';\r\nimport * as _ from 'underscore';\r\n\r\nimport {WithServerSideProcessingProps} from '../../hoc/withServerSideProcessing';\r\nimport {IReactVaporState} from '../../ReactVapor';\r\nimport {ConfigSupplier, HocUtils, UrlUtils} from '../../utils';\r\nimport {BlankSlateWithTable, IBlankSlateProps} from '../blankSlate';\r\nimport {FilterBoxConnected, FilterBoxSelectors} from '../filterBox';\r\nimport {ITableHOCOwnProps} from './TableHOC';\r\nimport {Params} from './TableWithUrlState';\r\n\r\nexport interface ITableWithFilterConfig extends WithServerSideProcessingProps {\r\n    blankSlate?: IBlankSlateProps;\r\n    matchFilter?: (filterValue: string, datum: any) => boolean;\r\n    placeholder?: string;\r\n}\r\n\r\nexport interface ITableWithFilterStateProps {\r\n    filter: string;\r\n    urlFilter: string;\r\n}\r\n\r\nexport interface ITableWithFilterDispatchProps {\r\n    addFilter: (filterText: string) => void;\r\n    onRender: () => void;\r\n}\r\n\r\nexport interface ITableWithFilterProps\r\n    extends Partial<ITableWithFilterStateProps>,\r\n        Partial<ITableWithFilterDispatchProps>,\r\n        ITableHOCOwnProps,\r\n        WithServerSideProcessingProps {}\r\n\r\nconst TableWithFilterPropsToOmit = keys<ITableWithFilterStateProps>();\r\n\r\nconst defaultMatchFilter = (filter: string, datum: any) =>\r\n    JSON.stringify(_.values(datum).map((v: any) => _.isString(v) && v.toLowerCase())).indexOf(filter.toLowerCase()) !==\r\n    -1;\r\n\r\nexport const tableWithFilter = (\r\n    supplier: ConfigSupplier<ITableWithFilterConfig> = {blankSlate: {title: 'No results'}}\r\n) => (\r\n    Component: React.ComponentClass<ITableWithFilterProps>\r\n): React.ComponentClass<ITableWithFilterProps & React.HTMLAttributes<HTMLTableElement>> => {\r\n    const config = HocUtils.supplyConfig(supplier);\r\n\r\n    const mapStateToProps = (\r\n        state: IReactVaporState,\r\n        ownProps: ITableWithFilterProps\r\n    ): ITableWithFilterStateProps | ITableHOCOwnProps => {\r\n        const filterText = FilterBoxSelectors.getFilterText(state, ownProps);\r\n\r\n        const matchFilter = config.matchFilter || defaultMatchFilter;\r\n        const filterData = () =>\r\n            filterText ? _.filter(ownProps.data, (datum: any) => matchFilter(filterText, datum)) : ownProps.data;\r\n        const urlParams = UrlUtils.getSearchParams();\r\n        return {\r\n            filter: filterText,\r\n            urlFilter: urlParams[Params.filter],\r\n            data: ownProps.isServer || config.isServer ? ownProps.data : ownProps.data && filterData(),\r\n        };\r\n    };\r\n\r\n    class TableWithFilter extends React.Component<ITableWithFilterProps> {\r\n        componentDidUpdate(prevProps: ITableWithFilterProps) {\r\n            if (prevProps.filter !== this.props.filter && this.props.filter !== this.props.urlFilter) {\r\n                this.props.onUpdate?.();\r\n            }\r\n        }\r\n\r\n        render() {\r\n            const filterAction = (\r\n                <FilterBoxConnected\r\n                    key=\"FilterBox\"\r\n                    id={this.props.id}\r\n                    className=\"coveo-table-actions\"\r\n                    filterPlaceholder={config.placeholder}\r\n                    isAutoFocus\r\n                />\r\n            );\r\n            const newActions = [...(this.props.actions || []), filterAction];\r\n            const newProps = {\r\n                ..._.omit(this.props, [...TableWithFilterPropsToOmit]),\r\n                renderBody:\r\n                    _.isEmpty(this.props.data) && this.props.filter !== '' && config.blankSlate\r\n                        ? () => <BlankSlateWithTable {...HocUtils.supplyConfig(config.blankSlate)} />\r\n                        : this.props.renderBody,\r\n            };\r\n\r\n            return (\r\n                <Component {...newProps} actions={newActions} withFilter>\r\n                    {this.props.children}\r\n                </Component>\r\n            );\r\n        }\r\n    }\r\n\r\n    return connect(mapStateToProps)(TableWithFilter);\r\n};\r\n","import * as classNames from 'classnames';\r\nimport * as React from 'react';\r\nimport * as _ from 'underscore';\r\nimport {IReactVaporState} from '../../ReactVapor';\r\nimport {IDispatch, ReduxConnect} from '../../utils/ReduxUtils';\r\nimport {TextLoadingPlaceholder} from '../loading/components/TextLoadingPlaceholder';\r\nimport {Svg} from '../svg/Svg';\r\nimport {TableHeaderActions} from './actions/TableHeaderActions';\r\nimport {ITableWithSortState} from './reducers/TableWithSortReducers';\r\n\r\nexport interface ITableHeaderWithSortOwnProps {\r\n    id: string;\r\n    tableId: string;\r\n    isLoading?: boolean;\r\n    isDefault?: boolean;\r\n}\r\n\r\nexport interface HOCTableHeaderStateProps {\r\n    sorted: boolean;\r\n}\r\n\r\nexport interface ITableHeaderWithSortDispatchProps {\r\n    onMount: () => void;\r\n    onSort: () => void;\r\n    onUnmount: () => void;\r\n}\r\n\r\nexport interface ITableHeaderWithSortProps\r\n    extends ITableHeaderWithSortOwnProps,\r\n        Partial<HOCTableHeaderStateProps>,\r\n        Partial<ITableHeaderWithSortDispatchProps> {}\r\n\r\nconst mapStateToProps = (state: IReactVaporState, ownProps: ITableHeaderWithSortOwnProps) => {\r\n    const tableSort: ITableWithSortState = _.findWhere(state.tableHOCHeader, {id: ownProps.id});\r\n\r\n    return {\r\n        sorted: tableSort && tableSort.isAsc,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (\r\n    dispatch: IDispatch,\r\n    ownProps: ITableHeaderWithSortOwnProps\r\n): ITableHeaderWithSortDispatchProps => ({\r\n    onMount: () => dispatch(TableHeaderActions.addTableHeader(ownProps.id, ownProps.tableId, ownProps.isDefault)),\r\n    onSort: () => dispatch(TableHeaderActions.sortTable(ownProps.id)),\r\n    onUnmount: () => dispatch(TableHeaderActions.removeTableHeader(ownProps.id)),\r\n});\r\n\r\n@ReduxConnect(mapStateToProps, mapDispatchToProps)\r\nexport class TableHeaderWithSort extends React.Component<\r\n    ITableHeaderWithSortProps & React.HTMLAttributes<HTMLTableHeaderCellElement>\r\n> {\r\n    componentDidMount() {\r\n        this.props.onMount();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.onUnmount();\r\n    }\r\n\r\n    render() {\r\n        const headerCellClasses = classNames(this.props.className, 'admin-sort', {\r\n            'admin-sort-ascending': this.props.sorted === true,\r\n            'admin-sort-descending': this.props.sorted === false,\r\n        });\r\n\r\n        if (this.props.isLoading) {\r\n            return (\r\n                <th id={this.props.id}>\r\n                    <TextLoadingPlaceholder small />\r\n                </th>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <th id={this.props.id} className={headerCellClasses} onClick={() => this.props.onSort()}>\r\n                {this.props.children}\r\n                <div className=\"admin-sort-icon\">\r\n                    <Svg svgName=\"asc-desc\" className=\"tables-sort icon\" />\r\n                </div>\r\n            </th>\r\n        );\r\n    }\r\n}\r\n","import * as classNames from 'classnames';\r\nimport * as React from 'react';\r\nimport {keys} from 'ts-transformer-keys';\r\nimport * as _ from 'underscore';\r\n\r\nimport {SlideY} from '../../animations/SlideY';\r\nimport {IReactVaporState} from '../../ReactVapor';\r\nimport {EventUtils} from '../../utils/EventUtils';\r\nimport {IDispatch, ReduxConnect} from '../../utils/ReduxUtils';\r\nimport {IActionOptions} from '../actions/Action';\r\nimport {addActionsToActionBar} from '../actions/ActionBarActions';\r\nimport {Collapsible} from '../collapsible/Collapsible';\r\nimport {CollapsibleToggle} from '../collapsible/CollapsibleToggle';\r\nimport {TableHOCRowActions} from './actions/TableHOCRowActions';\r\nimport {TableSelectors} from './TableSelectors';\r\n\r\nexport interface CollapsibleRowProps {\r\n    content?: React.ReactNode;\r\n    className?: string;\r\n    expandOnMount?: boolean;\r\n    renderCustomToggleCell?: (opened: boolean) => React.ReactNode;\r\n    onToggleCollapsible?: (open: boolean) => void;\r\n}\r\n\r\nexport interface ITableRowOwnProps {\r\n    id: string;\r\n    tableId: string;\r\n    actions?: IActionOptions[];\r\n    isMultiselect?: boolean;\r\n    collapsible?: CollapsibleRowProps;\r\n    disabled?: boolean;\r\n}\r\n\r\nexport type ITableRowStateProps = ReturnType<typeof mapStateToProps>;\r\nexport type ITableRowDispatchProps = ReturnType<typeof mapDispatchToProps>;\r\n\r\nexport interface ITableRowConnectedProps\r\n    extends ITableRowOwnProps,\r\n        Partial<ITableRowStateProps>,\r\n        Partial<ITableRowDispatchProps> {}\r\n\r\nconst TableRowPropsToOmit = keys<ITableRowConnectedProps>();\r\n\r\nconst isCollapsible = (props: ITableRowOwnProps): boolean =>\r\n    props.collapsible && (React.isValidElement(props.collapsible.content) || _.isString(props.collapsible.content));\r\n\r\nconst mapStateToProps = (state: IReactVaporState, ownProps: ITableRowOwnProps) => {\r\n    const {selected, opened} = TableSelectors.getTableRow(state, {id: ownProps.id}) || {selected: false, opened: false};\r\n    return {\r\n        selected,\r\n        opened,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: IDispatch, ownProps: ITableRowOwnProps) => {\r\n    const refreshActionBarActions = (isMulti: boolean) => {\r\n        if (!_.isEmpty(ownProps.actions)) {\r\n            dispatch(addActionsToActionBar(ownProps.tableId, ownProps.actions));\r\n            dispatch(TableHOCRowActions.select(ownProps.id, isMulti));\r\n        }\r\n    };\r\n\r\n    return {\r\n        onMount: () => {\r\n            dispatch(TableHOCRowActions.add(ownProps.id, ownProps.tableId));\r\n            if (isCollapsible(ownProps) && ownProps.collapsible.expandOnMount) {\r\n                dispatch(TableHOCRowActions.toggleCollapsible(ownProps.id, true));\r\n            }\r\n        },\r\n        onUnmount: (isSelected?: boolean) => {\r\n            dispatch(TableHOCRowActions.remove(ownProps.id, ownProps.tableId, isSelected));\r\n        },\r\n        handleClick: (isMulti: boolean) => {\r\n            refreshActionBarActions(isMulti);\r\n        },\r\n        onCollapsibleClick: (isOpened: boolean) => {\r\n            ownProps.collapsible.onToggleCollapsible?.(!isOpened);\r\n            dispatch(TableHOCRowActions.toggleCollapsible(ownProps.id));\r\n        },\r\n        onUpdateToCollapsibleRow: () => {\r\n            if (ownProps.collapsible.expandOnMount) {\r\n                dispatch(TableHOCRowActions.toggleCollapsible(ownProps.id, true));\r\n            }\r\n        },\r\n        onActionBarActionsChanged: () => refreshActionBarActions(false),\r\n    };\r\n};\r\n\r\n@ReduxConnect(mapStateToProps, mapDispatchToProps)\r\nclass TableRowConnected extends React.PureComponent<\r\n    ITableRowConnectedProps & React.HTMLAttributes<HTMLTableRowElement>\r\n> {\r\n    static defaultProps: Partial<ITableRowOwnProps>;\r\n\r\n    componentDidUpdate(prevProps: ITableRowConnectedProps) {\r\n        if (!isCollapsible(prevProps) && isCollapsible(this.props)) {\r\n            this.props.onUpdateToCollapsibleRow();\r\n        }\r\n\r\n        if (JSON.stringify(prevProps.actions) !== JSON.stringify(this.props.actions) && this.props.selected) {\r\n            this.props.onActionBarActionsChanged();\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.onMount();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.onUnmount(this.props.selected);\r\n    }\r\n\r\n    render() {\r\n        const rowIsCollapsible = isCollapsible(this.props);\r\n        const collapsibleContentRow = rowIsCollapsible && (\r\n            <tr\r\n                key={`${this.props.tableId}-${this.props.id}-collapsible`}\r\n                className={classNames('collapsible-row', this.props.collapsible.className, {\r\n                    in: this.props.opened,\r\n                })}\r\n            >\r\n                <td colSpan={this.columnCount + 1}>\r\n                    <SlideY\r\n                        id={`${this.props.tableId}-${this.props.id}-collapsible`}\r\n                        in={this.props.opened}\r\n                        timeout={Collapsible.TIMEOUT}\r\n                        duration={Collapsible.TIMEOUT}\r\n                    >\r\n                        {this.props.collapsible.content}\r\n                    </SlideY>\r\n                </td>\r\n            </tr>\r\n        );\r\n\r\n        let collapsibleRowToggle: React.ReactNode = [];\r\n        if (rowIsCollapsible) {\r\n            const customToggle = this.props.collapsible.renderCustomToggleCell?.(this.props.opened);\r\n            collapsibleRowToggle = React.isValidElement(customToggle) ? (\r\n                customToggle\r\n            ) : (\r\n                <td>\r\n                    <CollapsibleToggle\r\n                        onClick={this.onToggleCollapsible}\r\n                        expanded={this.props.opened}\r\n                        svgClassName=\"mod-12\"\r\n                        className=\"btn mod-no-border right px1\"\r\n                    />\r\n                </td>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <React.Fragment key={`${this.props.tableId}-${this.props.id}`}>\r\n                <tr\r\n                    key={`${this.props.tableId}-${this.props.id}-heading`}\r\n                    {..._.omit(this.props, TableRowPropsToOmit)}\r\n                    className={classNames(this.props.className, {\r\n                        selected: this.props.selected,\r\n                        opened: this.props.opened,\r\n                        'heading-row': rowIsCollapsible,\r\n                        'row-disabled': this.props.disabled,\r\n                        'no-hover': _.isEmpty(this.props.actions),\r\n                    })}\r\n                    onClick={this.handleClick}\r\n                    onDoubleClick={this.handleDoubleClick}\r\n                >\r\n                    {this.props.children}\r\n                    {collapsibleRowToggle}\r\n                </tr>\r\n                {collapsibleContentRow}\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    private get columnCount(): number {\r\n        return React.Children.toArray(this.props.children).filter((child: React.ReactChild) =>\r\n            React.isValidElement(child)\r\n        ).length;\r\n    }\r\n\r\n    private handleClick = (e: React.MouseEvent<HTMLTableRowElement>) => {\r\n        if (!EventUtils.isClickingInsideElementWithClassname(e, 'dropdown')) {\r\n            this.props.onClick?.(e);\r\n            const isMulti = (e.metaKey || e.ctrlKey) && this.props.isMultiselect;\r\n            this.props.handleClick(isMulti);\r\n        }\r\n    };\r\n\r\n    private handleDoubleClick = () => {\r\n        _(this.props.actions)\r\n            .filter((action: IActionOptions) => action.callOnDoubleClick)\r\n            .forEach((action: IActionOptions) => {\r\n                if (action.link) {\r\n                    window.location.href = action.link;\r\n                } else if (action.trigger) {\r\n                    action.trigger();\r\n                }\r\n            });\r\n    };\r\n\r\n    private onToggleCollapsible = (e: React.MouseEvent<HTMLElement>) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n\r\n        this.props.onCollapsibleClick(this.props.opened);\r\n    };\r\n}\r\n\r\nTableRowConnected.defaultProps = {\r\n    actions: [],\r\n    isMultiselect: false,\r\n    collapsible: {},\r\n};\r\n\r\nexport {TableRowConnected};\r\n","import * as React from 'react';\r\nimport {isEmpty} from 'underscore';\r\n\r\nexport class EventUtils {\r\n    static isClickingInsideElementWithClassname = (e: React.MouseEvent<any>, classname: string): boolean => {\r\n        let currentTarget: HTMLElement = e && (e.target as HTMLElement);\r\n        let isClickingInside = false;\r\n\r\n        while (e && !isEmpty(classname) && currentTarget && currentTarget !== e.currentTarget && !isClickingInside) {\r\n            isClickingInside = currentTarget.classList.contains(classname);\r\n            currentTarget = currentTarget.parentElement;\r\n        }\r\n\r\n        return isClickingInside;\r\n    };\r\n}\r\n","import * as React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport * as _ from 'underscore';\r\n\r\nimport {IReactVaporState} from '../../ReactVapor';\r\nimport {IDispatch} from '../../utils/ReduxUtils';\r\nimport {TableHOCRowActions} from './actions/TableHOCRowActions';\r\nimport {ITableHOCOwnProps} from './TableHOC';\r\nimport {TableSelectors} from './TableSelectors';\r\n\r\nexport interface ITableWithActionsProps extends ITableHOCOwnProps {}\r\n\r\ntype TableWithActionsComponent = React.ComponentClass<ITableWithActionsProps>;\r\n\r\nexport const tableWithActions = () => (Component: TableWithActionsComponent): TableWithActionsComponent => {\r\n    const mapStateToProps = (state: IReactVaporState, ownProps: ITableHOCOwnProps) => ({\r\n        hasSelectedRow: TableSelectors.getSelectedRows(state, ownProps).length > 0,\r\n    });\r\n\r\n    const mapDispatchToProps = (dispatch: IDispatch, ownProps: ITableHOCOwnProps) => ({\r\n        deselectRows: () => dispatch(TableHOCRowActions.deselectAll(ownProps.id)),\r\n    });\r\n\r\n    class TableWithActions extends React.Component<\r\n        ITableWithActionsProps & ReturnType<typeof mapStateToProps> & ReturnType<typeof mapDispatchToProps>\r\n    > {\r\n        componentDidMount() {\r\n            document.addEventListener('mousedown', this.handleDocumentClick);\r\n        }\r\n\r\n        componentWillUnmount() {\r\n            document.removeEventListener('mousedown', this.handleDocumentClick);\r\n        }\r\n\r\n        render() {\r\n            return (\r\n                <Component {..._.omit(this.props, 'hasSelectedRow', 'deselectRows')} hasActionButtons>\r\n                    {this.props.children}\r\n                </Component>\r\n            );\r\n        }\r\n\r\n        private handleDocumentClick = (e: MouseEvent) => {\r\n            if (this.props.hasSelectedRow && document.body.contains(e.target as HTMLElement)) {\r\n                const target = e.target as HTMLElement;\r\n                const isNotInTable = !target.closest('.table-container');\r\n\r\n                if (isNotInTable) {\r\n                    this.props.deselectRows();\r\n                }\r\n            }\r\n        };\r\n    }\r\n\r\n    return connect(mapStateToProps, mapDispatchToProps)(TableWithActions);\r\n};\r\n","import * as classNames from 'classnames';\r\nimport * as React from 'react';\r\nimport {keys} from 'ts-transformer-keys';\r\nimport * as _ from 'underscore';\r\n\r\nimport {WithServerSideProcessingProps} from '../../hoc/withServerSideProcessing/withServerSideProcessing';\r\nimport {IReactVaporState} from '../../ReactVapor';\r\nimport {ConfigSupplier, HocUtils} from '../../utils/HocUtils';\r\nimport {ReduxConnect} from '../../utils/ReduxUtils';\r\nimport {UrlUtils} from '../../utils/UrlUtils';\r\nimport {IDatePickerDropdownChildrenProps, IDatePickerDropdownOwnProps} from '../datePicker/DatePickerDropdown';\r\nimport {DatePickerDropdownConnected} from '../datePicker/DatePickerDropdownConnected';\r\nimport {DatePickerSelectors} from '../datePicker/DatePickerSelectors';\r\nimport {ITableHOCOwnProps} from './TableHOC';\r\nimport {Params} from './TableWithUrlState';\r\n\r\nexport interface ITableWithDatePickerConfig\r\n    extends WithServerSideProcessingProps,\r\n        Partial<IDatePickerDropdownOwnProps>,\r\n        Partial<IDatePickerDropdownChildrenProps> {\r\n    matchDates?: (data: any, lowerLimit: Date, upperLimit?: Date) => boolean;\r\n}\r\n\r\nexport interface ITableWithDatePickerStateProps {\r\n    lowerLimit: Date;\r\n    upperLimit: Date;\r\n}\r\n\r\nexport interface ITableWithDatePickerDispatchProps {\r\n    onRender: () => void;\r\n}\r\n\r\nexport interface ITableWithDatePickerProps\r\n    extends Partial<ITableWithDatePickerStateProps>,\r\n        Partial<ITableWithDatePickerDispatchProps>,\r\n        ITableHOCOwnProps,\r\n        WithServerSideProcessingProps {}\r\n\r\nconst TableWithFilterPropsToOmit = keys<ITableWithDatePickerStateProps>();\r\n\r\nexport type FilterableTableComponent = React.ComponentClass<ITableWithDatePickerProps>;\r\n\r\nconst defaultMatchDates = () => true;\r\n\r\nexport const tableWithDatePicker = (supplier: ConfigSupplier<ITableWithDatePickerConfig> = {}) => (\r\n    Component: FilterableTableComponent\r\n): FilterableTableComponent => {\r\n    const config = HocUtils.supplyConfig(supplier);\r\n\r\n    const mapStateToProps = (\r\n        state: IReactVaporState,\r\n        ownProps: ITableWithDatePickerProps\r\n    ): ITableWithDatePickerStateProps | ITableHOCOwnProps => {\r\n        const [lowerLimit, upperLimit] = DatePickerSelectors.getDatePickerLimits(state, {id: ownProps.id});\r\n        const matchDates = config.matchDates || defaultMatchDates;\r\n        const filterData = () =>\r\n            lowerLimit\r\n                ? _.filter(ownProps.data, (datum: any) => matchDates(datum, lowerLimit, upperLimit))\r\n                : ownProps.data;\r\n\r\n        const urlParams = UrlUtils.getSearchParams();\r\n        const lowerDateLimitFromUrl = urlParams[Params.lowerDateLimit] && new Date(urlParams[Params.lowerDateLimit]);\r\n        const upperDateLimitFromUrl = urlParams[Params.upperDateLimit] && new Date(urlParams[Params.upperDateLimit]);\r\n        return {\r\n            lowerLimit: lowerLimit || lowerDateLimitFromUrl || config.initialDateRange?.[0],\r\n            upperLimit: upperLimit || upperDateLimitFromUrl || config.initialDateRange?.[1],\r\n            data: config.isServer || ownProps.isServer ? ownProps.data : ownProps.data && filterData(),\r\n        };\r\n    };\r\n\r\n    @ReduxConnect(mapStateToProps)\r\n    class TableWithDatePicker extends React.Component<ITableWithDatePickerProps> {\r\n        static defaultProps: Partial<ITableWithDatePickerProps> = {\r\n            actions: [],\r\n        };\r\n\r\n        componentDidUpdate(prevProps: ITableWithDatePickerProps) {\r\n            if (\r\n                prevProps.lowerLimit.valueOf() !== this.props.lowerLimit.valueOf() ||\r\n                prevProps.upperLimit.valueOf() !== this.props.upperLimit.valueOf()\r\n            ) {\r\n                this.props.onUpdate?.();\r\n            }\r\n        }\r\n\r\n        render(): React.ReactNode {\r\n            const datePickerAction = (\r\n                <DatePickerDropdownConnected\r\n                    {...(config as any)}\r\n                    initialDateRange={[this.props.lowerLimit, this.props.upperLimit]}\r\n                    id={this.props.id}\r\n                    key={this.props.id}\r\n                    className={classNames('coveo-table-actions', config.className)}\r\n                    onRight\r\n                    isLoading={this.props.isLoading}\r\n                />\r\n            );\r\n            const newActions = [...this.props.actions, datePickerAction];\r\n            const newProps = _.omit(this.props, TableWithFilterPropsToOmit);\r\n            return (\r\n                <Component {...newProps} actions={newActions}>\r\n                    {this.props.children}\r\n                </Component>\r\n            );\r\n        }\r\n    }\r\n\r\n    return TableWithDatePicker;\r\n};\r\n","import * as classNames from 'classnames';\r\nimport * as React from 'react';\r\nimport {keys} from 'ts-transformer-keys';\r\nimport * as _ from 'underscore';\r\n\r\nimport {WithServerSideProcessingProps} from '../../hoc/withServerSideProcessing/withServerSideProcessing';\r\nimport {IReactVaporState} from '../../ReactVapor';\r\nimport {ConfigSupplier, HocUtils} from '../../utils/HocUtils';\r\nimport {ReduxConnect} from '../../utils/ReduxUtils';\r\nimport {UrlUtils} from '../../utils/UrlUtils';\r\nimport {IItemBoxProps} from '../itemBox/ItemBox';\r\nimport {SelectSelector} from '../select/SelectSelector';\r\nimport {SingleSelectConnected} from '../select/SingleSelectConnected';\r\nimport * as styles from './styles/TableWithPredicates.scss';\r\nimport {ITableHOCOwnProps} from './TableHOC';\r\nimport {TableHOCUtils} from './utils/TableHOCUtils';\r\n\r\nexport interface ITableWithPredicateConfig extends WithServerSideProcessingProps {\r\n    id: string;\r\n    values: IItemBoxProps[];\r\n    prepend?: React.ReactNode;\r\n    matchPredicate?: (predicate: string, datum: any) => boolean;\r\n}\r\n\r\nexport interface ITableWithPredicateStateProps {\r\n    predicate: string;\r\n    urlPredicate: string[];\r\n}\r\n\r\nexport interface ITableWithPredicateProps\r\n    extends Partial<ITableWithPredicateStateProps>,\r\n        ITableHOCOwnProps,\r\n        WithServerSideProcessingProps {}\r\n\r\nconst TableWithPredicatePropsToOmit = keys<ITableWithPredicateStateProps>();\r\n\r\nconst defaultMatchPredicate = (predicate: string, datum: any) =>\r\n    !predicate || _.some(_.values(datum), (value: string) => value === predicate);\r\n\r\ntype TableWithPredicateComponent = React.ComponentType<ITableWithPredicateProps>;\r\n\r\nexport const tableWithPredicate = (supplier: ConfigSupplier<ITableWithPredicateConfig>) => (\r\n    Component: TableWithPredicateComponent\r\n): TableWithPredicateComponent => {\r\n    const config = HocUtils.supplyConfig(supplier);\r\n\r\n    const mapStateToProps = (\r\n        state: IReactVaporState,\r\n        ownProps: ITableWithPredicateProps\r\n    ): ITableWithPredicateStateProps | ITableHOCOwnProps => {\r\n        const predicate =\r\n            SelectSelector.getListBoxSelected(state, {\r\n                id: TableHOCUtils.getPredicateId(ownProps.id, config.id),\r\n            })[0] || '';\r\n        const matchPredicate = config.matchPredicate || defaultMatchPredicate;\r\n        const predicateData = () =>\r\n            !ownProps.isServer && !config.isServer && predicate\r\n                ? _.filter(ownProps.data, (datum: any) => matchPredicate(predicate, datum))\r\n                : ownProps.data;\r\n\r\n        const urlParams = UrlUtils.getSearchParams();\r\n        const possiblePredicates = TableHOCUtils.getPredicateIds(ownProps.id, state);\r\n\r\n        return {\r\n            predicate: predicate,\r\n            data: ownProps.data && predicateData(),\r\n            urlPredicate: Object.keys(urlParams)\r\n                .filter((key) => possiblePredicates.includes(key))\r\n                .map((key) => urlParams[key]),\r\n        };\r\n    };\r\n\r\n    @ReduxConnect(mapStateToProps)\r\n    class TableWithPredicate extends React.Component<ITableWithPredicateProps> {\r\n        componentDidUpdate(prevProps: ITableWithPredicateProps) {\r\n            if (\r\n                prevProps.predicate !== this.props.predicate &&\r\n                !_.include(this.props.urlPredicate, this.props.predicate)\r\n            ) {\r\n                this.props.onUpdate?.();\r\n            }\r\n        }\r\n\r\n        render() {\r\n            const key = TableHOCUtils.getPredicateId(this.props.id, config.id);\r\n            const actions = this.props.actions || [];\r\n            const predicateAction = (\r\n                <div\r\n                    className={classNames('coveo-table-actions predicate-filters', styles.tablePredicateFilters)}\r\n                    key={key}\r\n                >\r\n                    <SingleSelectConnected\r\n                        id={key}\r\n                        items={config.values}\r\n                        buttonPrepend={config.prepend}\r\n                        isLoading={this.props.isLoading}\r\n                    />\r\n                </div>\r\n            );\r\n\r\n            const newActions = [...actions, predicateAction];\r\n            const newProps = _.omit(this.props, [...TableWithPredicatePropsToOmit]);\r\n            return (\r\n                <Component {...newProps} actions={newActions}>\r\n                    {this.props.children}\r\n                </Component>\r\n            );\r\n        }\r\n    }\r\n\r\n    return TableWithPredicate;\r\n};\r\n","import * as React from 'react';\r\nimport {keys} from 'ts-transformer-keys';\r\nimport * as _ from 'underscore';\r\n\r\nimport {WithServerSideProcessingProps} from '../../hoc/withServerSideProcessing/withServerSideProcessing';\r\nimport {IReactVaporState} from '../../ReactVapor';\r\nimport {ConfigSupplier, HocUtils} from '../../utils/HocUtils';\r\nimport {ReduxConnect} from '../../utils/ReduxUtils';\r\nimport {ITableWithSortState} from './reducers/TableWithSortReducers';\r\nimport {ITableHOCOwnProps} from './TableHOC';\r\nimport {TableSelectors} from './TableSelectors';\r\n\r\nexport interface ITableWithSortConfig extends WithServerSideProcessingProps {\r\n    sort?: (sortKey: string, isAsc: boolean, a: any, b: any) => number;\r\n}\r\n\r\nexport interface ITableWithSortStateProps {\r\n    isAsc?: boolean;\r\n    sortKey?: string;\r\n}\r\n\r\nexport interface ITableWithSortProps\r\n    extends ITableHOCOwnProps,\r\n        Partial<ITableWithSortStateProps>,\r\n        WithServerSideProcessingProps {}\r\n\r\nconst TableWithSortPropsToOmit = keys<ITableWithSortStateProps>();\r\n\r\nconst defaultSort = () => 0;\r\n\r\nexport type SortableTableComponent = React.ComponentType<ITableWithSortProps>;\r\n\r\nexport const tableWithSort = (supplier: ConfigSupplier<ITableWithSortConfig> = {}) => (\r\n    Component: SortableTableComponent\r\n): SortableTableComponent => {\r\n    const config = HocUtils.supplyConfig(supplier);\r\n\r\n    const mapStateToProps = (\r\n        state: IReactVaporState,\r\n        ownProps: ITableWithSortProps\r\n    ): ITableWithSortStateProps | ITableHOCOwnProps => {\r\n        const tableSort: ITableWithSortState = TableSelectors.getSort(state, ownProps);\r\n        const sort = config.sort || defaultSort;\r\n\r\n        return {\r\n            data:\r\n                ownProps.isServer || config.isServer\r\n                    ? ownProps.data\r\n                    : ownProps.data && [...ownProps.data].sort((a, b) => sort(tableSort.id, tableSort.isAsc, a, b)),\r\n            sortKey: tableSort && tableSort.id,\r\n            isAsc: !!(tableSort && tableSort.isAsc),\r\n        };\r\n    };\r\n\r\n    @ReduxConnect(mapStateToProps)\r\n    class TableWithSort extends React.Component<ITableWithSortProps> {\r\n        componentDidUpdate(prevProps: ITableWithSortProps) {\r\n            if (prevProps.sortKey !== this.props.sortKey || prevProps.isAsc !== this.props.isAsc) {\r\n                this.props.onUpdate?.();\r\n            }\r\n        }\r\n\r\n        render() {\r\n            const newProps = {..._.omit(this.props, [...TableWithSortPropsToOmit])};\r\n            return <Component {...newProps}>{this.props.children}</Component>;\r\n        }\r\n    }\r\n\r\n    return TableWithSort;\r\n};\r\n","import * as React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {keys} from 'ts-transformer-keys';\r\nimport * as _ from 'underscore';\r\n\r\nimport {WithServerSideProcessingProps} from '../../hoc/withServerSideProcessing/withServerSideProcessing';\r\nimport {IReactVaporState, IReduxActionsPayload} from '../../ReactVapor';\r\nimport {ConfigSupplier, HocUtils} from '../../utils/HocUtils';\r\nimport {IReduxAction} from '../../utils/ReduxUtils';\r\nimport {turnOffLoading} from '../loading/LoadingActions';\r\nimport {INavigationChildrenProps, INavigationOwnProps} from '../navigation/Navigation';\r\nimport {NavigationConnected} from '../navigation/NavigationConnected';\r\nimport {NavigationSelectors} from '../navigation/NavigationSelectors';\r\nimport {TableWithPaginationActions} from './actions/TableWithPaginationActions';\r\nimport {ITableHOCOwnProps} from './TableHOC';\r\nimport {TableSelectors} from './TableSelectors';\r\nimport {TableHOCUtils} from './utils/TableHOCUtils';\r\n\r\nexport interface ITableWithPaginationConfig\r\n    extends WithServerSideProcessingProps,\r\n        Partial<INavigationOwnProps>,\r\n        Partial<INavigationChildrenProps> {}\r\n\r\nexport interface ITableWithPaginationStateProps {\r\n    totalEntries: number;\r\n    totalPages: number;\r\n    pageNb: number;\r\n    perPage: number;\r\n}\r\n\r\nconst mapDispatchToProps = (\r\n    dispatch: (action: IReduxAction<IReduxActionsPayload>) => void,\r\n    ownProps: ITableWithPaginationProps\r\n) => ({\r\n    onMount: () => {\r\n        dispatch(turnOffLoading([`loading-${ownProps.id}`]));\r\n        dispatch(TableWithPaginationActions.add(ownProps.id));\r\n    },\r\n    onUnmount: () => dispatch(TableWithPaginationActions.remove(ownProps.id)),\r\n});\r\n\r\nexport interface ITableWithPaginationProps\r\n    extends ITableHOCOwnProps,\r\n        WithServerSideProcessingProps,\r\n        Partial<ITableWithPaginationStateProps>,\r\n        Partial<ReturnType<typeof mapDispatchToProps>> {}\r\n\r\nconst TableWithPaginationProps = keys<ITableWithPaginationStateProps>();\r\n\r\nconst sliceData = (data: any[], startingIndex: number, endingIndex: number) => data.slice(startingIndex, endingIndex);\r\n\r\nexport const tableWithPagination = (supplier: ConfigSupplier<ITableWithPaginationConfig> = {}) => (\r\n    Component: React.ComponentType<ITableWithPaginationProps>\r\n): React.ComponentClass<ITableWithPaginationProps & React.HTMLAttributes<HTMLTableElement>> => {\r\n    const config = HocUtils.supplyConfig(supplier);\r\n    const mapStateToProps = (\r\n        state: IReactVaporState,\r\n        ownProps: ITableWithPaginationProps\r\n    ): ITableWithPaginationStateProps | ITableHOCOwnProps => {\r\n        const pageNb = NavigationSelectors.getPaginationPage(state, {id: TableHOCUtils.getPaginationId(ownProps.id)});\r\n        const perPage = NavigationSelectors.getPerPage(state, {id: ownProps.id});\r\n        const isServer = ownProps.isServer || config.isServer;\r\n        const length = TableSelectors.getDataCount(state, {\r\n            id: ownProps.id,\r\n            data: ownProps.data,\r\n            isServer,\r\n        });\r\n\r\n        const startingIndex = pageNb * perPage;\r\n        const endingIndex = startingIndex + perPage;\r\n\r\n        return {\r\n            pageNb,\r\n            perPage,\r\n            totalEntries: length,\r\n            totalPages: Math.max(Math.ceil(length / perPage), 1),\r\n            data: isServer ? ownProps.data : ownProps.data && sliceData(ownProps.data, startingIndex, endingIndex),\r\n        };\r\n    };\r\n\r\n    class TableWithPagination extends React.Component<ITableHOCOwnProps & ITableWithPaginationProps> {\r\n        componentDidMount() {\r\n            this.props.onMount();\r\n        }\r\n\r\n        componentWillUnmount() {\r\n            this.props.onUnmount();\r\n        }\r\n\r\n        componentDidUpdate(prevProps: ITableWithPaginationProps) {\r\n            if (prevProps.pageNb !== this.props.pageNb || prevProps.perPage !== this.props.perPage) {\r\n                this.props.onUpdate?.();\r\n            }\r\n        }\r\n\r\n        render() {\r\n            const newProps = _.omit(this.props, [...TableWithPaginationProps]);\r\n            return (\r\n                <Component {...newProps}>\r\n                    <NavigationConnected\r\n                        id={this.props.id}\r\n                        loadingIds={[this.props.id]}\r\n                        {...config}\r\n                        {..._.pick(this.props, TableWithPaginationProps)}\r\n                    />\r\n                    {this.props.children}\r\n                </Component>\r\n            );\r\n        }\r\n    }\r\n\r\n    return connect(mapStateToProps, mapDispatchToProps)(TableWithPagination);\r\n};\r\n","\nvar content = require(\"!!../../../../node_modules/typings-for-css-modules-loader/lib/index.js??ref--7-1!../../../../node_modules/postcss-loader/src/index.js!../../../../node_modules/sass-loader/lib/loader.js!./TableWithPredicates.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../node_modules/typings-for-css-modules-loader/lib/index.js??ref--7-1!../../../../node_modules/postcss-loader/src/index.js!../../../../node_modules/sass-loader/lib/loader.js!./TableWithPredicates.scss\", function() {\n\t\tvar newContent = require(\"!!../../../../node_modules/typings-for-css-modules-loader/lib/index.js??ref--7-1!../../../../node_modules/postcss-loader/src/index.js!../../../../node_modules/sass-loader/lib/loader.js!./TableWithPredicates.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}"],"sourceRoot":""}