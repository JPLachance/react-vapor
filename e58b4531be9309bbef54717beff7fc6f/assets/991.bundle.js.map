{"version":3,"sources":["webpack:///./src/components/userFeedback/examples/UserFeedbackExample.tsx?1512","webpack:///./src/components/syncFeedback/SyncFeedback.tsx?5830","webpack:///./src/utils/ComponentUtils.ts?4c99","webpack:///./src/components/userFeedback/UserFeedback.tsx?8070"],"names":["FeedBackExamples","title","UserFeedBackExamples","SyncFeedBackExamples","level","description","name","enabled","className","extraClasses","state","displayOnShow","feedbackText","NONE","SYNCING","SUCCESS","ERROR","feedback","SyncFeedbackState","render","classes","this","props","push","join","renderIcon","renderContent","svgName","svgClass","DisplayClass","UserFeedbackState","VALID","WARNING","TextColorClass","style","getUserFeedbackStyle","displayClassOnShow","renderedDisplayClass","renderedTextColorClass","concat"],"mappings":"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","file":"assets/991.bundle.js","sourcesContent":["import * as React from 'react';\r\n\r\nimport {ExampleComponent} from '../../../../docs/src/components/ComponentsInterface';\r\nimport {Button} from '../../button/Button';\r\nimport {Section} from '../../section/Section';\r\nimport {SyncFeedback, SyncFeedbackState} from '../../syncFeedback/SyncFeedback';\r\nimport {UserFeedback} from '../UserFeedback';\r\n\r\nexport const FeedBackExamples: ExampleComponent = () => (\r\n    <Section title=\"FeedBack Examples\">\r\n        <UserFeedBackExamples />\r\n        <SyncFeedBackExamples />\r\n    </Section>\r\n);\r\n\r\n// start-print\r\n\r\nconst UserFeedBackExamples: React.FunctionComponent = () => (\r\n    <Section\r\n        level={2}\r\n        title=\"UserFeedBacks\"\r\n        description=\"UserFeedBacks will render with these state but won't render while in 'VALID' state.\"\r\n    >\r\n        <Section level={3}>\r\n            <Button name=\"Warning Feedback\" enabled className=\"btn\" />\r\n            <UserFeedback\r\n                extraClasses={['mt1']}\r\n                state=\"WARNING\"\r\n                displayOnShow=\"block\"\r\n                feedbackText=\"UserFeedback on state WARNING\"\r\n            />\r\n        </Section>\r\n        <Section level={3}>\r\n            <Button name=\"Error FeedBack\" enabled className=\"btn\" />\r\n            <UserFeedback\r\n                extraClasses={['mt1']}\r\n                state=\"ERROR\"\r\n                displayOnShow=\"block\"\r\n                feedbackText=\"UserFeedback on state ERROR\"\r\n            />\r\n        </Section>\r\n        <Section level={3}>\r\n            <Button name=\"Side FeedBack\" enabled className=\"btn\" />\r\n            <UserFeedback\r\n                extraClasses={['ml1']}\r\n                state=\"WARNING\"\r\n                displayOnShow=\"inline-block\"\r\n                feedbackText=\"UserFeedback placed beside its related element\"\r\n            />\r\n        </Section>\r\n        <Section level={3}>\r\n            <Button name=\"styled FeedBack\" enabled className=\"btn\" />\r\n            <UserFeedback\r\n                extraClasses={['ml2', 'bold', 'italic']}\r\n                state=\"WARNING\"\r\n                displayOnShow=\"inline-block\"\r\n                feedbackText=\"extra classes for styling can be passed to the extraClasses prop\"\r\n            />\r\n        </Section>\r\n    </Section>\r\n);\r\n\r\nconst SyncFeedBackExamples: React.FunctionComponent = () => (\r\n    <Section\r\n        level={2}\r\n        title=\"SyncFeedBacks\"\r\n        description=\"SyncFeedBack will render with these states but won't render while in 'NONE' state.\"\r\n    >\r\n        <Section level={3} title=\"An invisible feedback\" className={'mb3'}>\r\n            <SyncFeedback state={SyncFeedbackState.NONE} />\r\n        </Section>\r\n\r\n        <Section level={3} title=\"SyncFeedBacks with their default messages\">\r\n            <SyncFeedback state={SyncFeedbackState.SYNCING} />\r\n            <SyncFeedback state={SyncFeedbackState.SUCCESS} />\r\n            <SyncFeedback state={SyncFeedbackState.ERROR} />\r\n        </Section>\r\n\r\n        <Section level={3} title=\"SyncFeedBack with custom messages\">\r\n            <SyncFeedback\r\n                state={SyncFeedbackState.SYNCING}\r\n                feedback=\"This message is a SyncFeedback component on state SYNCING\"\r\n            />\r\n            <SyncFeedback\r\n                state={SyncFeedbackState.SUCCESS}\r\n                feedback=\"This message is a SyncFeedback component on state SUCCESS\"\r\n            />\r\n            <SyncFeedback\r\n                state={SyncFeedbackState.ERROR}\r\n                feedback=\"This message is a SyncFeedback component on state ERROR\"\r\n            />\r\n        </Section>\r\n    </Section>\r\n);\r\n","import * as React from 'react';\r\nimport {Svg} from '../svg/Svg';\r\n\r\nexport interface ISyncFeedbackProps {\r\n    feedback?: string;\r\n    state: string;\r\n}\r\n\r\nexport const SyncFeedbackState = {\r\n    SYNCING: 'SYNCING',\r\n    SUCCESS: 'SUCCESS',\r\n    ERROR: 'ERROR',\r\n    NONE: 'NONE',\r\n};\r\n\r\nexport const DEFAULT_SYNC_FEEDBACK_SYNCING_LABEL: string = 'Saving changes...';\r\nexport const DEFAULT_SYNC_FEEDBACK_SUCCESS_LABEL: string = 'Changes saved';\r\nexport const DEFAULT_SYNC_FEEDBACK_ERROR_LABEL: string = 'Changes could not be saved.';\r\n\r\nexport class SyncFeedback extends React.Component<ISyncFeedbackProps, any> {\r\n    render() {\r\n        const classes = ['sync-feedback'];\r\n        if (this.props.state === SyncFeedbackState.ERROR) {\r\n            classes.push('mod-error');\r\n        } else if (this.props.state === SyncFeedbackState.SUCCESS) {\r\n            classes.push('mod-success');\r\n        }\r\n\r\n        return (\r\n            <div className={classes.join(' ')}>\r\n                {this.renderIcon()}\r\n                {this.renderContent()}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private renderIcon() {\r\n        if (this.props.state === SyncFeedbackState.SYNCING) {\r\n            return <span className=\"status-dot syncing sync-feedback-icon\"></span>;\r\n        } else if (this.props.state === SyncFeedbackState.SUCCESS) {\r\n            return <Svg svgName=\"check\" className=\"sync-feedback-icon\" svgClass=\"icon\" />;\r\n        } else if (this.props.state === SyncFeedbackState.ERROR) {\r\n            return <Svg svgName=\"clear\" className=\"sync-feedback-icon\" svgClass=\"icon\" />;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    private renderContent() {\r\n        if (this.props.state === SyncFeedbackState.SYNCING) {\r\n            return (\r\n                <span className=\"sync-feedback-text\">{this.props.feedback || DEFAULT_SYNC_FEEDBACK_SYNCING_LABEL}</span>\r\n            );\r\n        } else if (this.props.state === SyncFeedbackState.SUCCESS) {\r\n            return (\r\n                <span className=\"sync-feedback-text\">{this.props.feedback || DEFAULT_SYNC_FEEDBACK_SUCCESS_LABEL}</span>\r\n            );\r\n        } else if (this.props.state === SyncFeedbackState.ERROR) {\r\n            return (\r\n                <span className=\"sync-feedback-text\">{this.props.feedback || DEFAULT_SYNC_FEEDBACK_ERROR_LABEL}</span>\r\n            );\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n","import {ILinkSvgProps} from '../components/svg/LinkSvg';\r\n\r\nexport type ComponentId = string;\r\n\r\n/**\r\n * DisplayClass is a reflection of the atomic display classes available in Vapor\r\n * see https://github.com/coveo/vapor/blob/04372c42cbabb06ddd79130c13902137a7956ad7/scss/utility/layout.scss\r\n * for more details\r\n */\r\nexport const DisplayClass = {\r\n    BLOCK: 'block',\r\n    INLINE: 'inline',\r\n    INLINE_BLOCK: 'inline-block',\r\n    HIDDEN: 'hidden',\r\n    TABLE: 'table',\r\n    TABLE_CELL: 'table-cell',\r\n};\r\n\r\nexport const getBasicDocumentLink = (url: string, title: string = ''): ILinkSvgProps => {\r\n    return {\r\n        url,\r\n        target: '_blank',\r\n        svg: {\r\n            svgName: 'help',\r\n            svgClass: 'fill-orange icon mod-20',\r\n        },\r\n        tooltip: {\r\n            title,\r\n            placement: 'bottom',\r\n            container: 'body',\r\n        },\r\n    };\r\n};\r\n","import * as React from 'react';\r\nimport {DisplayClass} from '../../utils/ComponentUtils';\r\n\r\nexport interface IUserFeedbackProps {\r\n    feedbackText: string;\r\n    state: string;\r\n    extraClasses?: string[];\r\n    displayOnShow?: string;\r\n}\r\n\r\nexport interface IUserFeedbackStyle {\r\n    classes: string;\r\n}\r\n\r\nexport const UserFeedbackState = {\r\n    VALID: 'VALID',\r\n    WARNING: 'WARNING',\r\n    ERROR: 'ERROR',\r\n};\r\n\r\nexport const TextColorClass = {\r\n    default: 'text-dark-grey',\r\n    error: 'text-red',\r\n};\r\n\r\nexport class UserFeedback extends React.Component<IUserFeedbackProps, any> {\r\n    render() {\r\n        const style = this.getUserFeedbackStyle();\r\n        return <div className={style.classes}>{this.props.feedbackText}</div>;\r\n    }\r\n\r\n    private getUserFeedbackStyle(): IUserFeedbackStyle {\r\n        const state = this.props.state in UserFeedbackState ? this.props.state : UserFeedbackState.VALID;\r\n        const displayClassOnShow = this.props.displayOnShow || DisplayClass.BLOCK;\r\n\r\n        const renderedDisplayClass = state === UserFeedbackState.VALID ? DisplayClass.HIDDEN : displayClassOnShow;\r\n        const renderedTextColorClass =\r\n            state === UserFeedbackState.ERROR ? TextColorClass.error : TextColorClass.default;\r\n        const renderedExtraClasses = this.props.extraClasses || [];\r\n\r\n        return {\r\n            classes: renderedExtraClasses.concat(renderedTextColorClass, renderedDisplayClass).join(' '),\r\n        };\r\n    }\r\n}\r\n"],"sourceRoot":""}