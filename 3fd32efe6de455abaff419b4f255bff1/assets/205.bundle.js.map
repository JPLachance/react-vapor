{"version":3,"sources":["webpack:///./src/components/chart/tests/InfoLine.spec.tsx"],"names":[],"mappings":"6FAAA,OAAe","file":"assets/205.bundle.js","sourcesContent":["export default \"import {shallow} from 'enzyme';\\r\\nimport * as React from 'react';\\r\\n\\r\\nimport {InfoLine} from '../InfoLine';\\r\\n\\r\\ndescribe('<InfoLine />', () => {\\r\\n    it('should not throw', () => {\\r\\n        expect(() => {\\r\\n            shallow(<InfoLine value={1} />);\\r\\n            shallow(<InfoLine value={10} isVertical />);\\r\\n            shallow(<InfoLine value={10} isVertical={false} padding={10} stroke=\\\"blue\\\" />);\\r\\n        }).not.toThrow();\\r\\n    });\\r\\n\\r\\n    it('should render a line', () => {\\r\\n        const component = shallow(<InfoLine value={1} />);\\r\\n        expect(component.find('line').exists()).toBe(true);\\r\\n    });\\r\\n\\r\\n    it('should not render a text if label is undefined', () => {\\r\\n        const component = shallow(<InfoLine value={1} />);\\r\\n        expect(component.find('text').exists()).toBe(false);\\r\\n    });\\r\\n\\r\\n    it('should render the label if defined', () => {\\r\\n        const component = shallow(<InfoLine value={1} label=\\\"this is it\\\" />);\\r\\n        expect(component.find('text').exists()).toBe(true);\\r\\n    });\\r\\n\\r\\n    it('should render a transformed label if isVertical is true', () => {\\r\\n        const component = shallow(<InfoLine value={1} label=\\\"this is it\\\" isVertical />);\\r\\n        expect(component.find('text').prop('transform')).toBe('rotate(-90)');\\r\\n    });\\r\\n});\\r\\n\""],"sourceRoot":""}