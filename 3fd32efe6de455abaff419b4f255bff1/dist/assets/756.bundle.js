(window.webpackJsonp=window.webpackJsonp||[]).push([[756],{1855:function(t,e,n){"use strict";n.r(e),e.default="import {IReactVaporState} from '../../../ReactVapor';\r\nimport {SubNavigationSelector} from '../SubNavigationSelector';\r\n\r\ndescribe('SubNavigationSelector', () => {\r\n    const defaultState: IReactVaporState = {\r\n        subNavigations: [\r\n            {\r\n                id: 'ðŸŒ»',\r\n                selected: 'FloweyTheFlower',\r\n            },\r\n        ],\r\n    };\r\n\r\n    describe('getItem', () => {\r\n        it('should return falsy if the SubNavigation is not in the state', () => {\r\n            expect(SubNavigationSelector.getSubNavigation(defaultState, 'ðŸŒ¼')).toBeFalsy();\r\n        });\r\n\r\n        it('should return falsy if the id is empty', () => {\r\n            expect(SubNavigationSelector.getSubNavigation(defaultState, '')).toBeFalsy();\r\n        });\r\n\r\n        it('should return the current state if the SubNavigation is in the state', () => {\r\n            const subNavigation = defaultState.subNavigations[0];\r\n\r\n            expect(SubNavigationSelector.getSubNavigation(defaultState, 'ðŸŒ»')).toEqual(subNavigation);\r\n        });\r\n    });\r\n\r\n    describe('getItemSelected', () => {\r\n        it('should return an empty string if the SubNavigation is not in the state', () => {\r\n            expect(SubNavigationSelector.getSelectedItem(defaultState, 'ðŸŒ¼')).toEqual('');\r\n        });\r\n\r\n        it('should return an empty string if the id is empty', () => {\r\n            expect(SubNavigationSelector.getSelectedItem(defaultState, '')).toEqual('');\r\n        });\r\n\r\n        it('should return the selected item if the SubNavigation is in the state', () => {\r\n            const selectedItem = defaultState.subNavigations[0].selected;\r\n\r\n            expect(SubNavigationSelector.getSelectedItem(defaultState, 'ðŸŒ»')).toEqual(selectedItem);\r\n        });\r\n    });\r\n});\r\n"}}]);
//# sourceMappingURL=756.bundle.js.map