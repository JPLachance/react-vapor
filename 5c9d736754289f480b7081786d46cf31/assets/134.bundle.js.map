{"version":3,"sources":["webpack:///./src/components/examples/CheckboxExamples.tsx"],"names":["CheckboxExamples","Checkboxset","GroupableCheckboxConnectedExamples","description","checked","setChecked","title","level","label","id","clearSides","defaultChecked","disabled","indeterminate","onClick","isParent","parentId1","parentId","name","enabled","dispatch","undefined","defaultDisabled","parentId2"],"mappings":"wcAeaA,EAAqC,WAAM,OACpD,gBAAC,UAAO,KACJ,gBAACC,EAAW,MACZ,gBAACC,EAAkC,QAI3CF,EAAiBG,YAAc,gEAI/B,IAAMF,EAAuC,WACnC,0BAACG,EAAA,KAASC,EAAA,KAEhB,OACI,gBAAC,UAAO,CAACC,MAAM,gBACX,gBAAC,UAAO,CAACC,MAAO,EAAGD,MAAM,0BACrB,gBAAC,eAAY,CAACE,MAAM,iCAChB,gBAAC,oBAAiB,CAACC,GAAG,YAAYC,YAAU,GACxC,gBAAC,QAAK,+BAEV,gBAAC,oBAAiB,CAACD,GAAG,YAAYE,gBAAgB,EAAMD,YAAU,GAC9D,gBAAC,QAAK,4BAEV,gBAAC,oBAAiB,CAACD,GAAG,YAAYG,UAAU,EAAMF,YAAU,GACxD,gBAAC,QAAK,mCAEV,gBAAC,oBAAiB,CAACD,GAAG,YAAYI,eAAe,EAAMH,YAAU,GAC7D,gBAAC,QAAK,yEAEV,gBAAC,WAAQ,CAACD,GAAG,YAAYL,QAASA,EAASU,QAAS,WAAM,OAAAT,GAAYD,KAClE,gBAAC,QAAK,uCAIlB,gBAAC,UAAO,CAACG,MAAO,GACZ,gBAAC,eAAY,CAACC,MAAM,4BAChB,gBAAC,oBAAiB,CAACC,GAAG,yBAOpCP,EAA8D,WAOhE,OACI,gBAAC,UAAO,CAACK,MAAO,EAAGD,MAAM,wBACrB,gBAAC,UAAO,KACJ,gBAAC,eAAY,CAACE,MAAM,uEAChB,gBAAC,6BAA0B,CAACC,GAP1B,YAOyCM,UAAQ,EAACL,YAAU,GAC1D,gBAAC,QAAK,qCAEV,gBAAC,6BAA0B,CAACD,GAAIO,aAAeC,SAV7C,YAUkEN,gBAAgB,GAChF,gBAAC,QAAK,0BAEV,gBAAC,6BAA0B,CAACF,GAAIO,aAAeC,SAb7C,YAakEN,gBAAgB,GAChF,gBAAC,QAAK,0BAEV,gBAAC,6BAA0B,CAACF,GAAIO,aAAeC,SAhB7C,YAgBkEN,gBAAgB,GAChF,gBAAC,QAAK,0BAEV,gBAAC,6BAA0B,CAACF,GAAIO,aAAeC,SAnB7C,YAmBkEN,gBAAgB,GAChF,gBAAC,QAAK,2BAGd,4BAEJ,gBAAC,UAAO,KACJ,gBAAC,eAAY,CAACH,MAAM,gEAChB,2BACI,gBAAC,SAAM,CACHU,KAAM,oBACNC,SAAO,EACPL,QAAS,WAAM,OAlCFL,EAInB,iBAHd,IAAMW,SAAS,2CAAiCX,OAAIY,EAAWT,IAD/B,IAACH,EAAYG,MAqCjC,gBAAC,6BAA0B,CAACH,GAjC1B,YAiCyCM,UAAQ,EAACO,iBAAe,EAACZ,YAAU,GAC1E,gBAAC,QAAK,qCAEV,gBAAC,6BAA0B,CACvBD,GAAIc,aACJN,SAtCF,YAuCEN,gBAAgB,EAChBW,iBAAe,GAEf,gBAAC,QAAK,0BAEV,gBAAC,6BAA0B,CACvBb,GAAIc,aACJN,SA9CF,YA+CEN,gBAAgB,EAChBW,iBAAe,GAEf,gBAAC,QAAK,0BAEV,gBAAC,6BAA0B,CACvBb,GAAIc,aACJN,SAtDF,YAuDEN,gBAAgB,EAChBW,iBAAe,GAEf,gBAAC,QAAK,0BAEV,gBAAC,6BAA0B,CACvBb,GAAIc,aACJN,SA9DF,YA+DEN,gBAAgB,EAChBW,iBAAe,GAEf,gBAAC,QAAK","file":"assets/134.bundle.js","sourcesContent":["import * as React from 'react';\nimport {\n    Button,\n    Checkbox,\n    CheckboxConnected,\n    GroupableCheckboxConnected,\n    Label,\n    LabeledInput,\n    Section,\n    toggleDisabledAllGroupedCheckbox,\n} from 'react-vapor';\n\nimport {Store} from '../../Store';\nimport {ExampleComponent} from '../ComponentsInterface';\n\nexport const CheckboxExamples: ExampleComponent = () => (\n    <Section>\n        <Checkboxset />\n        <GroupableCheckboxConnectedExamples />\n    </Section>\n);\n\nCheckboxExamples.description = 'Checkboxes allow users to select multiple options from a set.';\n\n// start-print\n\nconst Checkboxset: React.FunctionComponent = () => {\n    const [checked, setChecked] = React.useState(false);\n\n    return (\n        <Section title=\"Checkbox set\">\n            <Section level={2} title=\"Checkboxes with labels\">\n                <LabeledInput label=\"The label of the checkbox set\">\n                    <CheckboxConnected id=\"checkbox1\" clearSides>\n                        <Label>An unchecked checkbox</Label>\n                    </CheckboxConnected>\n                    <CheckboxConnected id=\"checkbox2\" defaultChecked={true} clearSides>\n                        <Label>A checked checkbox</Label>\n                    </CheckboxConnected>\n                    <CheckboxConnected id=\"checkbox3\" disabled={true} clearSides>\n                        <Label>A force disabled checkbox</Label>\n                    </CheckboxConnected>\n                    <CheckboxConnected id=\"checkbox4\" indeterminate={true} clearSides>\n                        <Label>A force checked and indeterminate (partially selected) checkbox</Label>\n                    </CheckboxConnected>\n                    <Checkbox id=\"checkbox5\" checked={checked} onClick={() => setChecked(!checked)}>\n                        <Label>A checkbox with local state</Label>\n                    </Checkbox>\n                </LabeledInput>\n            </Section>\n            <Section level={2}>\n                <LabeledInput label=\"A checkbox with no label\">\n                    <CheckboxConnected id=\"checkbox-nolabel\" />\n                </LabeledInput>\n            </Section>\n        </Section>\n    );\n};\n\nconst GroupableCheckboxConnectedExamples: React.FunctionComponent = () => {\n    const toggleDisabledAllCheckboxes = (id: string, disabled?: boolean) => {\n        Store.dispatch(toggleDisabledAllGroupedCheckbox(id, undefined, disabled));\n    };\n    const parentId1 = 'parentId1';\n    const parentId2 = 'parentId2';\n\n    return (\n        <Section level={2} title=\"Groupable Checkboxes\">\n            <Section>\n                <LabeledInput label=\"A groupable checkbox with some child checkboxes selected by default\">\n                    <GroupableCheckboxConnected id={parentId1} isParent clearSides>\n                        <Label>A parent checkbox connected</Label>\n                    </GroupableCheckboxConnected>\n                    <GroupableCheckboxConnected id={parentId1 + 1} parentId={parentId1} defaultChecked={true}>\n                        <Label>Checkbox child 1</Label>\n                    </GroupableCheckboxConnected>\n                    <GroupableCheckboxConnected id={parentId1 + 2} parentId={parentId1} defaultChecked={false}>\n                        <Label>Checkbox child 2</Label>\n                    </GroupableCheckboxConnected>\n                    <GroupableCheckboxConnected id={parentId1 + 3} parentId={parentId1} defaultChecked={true}>\n                        <Label>Checkbox child 3</Label>\n                    </GroupableCheckboxConnected>\n                    <GroupableCheckboxConnected id={parentId1 + 4} parentId={parentId1} defaultChecked={false}>\n                        <Label>Checkbox child 4</Label>\n                    </GroupableCheckboxConnected>\n                </LabeledInput>\n                <br />\n            </Section>\n            <Section>\n                <LabeledInput label=\"A groupable checkbox with all checkboxes disabled or enabled\">\n                    <div>\n                        <Button\n                            name={'Toggle checkboxes'}\n                            enabled\n                            onClick={() => toggleDisabledAllCheckboxes(parentId2)}\n                        />\n                    </div>\n                    <GroupableCheckboxConnected id={parentId2} isParent defaultDisabled clearSides>\n                        <Label>A parent checkbox connected</Label>\n                    </GroupableCheckboxConnected>\n                    <GroupableCheckboxConnected\n                        id={parentId2 + 1}\n                        parentId={parentId2}\n                        defaultChecked={true}\n                        defaultDisabled\n                    >\n                        <Label>Checkbox child 1</Label>\n                    </GroupableCheckboxConnected>\n                    <GroupableCheckboxConnected\n                        id={parentId2 + 2}\n                        parentId={parentId2}\n                        defaultChecked={false}\n                        defaultDisabled\n                    >\n                        <Label>Checkbox child 2</Label>\n                    </GroupableCheckboxConnected>\n                    <GroupableCheckboxConnected\n                        id={parentId2 + 3}\n                        parentId={parentId2}\n                        defaultChecked={true}\n                        defaultDisabled\n                    >\n                        <Label>Checkbox child 3</Label>\n                    </GroupableCheckboxConnected>\n                    <GroupableCheckboxConnected\n                        id={parentId2 + 4}\n                        parentId={parentId2}\n                        defaultChecked={false}\n                        defaultDisabled\n                    >\n                        <Label>Checkbox child 4</Label>\n                    </GroupableCheckboxConnected>\n                </LabeledInput>\n            </Section>\n        </Section>\n    );\n};\n"],"sourceRoot":""}