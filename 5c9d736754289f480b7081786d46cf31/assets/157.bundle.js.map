{"version":3,"sources":["webpack:///./src/components/examples/ListBoxExampleConnected.tsx","webpack:///./src/components/examples/ListBoxExamples.tsx"],"names":["mapStateToProps","state","ownProps","listBoxExample","listBoxExampleState","id","items","options","mapDispatchToProps","dispatch","updateOptions","Math","floor","random","addListBoxExample","removeListBoxExample","componentWillMount","this","props","componentWillUnmount","handleOnClick","render","multi","key","classes","enabled","name","onClick","ListBoxExampleConnected","defaultMergeProps","idSingle","idMulti","triggerAlertFunction","item","alert","value","defaultItems","disabled","tooltip","title","placement","container","clickableItems","concat","onOptionClick","className","noResultItem","selected","generate"],"mappings":"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","file":"assets/157.bundle.js","sourcesContent":["import * as React from 'react';\r\nimport {\r\n    Button,\r\n    convertItemsBoxToStringList,\r\n    convertStringListToItemsBox,\r\n    IDispatch,\r\n    IItemBoxProps,\r\n    ListBoxConnected,\r\n    ReduxConnect,\r\n    ReduxUtils,\r\n} from 'react-vapor';\r\n\r\nimport {IReactVaporExampleState} from '../../Reducers';\r\nimport {addListBoxExample, removeListBoxExample, updateListBoxExample} from './ListBoxExampleActions';\r\n\r\ninterface IListBoxExamplesDispatchProps {\r\n    updateOptions: () => void;\r\n    addListBoxExample: () => void;\r\n    removeListBoxExample: () => void;\r\n}\r\n\r\ninterface IListBoxExamplesStateProps {\r\n    items?: IItemBoxProps[];\r\n}\r\n\r\ninterface IListBoxExamplesProps extends Partial<IListBoxExamplesDispatchProps>, Partial<IListBoxExamplesStateProps> {\r\n    id: string;\r\n    multi?: boolean;\r\n}\r\n\r\nconst randomValue1To100 = () => {\r\n    return Math.floor(Math.random() * 100 + 1);\r\n};\r\n\r\nconst mapStateToProps = (\r\n    state: IReactVaporExampleState,\r\n    ownProps: IListBoxExamplesProps\r\n): IListBoxExamplesStateProps => {\r\n    const listBoxExample = state.listBoxExampleState[ownProps.id];\r\n    if (listBoxExample) {\r\n        return {\r\n            items: convertStringListToItemsBox(listBoxExample.options),\r\n        };\r\n    }\r\n\r\n    return {};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: IDispatch, ownProps: IListBoxExamplesProps): IListBoxExamplesDispatchProps => ({\r\n    updateOptions: () => {\r\n        dispatch(\r\n            updateListBoxExample(ownProps.id, [\r\n                ...convertItemsBoxToStringList(ownProps.items),\r\n                `${randomValue1To100()}_new_value`,\r\n            ])\r\n        );\r\n    },\r\n    addListBoxExample: () => dispatch(addListBoxExample(ownProps.id, convertItemsBoxToStringList(ownProps.items))),\r\n    removeListBoxExample: () => dispatch(removeListBoxExample(ownProps.id)),\r\n});\r\n\r\n@ReduxConnect(mapStateToProps, mapDispatchToProps, ReduxUtils.defaultMergeProps)\r\nexport class ListBoxExampleConnected extends React.Component<IListBoxExamplesProps> {\r\n    componentWillMount() {\r\n        this.props.addListBoxExample();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.removeListBoxExample();\r\n    }\r\n\r\n    private handleOnClick() {\r\n        this.props.updateOptions();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ListBoxConnected id={this.props.id} items={this.props.items} multi={!!this.props.multi} />\r\n                <Button\r\n                    key={this.props.id + 'button'}\r\n                    classes={['my2']}\r\n                    enabled={true}\r\n                    name=\"Update options with a reset on selected values\"\r\n                    onClick={() => this.handleOnClick()}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {IItemBoxProps, ITooltipProps, ListBox, ListBoxConnected, UUID} from 'react-vapor';\r\n\r\nimport {ListBoxExampleConnected} from './ListBoxExampleConnected';\r\n\r\nexport class ListBoxExamples extends React.Component {\r\n    private idSingle: string = 'listbox_connected_updated_single';\r\n    private idMulti: string = 'listbox_connected_updated_multi';\r\n\r\n    render() {\r\n        const triggerAlertFunction = (item: IItemBoxProps) => {\r\n            alert(`The item value triggered is ${item.value}`);\r\n        };\r\n\r\n        const tooltip: ITooltipProps = {\r\n            title: 'title test',\r\n            placement: 'bottom',\r\n            container: 'body',\r\n        };\r\n        const defaultItems: IItemBoxProps[] = [\r\n            {value: 'test'},\r\n            {value: 'test1'},\r\n            {value: 'test2 disabled', disabled: true},\r\n            {value: 'test3', tooltip: tooltip},\r\n            {value: 'test4'},\r\n            {value: 'test5'},\r\n            {value: 'test6'},\r\n            {value: 'test7'},\r\n        ];\r\n\r\n        const clickableItems: IItemBoxProps[] = defaultItems.concat([\r\n            {\r\n                value: 'test8',\r\n                onOptionClick: triggerAlertFunction,\r\n            },\r\n        ]);\r\n\r\n        return (\r\n            <div className=\"mt2\">\r\n                <h1 className=\"text-blue mb1\">List Box</h1>\r\n\r\n                <div className=\"form-group\">\r\n                    <label className=\"form-control-label\">Default List Box</label>\r\n                    <div className=\"form-control\">\r\n                        <ListBox items={defaultItems} />\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label className=\"form-control-label\">List Box with no items</label>\r\n                    <div className=\"form-control\">\r\n                        <ListBox items={[]} noResultItem={{value: 'no items'}} />\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label className=\"form-control-label\">List Box with an trigger on click items</label>\r\n                    <div className=\"form-control\">\r\n                        <ListBox items={defaultItems} selected={['test1']} onOptionClick={triggerAlertFunction} />\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label className=\"form-control-label\">List Box with custom classes</label>\r\n                    <div className=\"form-control\">\r\n                        <ListBox items={defaultItems} classes={['bg-light-blue']} />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label className=\"form-control-label\">List Box with an onClick event on the last element</label>\r\n                    <div className=\"form-control\">\r\n                        <ListBox items={clickableItems} />\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label className=\"form-control-label\">List Box Connected (single)</label>\r\n                    <div className=\"form-control\">\r\n                        <ListBoxConnected id={UUID.generate()} items={defaultItems} />\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label className=\"form-control-label\">List Box Connected (multi)</label>\r\n                    <div className=\"form-control\">\r\n                        <ListBoxConnected id={UUID.generate()} items={defaultItems} multi />\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label className=\"form-control-label\">List Box Connected updated with new options (single)</label>\r\n                    <div className=\"form-control\">\r\n                        <ListBoxExampleConnected id={this.idSingle} items={defaultItems} />\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label className=\"form-control-label\">List Box Connected updated with new options (multi)</label>\r\n                    <div className=\"form-control\">\r\n                        <ListBoxExampleConnected id={this.idMulti} items={defaultItems} multi />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"],"sourceRoot":""}