{"version":3,"sources":["webpack:///./src/components/examples/DatePickerExamplesCommon.ts","webpack:////home/travis/build/coveo/react-vapor/node_modules/moment/locale sync en-ca","webpack:///./src/components/examples/DatePickerExamples.tsx"],"names":["SELECTION_BOXES","title","quickOptions","label","value","subtract","toDate","toString","Date","isRange","withTime","hasSetToNowButton","color","blue","defaultQuickOptions","SELECTION_BOXES_LONG","FOUR_SELECTION_BOXES","CALENDAR_SELECTION_RULES","test","date","startOf","isFor","all","getDay","lower","upper","endDate","diff","range","DATE_RANGE_EXAMPLE","add","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","DatePickerExamples","CalendarComponent","DatePickerComponents","DatesSelectionComponent","level","withReduxState","datesSelectionBoxes","selectionRules","initialDateRange","rangeLimit","days","message","readonly","isClearable","initiallyUnselected"],"mappings":"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","file":"assets/118.bundle.js","sourcesContent":["import * as moment from 'moment';\r\nimport {\r\n    CalendarSelectionRuleType,\r\n    DatePickerColors,\r\n    DatePickerDateRange,\r\n    DATES_SEPARATOR,\r\n    ICalendarSelectionRule,\r\n    IDatesSelectionBox,\r\n} from 'react-vapor';\r\n\r\nexport const SELECTION_BOXES: IDatesSelectionBox[] = [\r\n    {\r\n        title: 'Date range',\r\n        quickOptions: [\r\n            {\r\n                label: 'Last 10 seconds',\r\n                value: () =>\r\n                    moment()\r\n                        .subtract(10, 'seconds')\r\n                        .toDate()\r\n                        .toString() +\r\n                    DATES_SEPARATOR +\r\n                    new Date().toString(),\r\n            },\r\n            {\r\n                label: 'Last minute',\r\n                value: () =>\r\n                    moment()\r\n                        .subtract(1, 'minute')\r\n                        .toDate()\r\n                        .toString() +\r\n                    DATES_SEPARATOR +\r\n                    new Date().toString(),\r\n            },\r\n            {\r\n                label: 'Last 5 minutes',\r\n                value: () =>\r\n                    moment()\r\n                        .subtract(5, 'minutes')\r\n                        .toDate()\r\n                        .toString() +\r\n                    DATES_SEPARATOR +\r\n                    new Date().toString(),\r\n            },\r\n            {\r\n                label: 'Last 30 minutes',\r\n                value: () =>\r\n                    moment()\r\n                        .subtract(30, 'minutes')\r\n                        .toDate()\r\n                        .toString() +\r\n                    DATES_SEPARATOR +\r\n                    new Date().toString(),\r\n            },\r\n            {\r\n                label: 'Last hour',\r\n                value: () =>\r\n                    moment()\r\n                        .subtract(1, 'hour')\r\n                        .toDate()\r\n                        .toString() +\r\n                    DATES_SEPARATOR +\r\n                    new Date().toString(),\r\n            },\r\n            {\r\n                label: 'Last day',\r\n                value: () =>\r\n                    moment()\r\n                        .subtract(1, 'day')\r\n                        .toDate()\r\n                        .toString() +\r\n                    DATES_SEPARATOR +\r\n                    new Date().toString(),\r\n            },\r\n        ],\r\n        isRange: true,\r\n        withTime: true,\r\n        hasSetToNowButton: true,\r\n        color: DatePickerColors.blue,\r\n    },\r\n];\r\n\r\nconst defaultQuickOptions = [\r\n    {\r\n        label: 'Last day',\r\n        value: () =>\r\n            moment()\r\n                .subtract(1, 'day')\r\n                .toDate()\r\n                .toString() +\r\n            DATES_SEPARATOR +\r\n            new Date().toString(),\r\n    },\r\n    {\r\n        label: 'Last week',\r\n        value: () =>\r\n            moment()\r\n                .subtract(1, 'week')\r\n                .toDate()\r\n                .toString() +\r\n            DATES_SEPARATOR +\r\n            new Date().toString(),\r\n    },\r\n    {\r\n        label: 'Last month',\r\n        value: () =>\r\n            moment()\r\n                .subtract(1, 'month')\r\n                .toDate()\r\n                .toString() +\r\n            DATES_SEPARATOR +\r\n            new Date().toString(),\r\n    },\r\n    {\r\n        label: 'Last year',\r\n        value: () =>\r\n            moment()\r\n                .subtract(1, 'year')\r\n                .toDate()\r\n                .toString() +\r\n            DATES_SEPARATOR +\r\n            new Date().toString(),\r\n    },\r\n];\r\n\r\nexport const SELECTION_BOXES_LONG: IDatesSelectionBox[] = [\r\n    {\r\n        title: 'Date range',\r\n        quickOptions: defaultQuickOptions,\r\n        isRange: true,\r\n        withTime: true,\r\n        hasSetToNowButton: true,\r\n        color: DatePickerColors.blue,\r\n    },\r\n];\r\n\r\nexport const SELECTION_BOXES_LONG_WITHOUT_TIME: IDatesSelectionBox[] = [\r\n    {\r\n        title: 'Date range',\r\n        quickOptions: defaultQuickOptions,\r\n        isRange: true,\r\n        withTime: false,\r\n        hasSetToNowButton: true,\r\n        color: DatePickerColors.blue,\r\n    },\r\n];\r\n\r\nexport const SELECTION_BOXES_WITHOUT_TIME_AND_NOW: IDatesSelectionBox[] = [\r\n    {\r\n        title: 'Date range',\r\n        quickOptions: defaultQuickOptions,\r\n        isRange: true,\r\n        withTime: false,\r\n        hasSetToNowButton: false,\r\n        color: DatePickerColors.blue,\r\n    },\r\n];\r\n\r\nexport const FOUR_SELECTION_BOXES: IDatesSelectionBox[] = [\r\n    {\r\n        title: 'Date range',\r\n        quickOptions: [\r\n            {\r\n                label: 'Last 5 minutes',\r\n                value: () =>\r\n                    moment()\r\n                        .subtract(5, 'minutes')\r\n                        .toDate()\r\n                        .toString() +\r\n                    DATES_SEPARATOR +\r\n                    new Date().toString(),\r\n            },\r\n            {\r\n                label: 'Last 30 minutes',\r\n                value: () =>\r\n                    moment()\r\n                        .subtract(30, 'minutes')\r\n                        .toDate()\r\n                        .toString() +\r\n                    DATES_SEPARATOR +\r\n                    new Date().toString(),\r\n            },\r\n            {\r\n                label: 'Last hour',\r\n                value: () =>\r\n                    moment()\r\n                        .subtract(1, 'hour')\r\n                        .toDate()\r\n                        .toString() +\r\n                    DATES_SEPARATOR +\r\n                    new Date().toString(),\r\n            },\r\n            {\r\n                label: 'Last day',\r\n                value: () =>\r\n                    moment()\r\n                        .subtract(1, 'day')\r\n                        .toDate()\r\n                        .toString() +\r\n                    DATES_SEPARATOR +\r\n                    new Date().toString(),\r\n            },\r\n        ],\r\n        isRange: true,\r\n        withTime: true,\r\n        hasSetToNowButton: true,\r\n        color: DatePickerColors.blue,\r\n    },\r\n];\r\n\r\nexport const CALENDAR_SELECTION_RULES: ICalendarSelectionRule[] = [\r\n    {\r\n        test: (date: Date) =>\r\n            date >=\r\n            moment()\r\n                .startOf('day')\r\n                .toDate(), // You cannot select a date in the past\r\n        isFor: CalendarSelectionRuleType.all,\r\n    },\r\n    {\r\n        test: (date: Date) => date.getDay() !== 6, // You cannot start your selection on a Saturday\r\n        isFor: CalendarSelectionRuleType.lower,\r\n    },\r\n    {\r\n        test: (date: Date) => date.getDay() !== 0, // You cannot end your selection on a Sunday\r\n        isFor: CalendarSelectionRuleType.upper,\r\n    },\r\n    {\r\n        test: (date: Date, endDate: Date) => moment(endDate).diff(moment(date), 'day') >= 0, // The end of your selection cannot be before the start of your selection\r\n        isFor: CalendarSelectionRuleType.range,\r\n    },\r\n    {\r\n        test: (date: Date, endDate: Date) => moment(endDate).diff(moment(date), 'day') <= 7, // You cannot select more than 7 days at a time\r\n        isFor: CalendarSelectionRuleType.range,\r\n    },\r\n];\r\n\r\nexport const SELECTION_BOX: IDatesSelectionBox[] = [\r\n    {\r\n        title: 'Select date',\r\n        quickOptions: [\r\n            {\r\n                label: 'A year ago',\r\n                value: () =>\r\n                    moment()\r\n                        .subtract(1, 'year')\r\n                        .toDate()\r\n                        .toString(),\r\n            },\r\n            {\r\n                label: 'A month ago',\r\n                value: () =>\r\n                    moment()\r\n                        .subtract(1, 'month')\r\n                        .toDate()\r\n                        .toString(),\r\n            },\r\n            {\r\n                label: 'A week ago',\r\n                value: () =>\r\n                    moment()\r\n                        .subtract(1, 'week')\r\n                        .toDate()\r\n                        .toString(),\r\n            },\r\n            {\r\n                label: 'Yesterday',\r\n                value: () =>\r\n                    moment()\r\n                        .subtract(1, 'day')\r\n                        .toDate()\r\n                        .toString(),\r\n            },\r\n        ],\r\n        isRange: false,\r\n        withTime: false,\r\n        hasSetToNowButton: true,\r\n        color: DatePickerColors.blue,\r\n    },\r\n];\r\n\r\nexport const CALENDAR_SELECTION_RULES_SINGLE_DATE: ICalendarSelectionRule[] = [\r\n    {\r\n        test: (date: Date) => date.getFullYear() > 1700 || date.getFullYear() < 4000, // You cannot select a date before year 1700 and over 4000\r\n        isFor: CalendarSelectionRuleType.all,\r\n    },\r\n];\r\n\r\nexport const DATE_RANGE_EXAMPLE: DatePickerDateRange = [\r\n    moment().toDate(),\r\n    moment()\r\n        .add(3, 'day')\r\n        .toDate(),\r\n];\r\n","var map = {\n\t\"./en-ca\": 132,\n\t\"./en-ca.js\": 132\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 150;","import * as React from 'react';\r\nimport {\r\n    CalendarConnected,\r\n    DatePickerBox,\r\n    DatePickerDropdownConnected,\r\n    DatesSelectionConnected,\r\n    Section,\r\n} from 'react-vapor';\r\nimport * as _ from 'underscore';\r\n\r\nimport {ExampleComponent} from '../ComponentsInterface';\r\nimport {\r\n    CALENDAR_SELECTION_RULES,\r\n    DATE_RANGE_EXAMPLE,\r\n    FOUR_SELECTION_BOXES,\r\n    SELECTION_BOXES,\r\n} from './DatePickerExamplesCommon';\r\n\r\nexport const DatePickerExamples: ExampleComponent = () => (\r\n    <Section>\r\n        <CalendarComponent />\r\n        <DatePickerComponents />\r\n        <DatesSelectionComponent />\r\n    </Section>\r\n);\r\nDatePickerExamples.title = 'DatePicker';\r\n\r\nconst CalendarComponent: React.FunctionComponent = () => (\r\n    <Section title=\"Calendar component\">\r\n        <CalendarConnected id=\"calendar\" />\r\n    </Section>\r\n);\r\n\r\n// start-print\r\n\r\nconst DatePickerComponents: React.FunctionComponent = () => (\r\n    <Section title=\"Date pickers\">\r\n        <Section level={2} title=\"DatePickerBox\">\r\n            <DatePickerBox id=\"date-picker-box\" withReduxState datesSelectionBoxes={SELECTION_BOXES} />\r\n        </Section>\r\n        <Section level={2} title=\"DatePicker dropdowns\">\r\n            <Section level={3} title=\"simple date picker dropdown\">\r\n                <DatePickerDropdownConnected\r\n                    id=\"date-picker-dropdown\"\r\n                    datesSelectionBoxes={SELECTION_BOXES}\r\n                    selectionRules={CALENDAR_SELECTION_RULES}\r\n                    initialDateRange={DATE_RANGE_EXAMPLE} // optionnal\r\n                />\r\n            </Section>\r\n            <Section level={3} title=\"DatePicker dropdown with a range limit of 3 days\">\r\n                <DatePickerDropdownConnected\r\n                    id=\"date-picker-dropdown-1\"\r\n                    datesSelectionBoxes={[\r\n                        _.extend({}, SELECTION_BOXES[0], {rangeLimit: {days: 3, message: 'Date limit exceeded'}}),\r\n                    ]}\r\n                    selectionRules={CALENDAR_SELECTION_RULES}\r\n                />\r\n            </Section>\r\n            <Section level={3} title=\"Date picker dropdown disabled\">\r\n                <DatePickerDropdownConnected\r\n                    id=\"date-picker-dropdown-disabled\"\r\n                    datesSelectionBoxes={SELECTION_BOXES}\r\n                    selectionRules={CALENDAR_SELECTION_RULES}\r\n                    readonly\r\n                />\r\n            </Section>\r\n            <Section level={3} title=\"Clearable date picker dropdown initially unselected with Redux state\">\r\n                <DatePickerDropdownConnected\r\n                    id=\"date-picker-dropdown-2\"\r\n                    datesSelectionBoxes={FOUR_SELECTION_BOXES}\r\n                    selectionRules={[]}\r\n                    isClearable\r\n                    initiallyUnselected\r\n                />\r\n            </Section>\r\n        </Section>\r\n    </Section>\r\n);\r\n\r\nconst DatesSelectionComponent: React.FunctionComponent = () => (\r\n    <Section level={2} title=\"Dates selection component\">\r\n        <Section level={3} title=\"Dates selection with hours\">\r\n            <DatesSelectionConnected hasSetToNowButton withTime isRange id=\"dates-selection\" />\r\n        </Section>\r\n    </Section>\r\n);\r\n"],"sourceRoot":""}